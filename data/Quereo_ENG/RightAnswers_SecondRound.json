{
    "comment": "corpus des Q/R qui n'ont pas besoin d'être évaluées par un expert (correspondance totale avec les réponses de référence)",
    "data": {
        "0": {
            "ID": "quereo_1.0",
            "QUESTION": "Who was the doctoral supervisor of Albert Einstein?",
            "SHORT_ANSWER": [
                "Alfred_Kleiner"
            ],
            "FULL_EXPERT_ANSWER": [
                "Albert Einstein’s thesis supervisor was Alfred Kleiner",
                "the doctoral supervisor of Albert Einstein was Alfred Kleiner",
                "Alfred Kleiner was the doctoral supervisor of Albert Einstein"
            ],
            "GENERATED_ANSWER": "The doctoral supervisor of albert einstein was alfred kleiner",
            "MISSING_WORD": ":",
            "Need_LM_Assessing": true,
            "CONFIGURATION_FILE": [
                "BERTMULTI_A1_XLNET_xlnet-large-cased.json",
                "BERT_A2_GPT2_gpt2-medium.json",
                "BERT_A2_XLM_xlm-mlm-en-2048.json",
                "BERT_A2_BERT_bert-base-cased.json",
                "BERT_A1_BERT_bert-base-cased.json",
                "BERTMULTI_A1_BERT_bert-large-cased.json",
                "BERTMULTI_A1_GPT2_gpt2.json",
                "BERTMULTI_A2_GPT_openai-gpt.json",
                "BERTMULTI_A1_BERT_bert-base-uncased.json",
                "BERT_A1_GPT2_gpt2-medium.json",
                "BERTMULTI_A2_GPT2_gpt2.json",
                "BERTMULTI_A1_GPT2_gpt2-large.json",
                "BERTMULTI_A2_BERT_bert-base-cased.json",
                "BERT_A1_BERT_bert-base-multilingual-cased.json",
                "BERTMULTI_A1_XLM_xlm-mlm-en-2048.json",
                "BERT_A2_BERT_bert-base-uncased.json",
                "BERT_A2_XLNET_xlnet-large-cased.json",
                "BERTMULTI_A2_XLM_xlm-mlm-en-2048.json",
                "BERT_A2_GPT2_gpt2.json",
                "BERT_A2_XLM_xlm-clm-enfr-1024.json",
                "BERT_A2_GPT_openai-gpt.json",
                "BERT_A1_GPT2_gpt2.json",
                "BERTMULTI_A1_BERT_bert-base-cased.json",
                "BERTMULTI_A2_BERT_bert-base-uncased.json",
                "BERTMULTI_A1_GPT2_gpt2-medium.json",
                "BERT_A1_BERT_bert-base-uncased.json",
                "BERT_A2_XLM_xlm-mlm-enfr-1024.json",
                "BERT_A2_BERT_bert-large-cased.json",
                "BERT_A1_XLNET_xlnet-large-cased.json",
                "BERTMULTI_A2_GPT2_gpt2-large.json",
                "BERTMULTI_A2_XLM_xlm-clm-enfr-1024.json",
                "BERT_A1_XLM_xlm-clm-enfr-1024.json",
                "BERTMULTI_A1_GPT_openai-gpt.json",
                "BERTMULTI_A2_XLM_xlm-mlm-enfr-1024.json",
                "BERT_A1_GPT2_gpt2-large.json",
                "BERTMULTI_A1_XLM_xlm-mlm-enfr-1024.json",
                "BERTMULTI_A2_GPT2_gpt2-medium.json",
                "BERT_A1_BERT_bert-large-cased.json",
                "BERTMULTI_A2_BERT_bert-base-multilingual-cased.json",
                "BERTMULTI_A1_BERT_bert-base-multilingual-cased.json",
                "BERT_A2_GPT2_gpt2-large.json",
                "BERT_A1_XLM_xlm-mlm-enfr-1024.json",
                "BERT_A2_BERT_bert-base-multilingual-cased.json",
                "BERT_A1_XLM_xlm-mlm-en-2048.json",
                "BERTMULTI_A1_XLM_xlm-clm-enfr-1024.json",
                "BERT_A1_GPT_openai-gpt.json",
                "BERTMULTI_A2_BERT_bert-large-cased.json",
                "BERTMULTI_A2_XLNET_xlnet-large-cased.json"
            ]
        },
        "1": {
            "ID": "quereo_4.3",
            "QUESTION": "Who was on the Apollo 11 mission?",
            "SHORT_ANSWER": [
                "Buzz_Aldrin",
                "Michael_Collins",
                "Neil_Armstrong"
            ],
            "FULL_EXPERT_ANSWER": [
                "Neil Armstrong, Edwin Aldrin Jr., Michael Collins participated in Apollo 11 mission.",
                "Buzz Aldrin, Michael Collins and Neil Armstrong were on the Apollo 11 mission."
            ],
            "GENERATED_ANSWER": "Buzz aldrin, michael collins and neil armstrong were on the apollo 11 mission",
            "MISSING_WORD": ".",
            "Need_LM_Assessing": false,
            "CONFIGURATION_FILE": [
                "BERTMULTI_A1_XLNET_xlnet-large-cased.json",
                "BERT_A2_GPT2_gpt2-medium.json",
                "BERT_A2_XLM_xlm-mlm-en-2048.json",
                "BERT_A2_BERT_bert-base-cased.json",
                "BERT_A1_BERT_bert-base-cased.json",
                "BERTMULTI_A1_BERT_bert-large-cased.json",
                "BERTMULTI_A1_GPT2_gpt2.json",
                "BERTMULTI_A2_GPT_openai-gpt.json",
                "BERTMULTI_A1_BERT_bert-base-uncased.json",
                "BERT_A1_GPT2_gpt2-medium.json",
                "BERTMULTI_A2_GPT2_gpt2.json",
                "BERTMULTI_A1_GPT2_gpt2-large.json",
                "BERTMULTI_A2_BERT_bert-base-cased.json",
                "BERT_A1_BERT_bert-base-multilingual-cased.json",
                "BERTMULTI_A1_XLM_xlm-mlm-en-2048.json",
                "BERT_A2_BERT_bert-base-uncased.json",
                "BERT_A2_XLNET_xlnet-large-cased.json",
                "BERTMULTI_A2_XLM_xlm-mlm-en-2048.json",
                "BERT_A2_GPT2_gpt2.json",
                "BERT_A2_XLM_xlm-clm-enfr-1024.json",
                "BERT_A2_GPT_openai-gpt.json",
                "BERT_A1_GPT2_gpt2.json",
                "BERTMULTI_A1_BERT_bert-base-cased.json",
                "BERTMULTI_A2_BERT_bert-base-uncased.json",
                "BERTMULTI_A1_GPT2_gpt2-medium.json",
                "BERT_A1_BERT_bert-base-uncased.json",
                "BERT_A2_XLM_xlm-mlm-enfr-1024.json",
                "BERT_A2_BERT_bert-large-cased.json",
                "BERT_A1_XLNET_xlnet-large-cased.json",
                "BERTMULTI_A2_GPT2_gpt2-large.json",
                "BERTMULTI_A2_XLM_xlm-clm-enfr-1024.json",
                "BERT_A1_XLM_xlm-clm-enfr-1024.json",
                "BERTMULTI_A1_GPT_openai-gpt.json",
                "BERTMULTI_A2_XLM_xlm-mlm-enfr-1024.json",
                "BERT_A1_GPT2_gpt2-large.json",
                "BERTMULTI_A1_XLM_xlm-mlm-enfr-1024.json",
                "BERTMULTI_A2_GPT2_gpt2-medium.json",
                "BERT_A1_BERT_bert-large-cased.json",
                "BERTMULTI_A2_BERT_bert-base-multilingual-cased.json",
                "BERTMULTI_A1_BERT_bert-base-multilingual-cased.json",
                "BERT_A2_GPT2_gpt2-large.json",
                "BERT_A1_XLM_xlm-mlm-enfr-1024.json",
                "BERT_A2_BERT_bert-base-multilingual-cased.json",
                "BERT_A1_XLM_xlm-mlm-en-2048.json",
                "BERTMULTI_A1_XLM_xlm-clm-enfr-1024.json",
                "BERT_A1_GPT_openai-gpt.json",
                "BERTMULTI_A2_BERT_bert-large-cased.json",
                "BERTMULTI_A2_XLNET_xlnet-large-cased.json"
            ]
        },
        "2": {
            "ID": "quereo_6.5",
            "QUESTION": "What is in a chocolate chip cookie?",
            "SHORT_ANSWER": [
                "Chocolate_chip",
                "Egg",
                "Butter",
                "Sodium_bicarbonate"
            ],
            "FULL_EXPERT_ANSWER": [
                "Flour is an ingredient in chocolate cookies.",
                "Chocolate chip, Egg, Butter and Sodium bicarbonate are in a chocolate chip cookie."
            ],
            "GENERATED_ANSWER": "Chocolate chip, egg, butter and sodium bicarbonate are in a chocolate chip cookie",
            "MISSING_WORD": ".",
            "Need_LM_Assessing": false,
            "CONFIGURATION_FILE": [
                "BERTMULTI_A1_XLNET_xlnet-large-cased.json",
                "BERT_A2_GPT2_gpt2-medium.json",
                "BERT_A2_XLM_xlm-mlm-en-2048.json",
                "BERT_A2_BERT_bert-base-cased.json",
                "BERT_A1_BERT_bert-base-cased.json",
                "BERTMULTI_A1_BERT_bert-large-cased.json",
                "BERTMULTI_A1_GPT2_gpt2.json",
                "BERTMULTI_A2_GPT_openai-gpt.json",
                "BERTMULTI_A1_BERT_bert-base-uncased.json",
                "BERT_A1_GPT2_gpt2-medium.json",
                "BERTMULTI_A2_GPT2_gpt2.json",
                "BERTMULTI_A1_GPT2_gpt2-large.json",
                "BERTMULTI_A2_BERT_bert-base-cased.json",
                "BERT_A1_BERT_bert-base-multilingual-cased.json",
                "BERTMULTI_A1_XLM_xlm-mlm-en-2048.json",
                "BERT_A2_BERT_bert-base-uncased.json",
                "BERT_A2_XLNET_xlnet-large-cased.json",
                "BERTMULTI_A2_XLM_xlm-mlm-en-2048.json",
                "BERT_A2_GPT2_gpt2.json",
                "BERT_A2_XLM_xlm-clm-enfr-1024.json",
                "BERT_A2_GPT_openai-gpt.json",
                "BERT_A1_GPT2_gpt2.json",
                "BERTMULTI_A1_BERT_bert-base-cased.json",
                "BERTMULTI_A2_BERT_bert-base-uncased.json",
                "BERTMULTI_A1_GPT2_gpt2-medium.json",
                "BERT_A1_BERT_bert-base-uncased.json",
                "BERT_A2_XLM_xlm-mlm-enfr-1024.json",
                "BERT_A2_BERT_bert-large-cased.json",
                "BERT_A1_XLNET_xlnet-large-cased.json",
                "BERTMULTI_A2_GPT2_gpt2-large.json",
                "BERTMULTI_A2_XLM_xlm-clm-enfr-1024.json",
                "BERT_A1_XLM_xlm-clm-enfr-1024.json",
                "BERTMULTI_A1_GPT_openai-gpt.json",
                "BERTMULTI_A2_XLM_xlm-mlm-enfr-1024.json",
                "BERT_A1_GPT2_gpt2-large.json",
                "BERTMULTI_A1_XLM_xlm-mlm-enfr-1024.json",
                "BERTMULTI_A2_GPT2_gpt2-medium.json",
                "BERT_A1_BERT_bert-large-cased.json",
                "BERTMULTI_A2_BERT_bert-base-multilingual-cased.json",
                "BERTMULTI_A1_BERT_bert-base-multilingual-cased.json",
                "BERT_A2_GPT2_gpt2-large.json",
                "BERT_A1_XLM_xlm-mlm-enfr-1024.json",
                "BERT_A2_BERT_bert-base-multilingual-cased.json",
                "BERT_A1_XLM_xlm-mlm-en-2048.json",
                "BERTMULTI_A1_XLM_xlm-clm-enfr-1024.json",
                "BERT_A1_GPT_openai-gpt.json",
                "BERTMULTI_A2_BERT_bert-large-cased.json",
                "BERTMULTI_A2_XLNET_xlnet-large-cased.json"
            ]
        },
        "3": {
            "ID": "quereo_7.6",
            "QUESTION": "Was the wife of president Lincoln called Mary?",
            "SHORT_ANSWER": [
                "No"
            ],
            "FULL_EXPERT_ANSWER": [
                "No, President Lincoln’s wife wasn’t named Mary.",
                "No, the wife of president Lincoln was not called Mary."
            ],
            "GENERATED_ANSWER": "No, the wife of president lincoln was not called mary",
            "MISSING_WORD": "None",
            "Need_LM_Assessing": false,
            "CONFIGURATION_FILE": [
                "BERTMULTI_A1_XLNET_xlnet-large-cased.json",
                "BERT_A2_GPT2_gpt2-medium.json",
                "BERT_A2_XLM_xlm-mlm-en-2048.json",
                "BERT_A2_BERT_bert-base-cased.json",
                "BERT_A1_BERT_bert-base-cased.json",
                "BERTMULTI_A1_BERT_bert-large-cased.json",
                "BERTMULTI_A1_GPT2_gpt2.json",
                "BERTMULTI_A2_GPT_openai-gpt.json",
                "BERTMULTI_A1_BERT_bert-base-uncased.json",
                "BERT_A1_GPT2_gpt2-medium.json",
                "BERTMULTI_A2_GPT2_gpt2.json",
                "BERTMULTI_A1_GPT2_gpt2-large.json",
                "BERTMULTI_A2_BERT_bert-base-cased.json",
                "BERT_A1_BERT_bert-base-multilingual-cased.json",
                "BERTMULTI_A1_XLM_xlm-mlm-en-2048.json",
                "BERT_A2_BERT_bert-base-uncased.json",
                "BERT_A2_XLNET_xlnet-large-cased.json",
                "BERTMULTI_A2_XLM_xlm-mlm-en-2048.json",
                "BERT_A2_GPT2_gpt2.json",
                "BERT_A2_XLM_xlm-clm-enfr-1024.json",
                "BERT_A2_GPT_openai-gpt.json",
                "BERT_A1_GPT2_gpt2.json",
                "BERTMULTI_A1_BERT_bert-base-cased.json",
                "BERTMULTI_A2_BERT_bert-base-uncased.json",
                "BERTMULTI_A1_GPT2_gpt2-medium.json",
                "BERT_A1_BERT_bert-base-uncased.json",
                "BERT_A2_XLM_xlm-mlm-enfr-1024.json",
                "BERT_A2_BERT_bert-large-cased.json",
                "BERT_A1_XLNET_xlnet-large-cased.json",
                "BERTMULTI_A2_GPT2_gpt2-large.json",
                "BERTMULTI_A2_XLM_xlm-clm-enfr-1024.json",
                "BERT_A1_XLM_xlm-clm-enfr-1024.json",
                "BERTMULTI_A1_GPT_openai-gpt.json",
                "BERTMULTI_A2_XLM_xlm-mlm-enfr-1024.json",
                "BERT_A1_GPT2_gpt2-large.json",
                "BERTMULTI_A1_XLM_xlm-mlm-enfr-1024.json",
                "BERTMULTI_A2_GPT2_gpt2-medium.json",
                "BERT_A1_BERT_bert-large-cased.json",
                "BERTMULTI_A2_BERT_bert-base-multilingual-cased.json",
                "BERTMULTI_A1_BERT_bert-base-multilingual-cased.json",
                "BERT_A2_GPT2_gpt2-large.json",
                "BERT_A1_XLM_xlm-mlm-enfr-1024.json",
                "BERT_A2_BERT_bert-base-multilingual-cased.json",
                "BERT_A1_XLM_xlm-mlm-en-2048.json",
                "BERTMULTI_A1_XLM_xlm-clm-enfr-1024.json",
                "BERT_A1_GPT_openai-gpt.json",
                "BERTMULTI_A2_BERT_bert-large-cased.json",
                "BERTMULTI_A2_XLNET_xlnet-large-cased.json"
            ]
        },
        "4": {
            "ID": "quereo_9.8",
            "QUESTION": "In which U.S. state is Mount McKinley located?",
            "SHORT_ANSWER": [
                "Alaska"
            ],
            "FULL_EXPERT_ANSWER": [
                "Mount Mckinley is in the state of Alaska.",
                "Mount Mckinley is located in Alaska."
            ],
            "GENERATED_ANSWER": "Mount mckinley is located in alaska",
            "MISSING_WORD": "in",
            "Need_LM_Assessing": true,
            "CONFIGURATION_FILE": [
                "BERTMULTI_A1_XLNET_xlnet-large-cased.json",
                "BERT_A2_GPT2_gpt2-medium.json",
                "BERT_A2_XLM_xlm-mlm-en-2048.json",
                "BERT_A2_BERT_bert-base-cased.json",
                "BERT_A1_BERT_bert-base-cased.json",
                "BERTMULTI_A1_BERT_bert-large-cased.json",
                "BERTMULTI_A1_GPT2_gpt2.json",
                "BERTMULTI_A2_GPT_openai-gpt.json",
                "BERTMULTI_A1_BERT_bert-base-uncased.json",
                "BERT_A1_GPT2_gpt2-medium.json",
                "BERTMULTI_A2_GPT2_gpt2.json",
                "BERTMULTI_A1_GPT2_gpt2-large.json",
                "BERTMULTI_A2_BERT_bert-base-cased.json",
                "BERT_A1_BERT_bert-base-multilingual-cased.json",
                "BERTMULTI_A1_XLM_xlm-mlm-en-2048.json",
                "BERT_A2_BERT_bert-base-uncased.json",
                "BERT_A2_XLNET_xlnet-large-cased.json",
                "BERTMULTI_A2_XLM_xlm-mlm-en-2048.json",
                "BERT_A2_GPT2_gpt2.json",
                "BERT_A2_XLM_xlm-clm-enfr-1024.json",
                "BERT_A2_GPT_openai-gpt.json",
                "BERT_A1_GPT2_gpt2.json",
                "BERTMULTI_A1_BERT_bert-base-cased.json",
                "BERTMULTI_A2_BERT_bert-base-uncased.json",
                "BERTMULTI_A1_GPT2_gpt2-medium.json",
                "BERT_A1_BERT_bert-base-uncased.json",
                "BERT_A2_XLM_xlm-mlm-enfr-1024.json",
                "BERT_A2_BERT_bert-large-cased.json",
                "BERT_A1_XLNET_xlnet-large-cased.json",
                "BERTMULTI_A2_GPT2_gpt2-large.json",
                "BERTMULTI_A2_XLM_xlm-clm-enfr-1024.json",
                "BERT_A1_XLM_xlm-clm-enfr-1024.json",
                "BERTMULTI_A1_GPT_openai-gpt.json",
                "BERTMULTI_A2_XLM_xlm-mlm-enfr-1024.json",
                "BERT_A1_GPT2_gpt2-large.json",
                "BERTMULTI_A1_XLM_xlm-mlm-enfr-1024.json",
                "BERTMULTI_A2_GPT2_gpt2-medium.json",
                "BERT_A1_BERT_bert-large-cased.json",
                "BERTMULTI_A2_BERT_bert-base-multilingual-cased.json",
                "BERTMULTI_A1_BERT_bert-base-multilingual-cased.json",
                "BERT_A2_GPT2_gpt2-large.json",
                "BERT_A1_XLM_xlm-mlm-enfr-1024.json",
                "BERT_A2_BERT_bert-base-multilingual-cased.json",
                "BERT_A1_XLM_xlm-mlm-en-2048.json",
                "BERTMULTI_A1_XLM_xlm-clm-enfr-1024.json",
                "BERT_A1_GPT_openai-gpt.json",
                "BERTMULTI_A2_BERT_bert-large-cased.json",
                "BERTMULTI_A2_XLNET_xlnet-large-cased.json"
            ]
        },
        "5": {
            "ID": "quereo_10.9",
            "QUESTION": "Which Indian company has the most employees?",
            "SHORT_ANSWER": [
                "Indian_Railways"
            ],
            "FULL_EXPERT_ANSWER": [
                "Indian Railways is the Indian company with the most employees.",
                "Indian Railways has the most employees."
            ],
            "GENERATED_ANSWER": "Indian railways has the most employees",
            "MISSING_WORD": ".",
            "Need_LM_Assessing": false,
            "CONFIGURATION_FILE": [
                "BERTMULTI_A1_XLNET_xlnet-large-cased.json",
                "BERT_A2_GPT2_gpt2-medium.json",
                "BERT_A2_XLM_xlm-mlm-en-2048.json",
                "BERT_A2_BERT_bert-base-cased.json",
                "BERT_A1_BERT_bert-base-cased.json",
                "BERTMULTI_A1_BERT_bert-large-cased.json",
                "BERTMULTI_A1_GPT2_gpt2.json",
                "BERTMULTI_A2_GPT_openai-gpt.json",
                "BERTMULTI_A1_BERT_bert-base-uncased.json",
                "BERT_A1_GPT2_gpt2-medium.json",
                "BERTMULTI_A2_GPT2_gpt2.json",
                "BERTMULTI_A1_GPT2_gpt2-large.json",
                "BERTMULTI_A2_BERT_bert-base-cased.json",
                "BERT_A1_BERT_bert-base-multilingual-cased.json",
                "BERTMULTI_A1_XLM_xlm-mlm-en-2048.json",
                "BERT_A2_BERT_bert-base-uncased.json",
                "BERT_A2_XLNET_xlnet-large-cased.json",
                "BERTMULTI_A2_XLM_xlm-mlm-en-2048.json",
                "BERT_A2_GPT2_gpt2.json",
                "BERT_A2_XLM_xlm-clm-enfr-1024.json",
                "BERT_A2_GPT_openai-gpt.json",
                "BERT_A1_GPT2_gpt2.json",
                "BERTMULTI_A1_BERT_bert-base-cased.json",
                "BERTMULTI_A2_BERT_bert-base-uncased.json",
                "BERTMULTI_A1_GPT2_gpt2-medium.json",
                "BERT_A1_BERT_bert-base-uncased.json",
                "BERT_A2_XLM_xlm-mlm-enfr-1024.json",
                "BERT_A2_BERT_bert-large-cased.json",
                "BERT_A1_XLNET_xlnet-large-cased.json",
                "BERTMULTI_A2_GPT2_gpt2-large.json",
                "BERTMULTI_A2_XLM_xlm-clm-enfr-1024.json",
                "BERT_A1_XLM_xlm-clm-enfr-1024.json",
                "BERTMULTI_A1_GPT_openai-gpt.json",
                "BERTMULTI_A2_XLM_xlm-mlm-enfr-1024.json",
                "BERT_A1_GPT2_gpt2-large.json",
                "BERTMULTI_A1_XLM_xlm-mlm-enfr-1024.json",
                "BERTMULTI_A2_GPT2_gpt2-medium.json",
                "BERT_A1_BERT_bert-large-cased.json",
                "BERTMULTI_A2_BERT_bert-base-multilingual-cased.json",
                "BERTMULTI_A1_BERT_bert-base-multilingual-cased.json",
                "BERT_A2_GPT2_gpt2-large.json",
                "BERT_A1_XLM_xlm-mlm-enfr-1024.json",
                "BERT_A2_BERT_bert-base-multilingual-cased.json",
                "BERT_A1_XLM_xlm-mlm-en-2048.json",
                "BERTMULTI_A1_XLM_xlm-clm-enfr-1024.json",
                "BERT_A1_GPT_openai-gpt.json",
                "BERTMULTI_A2_BERT_bert-large-cased.json",
                "BERTMULTI_A2_XLNET_xlnet-large-cased.json"
            ]
        },
        "6": {
            "ID": "quereo_15.14",
            "QUESTION": "Who played Gus Fring in Breaking Bad?",
            "SHORT_ANSWER": [
                "Giancarlo_Esposito"
            ],
            "FULL_EXPERT_ANSWER": [
                "Gus Fring’s role in Breaking Bad was played by Giancarlo Esposito.",
                "Giancarlo Esposito played Gus Fring in Breaking Bad"
            ],
            "GENERATED_ANSWER": "Giancarlo esposito played gus fring in breaking bad",
            "MISSING_WORD": ".",
            "Need_LM_Assessing": false,
            "CONFIGURATION_FILE": [
                "BERTMULTI_A1_XLNET_xlnet-large-cased.json",
                "BERT_A2_GPT2_gpt2-medium.json",
                "BERT_A2_XLM_xlm-mlm-en-2048.json",
                "BERT_A2_BERT_bert-base-cased.json",
                "BERT_A1_BERT_bert-base-cased.json",
                "BERTMULTI_A1_BERT_bert-large-cased.json",
                "BERTMULTI_A1_GPT2_gpt2.json",
                "BERTMULTI_A2_GPT_openai-gpt.json",
                "BERTMULTI_A1_BERT_bert-base-uncased.json",
                "BERT_A1_GPT2_gpt2-medium.json",
                "BERTMULTI_A2_GPT2_gpt2.json",
                "BERTMULTI_A1_GPT2_gpt2-large.json",
                "BERTMULTI_A2_BERT_bert-base-cased.json",
                "BERT_A1_BERT_bert-base-multilingual-cased.json",
                "BERTMULTI_A1_XLM_xlm-mlm-en-2048.json",
                "BERT_A2_BERT_bert-base-uncased.json",
                "BERT_A2_XLNET_xlnet-large-cased.json",
                "BERTMULTI_A2_XLM_xlm-mlm-en-2048.json",
                "BERT_A2_GPT2_gpt2.json",
                "BERT_A2_XLM_xlm-clm-enfr-1024.json",
                "BERT_A2_GPT_openai-gpt.json",
                "BERT_A1_GPT2_gpt2.json",
                "BERTMULTI_A1_BERT_bert-base-cased.json",
                "BERTMULTI_A2_BERT_bert-base-uncased.json",
                "BERTMULTI_A1_GPT2_gpt2-medium.json",
                "BERT_A1_BERT_bert-base-uncased.json",
                "BERT_A2_XLM_xlm-mlm-enfr-1024.json",
                "BERT_A2_BERT_bert-large-cased.json",
                "BERT_A1_XLNET_xlnet-large-cased.json",
                "BERTMULTI_A2_GPT2_gpt2-large.json",
                "BERTMULTI_A2_XLM_xlm-clm-enfr-1024.json",
                "BERT_A1_XLM_xlm-clm-enfr-1024.json",
                "BERTMULTI_A1_GPT_openai-gpt.json",
                "BERTMULTI_A2_XLM_xlm-mlm-enfr-1024.json",
                "BERT_A1_GPT2_gpt2-large.json",
                "BERTMULTI_A1_XLM_xlm-mlm-enfr-1024.json",
                "BERTMULTI_A2_GPT2_gpt2-medium.json",
                "BERT_A1_BERT_bert-large-cased.json",
                "BERTMULTI_A2_BERT_bert-base-multilingual-cased.json",
                "BERTMULTI_A1_BERT_bert-base-multilingual-cased.json",
                "BERT_A2_GPT2_gpt2-large.json",
                "BERT_A1_XLM_xlm-mlm-enfr-1024.json",
                "BERT_A2_BERT_bert-base-multilingual-cased.json",
                "BERT_A1_XLM_xlm-mlm-en-2048.json",
                "BERTMULTI_A1_XLM_xlm-clm-enfr-1024.json",
                "BERT_A1_GPT_openai-gpt.json",
                "BERTMULTI_A2_BERT_bert-large-cased.json",
                "BERTMULTI_A2_XLNET_xlnet-large-cased.json"
            ]
        },
        "7": {
            "ID": "quereo_16.15",
            "QUESTION": "Who wrote Harry Potter?",
            "SHORT_ANSWER": [
                "J._K._Rowling"
            ],
            "FULL_EXPERT_ANSWER": [
                "J. K. Rowling wrote Harry Potter."
            ],
            "GENERATED_ANSWER": "J. k. rowling wrote harry potter",
            "MISSING_WORD": ".",
            "Need_LM_Assessing": false,
            "CONFIGURATION_FILE": [
                "BERTMULTI_A1_XLNET_xlnet-large-cased.json",
                "BERT_A2_GPT2_gpt2-medium.json",
                "BERT_A2_XLM_xlm-mlm-en-2048.json",
                "BERT_A2_BERT_bert-base-cased.json",
                "BERT_A1_BERT_bert-base-cased.json",
                "BERTMULTI_A1_BERT_bert-large-cased.json",
                "BERTMULTI_A1_GPT2_gpt2.json",
                "BERTMULTI_A2_GPT_openai-gpt.json",
                "BERTMULTI_A1_BERT_bert-base-uncased.json",
                "BERT_A1_GPT2_gpt2-medium.json",
                "BERTMULTI_A2_GPT2_gpt2.json",
                "BERTMULTI_A1_GPT2_gpt2-large.json",
                "BERTMULTI_A2_BERT_bert-base-cased.json",
                "BERT_A1_BERT_bert-base-multilingual-cased.json",
                "BERTMULTI_A1_XLM_xlm-mlm-en-2048.json",
                "BERT_A2_BERT_bert-base-uncased.json",
                "BERT_A2_XLNET_xlnet-large-cased.json",
                "BERTMULTI_A2_XLM_xlm-mlm-en-2048.json",
                "BERT_A2_GPT2_gpt2.json",
                "BERT_A2_XLM_xlm-clm-enfr-1024.json",
                "BERT_A2_GPT_openai-gpt.json",
                "BERT_A1_GPT2_gpt2.json",
                "BERTMULTI_A1_BERT_bert-base-cased.json",
                "BERTMULTI_A2_BERT_bert-base-uncased.json",
                "BERTMULTI_A1_GPT2_gpt2-medium.json",
                "BERT_A1_BERT_bert-base-uncased.json",
                "BERT_A2_XLM_xlm-mlm-enfr-1024.json",
                "BERT_A2_BERT_bert-large-cased.json",
                "BERT_A1_XLNET_xlnet-large-cased.json",
                "BERTMULTI_A2_GPT2_gpt2-large.json",
                "BERTMULTI_A2_XLM_xlm-clm-enfr-1024.json",
                "BERT_A1_XLM_xlm-clm-enfr-1024.json",
                "BERTMULTI_A1_GPT_openai-gpt.json",
                "BERTMULTI_A2_XLM_xlm-mlm-enfr-1024.json",
                "BERT_A1_GPT2_gpt2-large.json",
                "BERTMULTI_A1_XLM_xlm-mlm-enfr-1024.json",
                "BERTMULTI_A2_GPT2_gpt2-medium.json",
                "BERT_A1_BERT_bert-large-cased.json",
                "BERTMULTI_A2_BERT_bert-base-multilingual-cased.json",
                "BERTMULTI_A1_BERT_bert-base-multilingual-cased.json",
                "BERT_A2_GPT2_gpt2-large.json",
                "BERT_A1_XLM_xlm-mlm-enfr-1024.json",
                "BERT_A2_BERT_bert-base-multilingual-cased.json",
                "BERT_A1_XLM_xlm-mlm-en-2048.json",
                "BERTMULTI_A1_XLM_xlm-clm-enfr-1024.json",
                "BERT_A1_GPT_openai-gpt.json",
                "BERTMULTI_A2_BERT_bert-large-cased.json",
                "BERTMULTI_A2_XLNET_xlnet-large-cased.json"
            ]
        },
        "8": {
            "ID": "quereo_17.16",
            "QUESTION": "Which actors play in Big Bang Theory?",
            "SHORT_ANSWER": [
                "Mayim_Bialik",
                "Johnny_Galecki",
                "Sara_Gilbert",
                "Melissa_Rauch",
                "Simon_Helberg",
                "Jim_Parsons",
                "Kevin_Sussman",
                "Kunal_Nayyar",
                "Kaley_Cuoco"
            ],
            "FULL_EXPERT_ANSWER": [
                "The main actors of The Big Bang Theory are: Kaley Cuoco, Jim Parsons, Mayim Bialik, Sara Gilbert, Melissa Rauch, Johnny Galecki, Simon Helberg, Aarti Mann, Kunal Nayyar, Kate Micucci, Bob Newhart, Kevin Sussman, John Ross Bowie, Alice Amter, Carol Ann Susi",
                "Mayim Bialik, Johnny Galecki, Sara Gilbert, Melissa Rauch, Simon Helberg, Jim Parsons, Kevin Sussman, Kunal Nayyar and Kaley Cuoco play in Big Bang Theory"
            ],
            "GENERATED_ANSWER": "Mayim bialik, johnny galecki, sara gilbert, melissa rauch, simon helberg, jim parsons, kevin sussman, kunal nayyar and kaley cuoco play in big bang theory",
            "MISSING_WORD": ".",
            "Need_LM_Assessing": false,
            "CONFIGURATION_FILE": [
                "BERTMULTI_A1_XLNET_xlnet-large-cased.json",
                "BERT_A2_GPT2_gpt2-medium.json",
                "BERT_A2_XLM_xlm-mlm-en-2048.json",
                "BERT_A2_BERT_bert-base-cased.json",
                "BERT_A1_BERT_bert-base-cased.json",
                "BERTMULTI_A1_BERT_bert-large-cased.json",
                "BERTMULTI_A1_GPT2_gpt2.json",
                "BERTMULTI_A2_GPT_openai-gpt.json",
                "BERTMULTI_A1_BERT_bert-base-uncased.json",
                "BERT_A1_GPT2_gpt2-medium.json",
                "BERTMULTI_A2_GPT2_gpt2.json",
                "BERTMULTI_A1_GPT2_gpt2-large.json",
                "BERTMULTI_A2_BERT_bert-base-cased.json",
                "BERT_A1_BERT_bert-base-multilingual-cased.json",
                "BERTMULTI_A1_XLM_xlm-mlm-en-2048.json",
                "BERT_A2_BERT_bert-base-uncased.json",
                "BERT_A2_XLNET_xlnet-large-cased.json",
                "BERTMULTI_A2_XLM_xlm-mlm-en-2048.json",
                "BERT_A2_GPT2_gpt2.json",
                "BERT_A2_XLM_xlm-clm-enfr-1024.json",
                "BERT_A2_GPT_openai-gpt.json",
                "BERT_A1_GPT2_gpt2.json",
                "BERTMULTI_A1_BERT_bert-base-cased.json",
                "BERTMULTI_A2_BERT_bert-base-uncased.json",
                "BERTMULTI_A1_GPT2_gpt2-medium.json",
                "BERT_A1_BERT_bert-base-uncased.json",
                "BERT_A2_XLM_xlm-mlm-enfr-1024.json",
                "BERT_A2_BERT_bert-large-cased.json",
                "BERT_A1_XLNET_xlnet-large-cased.json",
                "BERTMULTI_A2_GPT2_gpt2-large.json",
                "BERTMULTI_A2_XLM_xlm-clm-enfr-1024.json",
                "BERT_A1_XLM_xlm-clm-enfr-1024.json",
                "BERTMULTI_A1_GPT_openai-gpt.json",
                "BERTMULTI_A2_XLM_xlm-mlm-enfr-1024.json",
                "BERT_A1_GPT2_gpt2-large.json",
                "BERTMULTI_A1_XLM_xlm-mlm-enfr-1024.json",
                "BERTMULTI_A2_GPT2_gpt2-medium.json",
                "BERT_A1_BERT_bert-large-cased.json",
                "BERTMULTI_A2_BERT_bert-base-multilingual-cased.json",
                "BERTMULTI_A1_BERT_bert-base-multilingual-cased.json",
                "BERT_A2_GPT2_gpt2-large.json",
                "BERT_A1_XLM_xlm-mlm-enfr-1024.json",
                "BERT_A2_BERT_bert-base-multilingual-cased.json",
                "BERT_A1_XLM_xlm-mlm-en-2048.json",
                "BERTMULTI_A1_XLM_xlm-clm-enfr-1024.json",
                "BERT_A1_GPT_openai-gpt.json",
                "BERTMULTI_A2_BERT_bert-large-cased.json",
                "BERTMULTI_A2_XLNET_xlnet-large-cased.json"
            ]
        },
        "9": {
            "ID": "quereo_20.19",
            "QUESTION": "How many goals did Pelé score?",
            "SHORT_ANSWER": [
                "679"
            ],
            "FULL_EXPERT_ANSWER": [
                "Pelé scored 679 goals"
            ],
            "GENERATED_ANSWER": "Pelé scored 679 goals",
            "MISSING_WORD": ":",
            "Need_LM_Assessing": true,
            "CONFIGURATION_FILE": [
                "BERTMULTI_A1_XLNET_xlnet-large-cased.json",
                "BERTMULTI_A2_GPT_openai-gpt.json",
                "BERTMULTI_A1_XLM_xlm-mlm-en-2048.json",
                "BERTMULTI_A1_GPT_openai-gpt.json"
            ]
        },
        "10": {
            "ID": "quereo_22.21",
            "QUESTION": "Which computer scientist won an oscar?",
            "SHORT_ANSWER": [
                "Edwin_Catmull"
            ],
            "FULL_EXPERT_ANSWER": [
                "Edwin Catmull, Demetri Terzopoulos, Henrik Wann Jensen, Ken Perlin, William Reeves, John Knoll are Oscar-winning computer scientists",
                "Edwin Catmull won an oscar"
            ],
            "GENERATED_ANSWER": "Edwin catmull won an oscar",
            "MISSING_WORD": ".",
            "Need_LM_Assessing": false,
            "CONFIGURATION_FILE": [
                "BERTMULTI_A1_XLNET_xlnet-large-cased.json",
                "BERT_A2_GPT2_gpt2-medium.json",
                "BERT_A2_XLM_xlm-mlm-en-2048.json",
                "BERT_A2_BERT_bert-base-cased.json",
                "BERT_A1_BERT_bert-base-cased.json",
                "BERTMULTI_A1_BERT_bert-large-cased.json",
                "BERTMULTI_A1_GPT2_gpt2.json",
                "BERTMULTI_A2_GPT_openai-gpt.json",
                "BERTMULTI_A1_BERT_bert-base-uncased.json",
                "BERT_A1_GPT2_gpt2-medium.json",
                "BERTMULTI_A2_GPT2_gpt2.json",
                "BERTMULTI_A1_GPT2_gpt2-large.json",
                "BERTMULTI_A2_BERT_bert-base-cased.json",
                "BERT_A1_BERT_bert-base-multilingual-cased.json",
                "BERTMULTI_A1_XLM_xlm-mlm-en-2048.json",
                "BERT_A2_BERT_bert-base-uncased.json",
                "BERT_A2_XLNET_xlnet-large-cased.json",
                "BERTMULTI_A2_XLM_xlm-mlm-en-2048.json",
                "BERT_A2_GPT2_gpt2.json",
                "BERT_A2_XLM_xlm-clm-enfr-1024.json",
                "BERT_A2_GPT_openai-gpt.json",
                "BERT_A1_GPT2_gpt2.json",
                "BERTMULTI_A1_BERT_bert-base-cased.json",
                "BERTMULTI_A2_BERT_bert-base-uncased.json",
                "BERTMULTI_A1_GPT2_gpt2-medium.json",
                "BERT_A1_BERT_bert-base-uncased.json",
                "BERT_A2_XLM_xlm-mlm-enfr-1024.json",
                "BERT_A2_BERT_bert-large-cased.json",
                "BERT_A1_XLNET_xlnet-large-cased.json",
                "BERTMULTI_A2_GPT2_gpt2-large.json",
                "BERTMULTI_A2_XLM_xlm-clm-enfr-1024.json",
                "BERT_A1_XLM_xlm-clm-enfr-1024.json",
                "BERTMULTI_A1_GPT_openai-gpt.json",
                "BERTMULTI_A2_XLM_xlm-mlm-enfr-1024.json",
                "BERT_A1_GPT2_gpt2-large.json",
                "BERTMULTI_A1_XLM_xlm-mlm-enfr-1024.json",
                "BERTMULTI_A2_GPT2_gpt2-medium.json",
                "BERT_A1_BERT_bert-large-cased.json",
                "BERTMULTI_A2_BERT_bert-base-multilingual-cased.json",
                "BERTMULTI_A1_BERT_bert-base-multilingual-cased.json",
                "BERT_A2_GPT2_gpt2-large.json",
                "BERT_A1_XLM_xlm-mlm-enfr-1024.json",
                "BERT_A2_BERT_bert-base-multilingual-cased.json",
                "BERT_A1_XLM_xlm-mlm-en-2048.json",
                "BERTMULTI_A1_XLM_xlm-clm-enfr-1024.json",
                "BERT_A1_GPT_openai-gpt.json",
                "BERTMULTI_A2_BERT_bert-large-cased.json",
                "BERTMULTI_A2_XLNET_xlnet-large-cased.json"
            ]
        },
        "11": {
            "ID": "quereo_26.25",
            "QUESTION": "Who does the voice of Bart Simpson?",
            "SHORT_ANSWER": [
                "Nancy_Cartwright"
            ],
            "FULL_EXPERT_ANSWER": [
                "Nancy Cartwright is doing Bart Simpson’s voice.",
                "Nancy Cartwright does the voice of Bart Simpson"
            ],
            "GENERATED_ANSWER": "Nancy cartwright does the voice of bart simpson",
            "MISSING_WORD": ".",
            "Need_LM_Assessing": false,
            "CONFIGURATION_FILE": [
                "BERTMULTI_A1_XLNET_xlnet-large-cased.json",
                "BERTMULTI_A1_BERT_bert-large-cased.json",
                "BERTMULTI_A1_GPT2_gpt2.json",
                "BERTMULTI_A2_GPT_openai-gpt.json",
                "BERTMULTI_A1_BERT_bert-base-uncased.json",
                "BERTMULTI_A2_GPT2_gpt2.json",
                "BERTMULTI_A1_GPT2_gpt2-large.json",
                "BERTMULTI_A2_BERT_bert-base-cased.json",
                "BERTMULTI_A1_XLM_xlm-mlm-en-2048.json",
                "BERTMULTI_A2_XLM_xlm-mlm-en-2048.json",
                "BERTMULTI_A1_BERT_bert-base-cased.json",
                "BERTMULTI_A2_BERT_bert-base-uncased.json",
                "BERTMULTI_A1_GPT2_gpt2-medium.json",
                "BERTMULTI_A2_GPT2_gpt2-large.json",
                "BERTMULTI_A2_XLM_xlm-clm-enfr-1024.json",
                "BERTMULTI_A1_GPT_openai-gpt.json",
                "BERTMULTI_A2_XLM_xlm-mlm-enfr-1024.json",
                "BERTMULTI_A1_XLM_xlm-mlm-enfr-1024.json",
                "BERTMULTI_A2_GPT2_gpt2-medium.json",
                "BERTMULTI_A2_BERT_bert-base-multilingual-cased.json",
                "BERTMULTI_A1_BERT_bert-base-multilingual-cased.json",
                "BERTMULTI_A1_XLM_xlm-clm-enfr-1024.json",
                "BERTMULTI_A2_BERT_bert-large-cased.json",
                "BERTMULTI_A2_XLNET_xlnet-large-cased.json"
            ]
        },
        "12": {
            "ID": "quereo_27.26",
            "QUESTION": "Who composed the soundtrack for Cameron's Titanic?",
            "SHORT_ANSWER": [
                "James_Horner"
            ],
            "FULL_EXPERT_ANSWER": [
                "James Horner composed the soundtrack for Cameron’s film: Titanic.",
                "James Horner composed the soundtrack for Cameron's Titanic."
            ],
            "GENERATED_ANSWER": "James horner composed the soundtrack for cameron's titanic",
            "MISSING_WORD": ".",
            "Need_LM_Assessing": false,
            "CONFIGURATION_FILE": [
                "BERTMULTI_A1_XLNET_xlnet-large-cased.json",
                "BERT_A2_GPT2_gpt2-medium.json",
                "BERT_A2_XLM_xlm-mlm-en-2048.json",
                "BERT_A2_BERT_bert-base-cased.json",
                "BERT_A1_BERT_bert-base-cased.json",
                "BERTMULTI_A1_BERT_bert-large-cased.json",
                "BERTMULTI_A1_GPT2_gpt2.json",
                "BERTMULTI_A2_GPT_openai-gpt.json",
                "BERTMULTI_A1_BERT_bert-base-uncased.json",
                "BERT_A1_GPT2_gpt2-medium.json",
                "BERTMULTI_A2_GPT2_gpt2.json",
                "BERTMULTI_A1_GPT2_gpt2-large.json",
                "BERTMULTI_A2_BERT_bert-base-cased.json",
                "BERT_A1_BERT_bert-base-multilingual-cased.json",
                "BERTMULTI_A1_XLM_xlm-mlm-en-2048.json",
                "BERT_A2_BERT_bert-base-uncased.json",
                "BERT_A2_XLNET_xlnet-large-cased.json",
                "BERTMULTI_A2_XLM_xlm-mlm-en-2048.json",
                "BERT_A2_GPT2_gpt2.json",
                "BERT_A2_XLM_xlm-clm-enfr-1024.json",
                "BERT_A2_GPT_openai-gpt.json",
                "BERT_A1_GPT2_gpt2.json",
                "BERTMULTI_A1_BERT_bert-base-cased.json",
                "BERTMULTI_A2_BERT_bert-base-uncased.json",
                "BERTMULTI_A1_GPT2_gpt2-medium.json",
                "BERT_A1_BERT_bert-base-uncased.json",
                "BERT_A2_XLM_xlm-mlm-enfr-1024.json",
                "BERT_A2_BERT_bert-large-cased.json",
                "BERT_A1_XLNET_xlnet-large-cased.json",
                "BERTMULTI_A2_GPT2_gpt2-large.json",
                "BERTMULTI_A2_XLM_xlm-clm-enfr-1024.json",
                "BERT_A1_XLM_xlm-clm-enfr-1024.json",
                "BERTMULTI_A1_GPT_openai-gpt.json",
                "BERTMULTI_A2_XLM_xlm-mlm-enfr-1024.json",
                "BERT_A1_GPT2_gpt2-large.json",
                "BERTMULTI_A1_XLM_xlm-mlm-enfr-1024.json",
                "BERTMULTI_A2_GPT2_gpt2-medium.json",
                "BERT_A1_BERT_bert-large-cased.json",
                "BERTMULTI_A2_BERT_bert-base-multilingual-cased.json",
                "BERTMULTI_A1_BERT_bert-base-multilingual-cased.json",
                "BERT_A2_GPT2_gpt2-large.json",
                "BERT_A1_XLM_xlm-mlm-enfr-1024.json",
                "BERT_A2_BERT_bert-base-multilingual-cased.json",
                "BERT_A1_XLM_xlm-mlm-en-2048.json",
                "BERTMULTI_A1_XLM_xlm-clm-enfr-1024.json",
                "BERT_A1_GPT_openai-gpt.json",
                "BERTMULTI_A2_BERT_bert-large-cased.json",
                "BERTMULTI_A2_XLNET_xlnet-large-cased.json"
            ]
        },
        "13": {
            "ID": "quereo_33.31",
            "QUESTION": "In which city did Nikos Kazantzakis die?",
            "SHORT_ANSWER": [
                "Freiburg_im_Breisgau"
            ],
            "FULL_EXPERT_ANSWER": [
                "Nikos Kazantzakis died in Freiburg's suburb Munzingen",
                "Nikos Kazantzakis died in Freiburg im Breisgau"
            ],
            "GENERATED_ANSWER": "Nikos kazantzakis died in freiburg im breisgau",
            "MISSING_WORD": "in",
            "Need_LM_Assessing": true,
            "CONFIGURATION_FILE": [
                "BERTMULTI_A1_XLNET_xlnet-large-cased.json",
                "BERT_A2_GPT2_gpt2-medium.json",
                "BERT_A2_XLM_xlm-mlm-en-2048.json",
                "BERT_A2_BERT_bert-base-cased.json",
                "BERT_A1_BERT_bert-base-cased.json",
                "BERTMULTI_A1_BERT_bert-large-cased.json",
                "BERTMULTI_A1_GPT2_gpt2.json",
                "BERTMULTI_A2_GPT_openai-gpt.json",
                "BERTMULTI_A1_BERT_bert-base-uncased.json",
                "BERT_A1_GPT2_gpt2-medium.json",
                "BERTMULTI_A2_GPT2_gpt2.json",
                "BERTMULTI_A1_GPT2_gpt2-large.json",
                "BERTMULTI_A2_BERT_bert-base-cased.json",
                "BERT_A1_BERT_bert-base-multilingual-cased.json",
                "BERTMULTI_A1_XLM_xlm-mlm-en-2048.json",
                "BERT_A2_BERT_bert-base-uncased.json",
                "BERT_A2_XLNET_xlnet-large-cased.json",
                "BERTMULTI_A2_XLM_xlm-mlm-en-2048.json",
                "BERT_A2_GPT2_gpt2.json",
                "BERT_A2_XLM_xlm-clm-enfr-1024.json",
                "BERT_A2_GPT_openai-gpt.json",
                "BERT_A1_GPT2_gpt2.json",
                "BERTMULTI_A1_BERT_bert-base-cased.json",
                "BERTMULTI_A2_BERT_bert-base-uncased.json",
                "BERTMULTI_A1_GPT2_gpt2-medium.json",
                "BERT_A1_BERT_bert-base-uncased.json",
                "BERT_A2_XLM_xlm-mlm-enfr-1024.json",
                "BERT_A2_BERT_bert-large-cased.json",
                "BERT_A1_XLNET_xlnet-large-cased.json",
                "BERTMULTI_A2_GPT2_gpt2-large.json",
                "BERTMULTI_A2_XLM_xlm-clm-enfr-1024.json",
                "BERT_A1_XLM_xlm-clm-enfr-1024.json",
                "BERTMULTI_A1_GPT_openai-gpt.json",
                "BERTMULTI_A2_XLM_xlm-mlm-enfr-1024.json",
                "BERT_A1_GPT2_gpt2-large.json",
                "BERTMULTI_A1_XLM_xlm-mlm-enfr-1024.json",
                "BERTMULTI_A2_GPT2_gpt2-medium.json",
                "BERT_A1_BERT_bert-large-cased.json",
                "BERTMULTI_A2_BERT_bert-base-multilingual-cased.json",
                "BERTMULTI_A1_BERT_bert-base-multilingual-cased.json",
                "BERT_A2_GPT2_gpt2-large.json",
                "BERT_A1_XLM_xlm-mlm-enfr-1024.json",
                "BERT_A2_BERT_bert-base-multilingual-cased.json",
                "BERT_A1_XLM_xlm-mlm-en-2048.json",
                "BERTMULTI_A1_XLM_xlm-clm-enfr-1024.json",
                "BERT_A1_GPT_openai-gpt.json",
                "BERTMULTI_A2_BERT_bert-large-cased.json",
                "BERTMULTI_A2_XLNET_xlnet-large-cased.json"
            ]
        },
        "14": {
            "ID": "quereo_36.34",
            "QUESTION": "Does Neymar play for Real Madrid?",
            "SHORT_ANSWER": [
                "No"
            ],
            "FULL_EXPERT_ANSWER": [
                "Neymar doesn’t play for Real Madrid.",
                "No, Neymar does not play for Real Madrid."
            ],
            "GENERATED_ANSWER": "No, neymar does not play for real madrid",
            "MISSING_WORD": "None",
            "Need_LM_Assessing": false,
            "CONFIGURATION_FILE": [
                "BERTMULTI_A1_XLNET_xlnet-large-cased.json",
                "BERT_A2_GPT2_gpt2-medium.json",
                "BERT_A2_XLM_xlm-mlm-en-2048.json",
                "BERT_A2_BERT_bert-base-cased.json",
                "BERT_A1_BERT_bert-base-cased.json",
                "BERTMULTI_A1_BERT_bert-large-cased.json",
                "BERTMULTI_A1_GPT2_gpt2.json",
                "BERTMULTI_A2_GPT_openai-gpt.json",
                "BERTMULTI_A1_BERT_bert-base-uncased.json",
                "BERT_A1_GPT2_gpt2-medium.json",
                "BERTMULTI_A2_GPT2_gpt2.json",
                "BERTMULTI_A1_GPT2_gpt2-large.json",
                "BERTMULTI_A2_BERT_bert-base-cased.json",
                "BERT_A1_BERT_bert-base-multilingual-cased.json",
                "BERTMULTI_A1_XLM_xlm-mlm-en-2048.json",
                "BERT_A2_BERT_bert-base-uncased.json",
                "BERT_A2_XLNET_xlnet-large-cased.json",
                "BERTMULTI_A2_XLM_xlm-mlm-en-2048.json",
                "BERT_A2_GPT2_gpt2.json",
                "BERT_A2_XLM_xlm-clm-enfr-1024.json",
                "BERT_A2_GPT_openai-gpt.json",
                "BERT_A1_GPT2_gpt2.json",
                "BERTMULTI_A1_BERT_bert-base-cased.json",
                "BERTMULTI_A2_BERT_bert-base-uncased.json",
                "BERTMULTI_A1_GPT2_gpt2-medium.json",
                "BERT_A1_BERT_bert-base-uncased.json",
                "BERT_A2_XLM_xlm-mlm-enfr-1024.json",
                "BERT_A2_BERT_bert-large-cased.json",
                "BERT_A1_XLNET_xlnet-large-cased.json",
                "BERTMULTI_A2_GPT2_gpt2-large.json",
                "BERTMULTI_A2_XLM_xlm-clm-enfr-1024.json",
                "BERT_A1_XLM_xlm-clm-enfr-1024.json",
                "BERTMULTI_A1_GPT_openai-gpt.json",
                "BERTMULTI_A2_XLM_xlm-mlm-enfr-1024.json",
                "BERT_A1_GPT2_gpt2-large.json",
                "BERTMULTI_A1_XLM_xlm-mlm-enfr-1024.json",
                "BERTMULTI_A2_GPT2_gpt2-medium.json",
                "BERT_A1_BERT_bert-large-cased.json",
                "BERTMULTI_A2_BERT_bert-base-multilingual-cased.json",
                "BERTMULTI_A1_BERT_bert-base-multilingual-cased.json",
                "BERT_A2_GPT2_gpt2-large.json",
                "BERT_A1_XLM_xlm-mlm-enfr-1024.json",
                "BERT_A2_BERT_bert-base-multilingual-cased.json",
                "BERT_A1_XLM_xlm-mlm-en-2048.json",
                "BERTMULTI_A1_XLM_xlm-clm-enfr-1024.json",
                "BERT_A1_GPT_openai-gpt.json",
                "BERTMULTI_A2_BERT_bert-large-cased.json",
                "BERTMULTI_A2_XLNET_xlnet-large-cased.json"
            ]
        },
        "15": {
            "ID": "quereo_40.36",
            "QUESTION": "In which city are the headquarters of the United Nations?",
            "SHORT_ANSWER": [
                "New_York_City"
            ],
            "FULL_EXPERT_ANSWER": [
                "The headquarters of the United Nations is in New York.",
                "the headquarters of the United Nations are in New York City"
            ],
            "GENERATED_ANSWER": "The headquarters of the united nations are in new york city",
            "MISSING_WORD": "in",
            "Need_LM_Assessing": true,
            "CONFIGURATION_FILE": [
                "BERTMULTI_A1_XLNET_xlnet-large-cased.json",
                "BERT_A2_GPT2_gpt2-medium.json",
                "BERT_A2_XLM_xlm-mlm-en-2048.json",
                "BERT_A2_BERT_bert-base-cased.json",
                "BERT_A1_BERT_bert-base-cased.json",
                "BERTMULTI_A1_BERT_bert-large-cased.json",
                "BERTMULTI_A1_GPT2_gpt2.json",
                "BERTMULTI_A2_GPT_openai-gpt.json",
                "BERTMULTI_A1_BERT_bert-base-uncased.json",
                "BERT_A1_GPT2_gpt2-medium.json",
                "BERTMULTI_A2_GPT2_gpt2.json",
                "BERTMULTI_A1_GPT2_gpt2-large.json",
                "BERTMULTI_A2_BERT_bert-base-cased.json",
                "BERT_A1_BERT_bert-base-multilingual-cased.json",
                "BERTMULTI_A1_XLM_xlm-mlm-en-2048.json",
                "BERT_A2_BERT_bert-base-uncased.json",
                "BERT_A2_XLNET_xlnet-large-cased.json",
                "BERTMULTI_A2_XLM_xlm-mlm-en-2048.json",
                "BERT_A2_GPT2_gpt2.json",
                "BERT_A2_XLM_xlm-clm-enfr-1024.json",
                "BERT_A2_GPT_openai-gpt.json",
                "BERT_A1_GPT2_gpt2.json",
                "BERTMULTI_A1_BERT_bert-base-cased.json",
                "BERTMULTI_A2_BERT_bert-base-uncased.json",
                "BERTMULTI_A1_GPT2_gpt2-medium.json",
                "BERT_A1_BERT_bert-base-uncased.json",
                "BERT_A2_XLM_xlm-mlm-enfr-1024.json",
                "BERT_A2_BERT_bert-large-cased.json",
                "BERT_A1_XLNET_xlnet-large-cased.json",
                "BERTMULTI_A2_GPT2_gpt2-large.json",
                "BERTMULTI_A2_XLM_xlm-clm-enfr-1024.json",
                "BERT_A1_XLM_xlm-clm-enfr-1024.json",
                "BERTMULTI_A1_GPT_openai-gpt.json",
                "BERTMULTI_A2_XLM_xlm-mlm-enfr-1024.json",
                "BERT_A1_GPT2_gpt2-large.json",
                "BERTMULTI_A1_XLM_xlm-mlm-enfr-1024.json",
                "BERTMULTI_A2_GPT2_gpt2-medium.json",
                "BERT_A1_BERT_bert-large-cased.json",
                "BERTMULTI_A2_BERT_bert-base-multilingual-cased.json",
                "BERTMULTI_A1_BERT_bert-base-multilingual-cased.json",
                "BERT_A2_GPT2_gpt2-large.json",
                "BERT_A1_XLM_xlm-mlm-enfr-1024.json",
                "BERT_A2_BERT_bert-base-multilingual-cased.json",
                "BERT_A1_XLM_xlm-mlm-en-2048.json",
                "BERTMULTI_A1_XLM_xlm-clm-enfr-1024.json",
                "BERT_A1_GPT_openai-gpt.json",
                "BERTMULTI_A2_BERT_bert-large-cased.json",
                "BERTMULTI_A2_XLNET_xlnet-large-cased.json"
            ]
        },
        "16": {
            "ID": "quereo_41.37",
            "QUESTION": "In which city was the president of Montenegro born?",
            "SHORT_ANSWER": [
                "Belgrade"
            ],
            "FULL_EXPERT_ANSWER": [
                "The president of Montenegro was born in Belgrade."
            ],
            "GENERATED_ANSWER": "The president of montenegro was born in belgrade",
            "MISSING_WORD": "in",
            "Need_LM_Assessing": true,
            "CONFIGURATION_FILE": [
                "BERTMULTI_A1_XLNET_xlnet-large-cased.json",
                "BERT_A2_GPT2_gpt2-medium.json",
                "BERT_A2_XLM_xlm-mlm-en-2048.json",
                "BERT_A2_BERT_bert-base-cased.json",
                "BERT_A1_BERT_bert-base-cased.json",
                "BERTMULTI_A1_BERT_bert-large-cased.json",
                "BERTMULTI_A1_GPT2_gpt2.json",
                "BERTMULTI_A2_GPT_openai-gpt.json",
                "BERTMULTI_A1_BERT_bert-base-uncased.json",
                "BERT_A1_GPT2_gpt2-medium.json",
                "BERTMULTI_A2_GPT2_gpt2.json",
                "BERTMULTI_A1_GPT2_gpt2-large.json",
                "BERTMULTI_A2_BERT_bert-base-cased.json",
                "BERT_A1_BERT_bert-base-multilingual-cased.json",
                "BERTMULTI_A1_XLM_xlm-mlm-en-2048.json",
                "BERT_A2_BERT_bert-base-uncased.json",
                "BERT_A2_XLNET_xlnet-large-cased.json",
                "BERTMULTI_A2_XLM_xlm-mlm-en-2048.json",
                "BERT_A2_GPT2_gpt2.json",
                "BERT_A2_XLM_xlm-clm-enfr-1024.json",
                "BERT_A2_GPT_openai-gpt.json",
                "BERT_A1_GPT2_gpt2.json",
                "BERTMULTI_A1_BERT_bert-base-cased.json",
                "BERTMULTI_A2_BERT_bert-base-uncased.json",
                "BERTMULTI_A1_GPT2_gpt2-medium.json",
                "BERT_A1_BERT_bert-base-uncased.json",
                "BERT_A2_XLM_xlm-mlm-enfr-1024.json",
                "BERT_A2_BERT_bert-large-cased.json",
                "BERT_A1_XLNET_xlnet-large-cased.json",
                "BERTMULTI_A2_GPT2_gpt2-large.json",
                "BERTMULTI_A2_XLM_xlm-clm-enfr-1024.json",
                "BERT_A1_XLM_xlm-clm-enfr-1024.json",
                "BERTMULTI_A1_GPT_openai-gpt.json",
                "BERTMULTI_A2_XLM_xlm-mlm-enfr-1024.json",
                "BERT_A1_GPT2_gpt2-large.json",
                "BERTMULTI_A1_XLM_xlm-mlm-enfr-1024.json",
                "BERTMULTI_A2_GPT2_gpt2-medium.json",
                "BERT_A1_BERT_bert-large-cased.json",
                "BERTMULTI_A2_BERT_bert-base-multilingual-cased.json",
                "BERTMULTI_A1_BERT_bert-base-multilingual-cased.json",
                "BERT_A2_GPT2_gpt2-large.json",
                "BERT_A1_XLM_xlm-mlm-enfr-1024.json",
                "BERT_A2_BERT_bert-base-multilingual-cased.json",
                "BERT_A1_XLM_xlm-mlm-en-2048.json",
                "BERTMULTI_A1_XLM_xlm-clm-enfr-1024.json",
                "BERT_A1_GPT_openai-gpt.json",
                "BERTMULTI_A2_BERT_bert-large-cased.json",
                "BERTMULTI_A2_XLNET_xlnet-large-cased.json"
            ]
        },
        "17": {
            "ID": "quereo_42.38",
            "QUESTION": "Which writers studied in Istanbul?",
            "SHORT_ANSWER": [
                "Kemal_Tahir",
                "Hıfzı_Topuz",
                "Erol_Günaydın",
                "Bahadir_Kaleagasi",
                "İoanna_Kuçuradi",
                "Ahmet_Hamdi_Tanpınar",
                "Birhan_Keskin",
                "Pınar_Selek",
                "İskender_Pala"
            ],
            "FULL_EXPERT_ANSWER": [
                "The following writers were educated in Istanbul: Eulogios Kourilas Lauriotis, Ioannis Leontopoulos, Hrant Dink, Yitzhak Ben-Zvi, Abdi İpekçi, Adnan Adıvar, Ekrem Dumanlı, Fuat Sezgin, Ayşe Arman, Yener Süsoy, Hamid Nitgi, Neoklis Sarris, Ceyda Aslı Kılıçkıran, Yılmaz Onay, ....",
                "Kemal Tahir, Hıfzı Topuz, Erol Günaydın, Bahadir Kaleagasi, İoanna Kuçuradi, Ahmet Hamdi Tanpınar, Birhan Keskin, Pınar Selek and İskender Pala studied in Istanbul"
            ],
            "GENERATED_ANSWER": "Kemal tahir, hıfzı topuz, erol günaydın, bahadir kaleagasi, i̇oanna kuçuradi, ahmet hamdi tanpınar, birhan keskin, pınar selek and i̇skender pala studied in istanbul",
            "MISSING_WORD": ".",
            "Need_LM_Assessing": false,
            "CONFIGURATION_FILE": [
                "BERTMULTI_A1_XLNET_xlnet-large-cased.json",
                "BERT_A2_GPT2_gpt2-medium.json",
                "BERT_A2_XLM_xlm-mlm-en-2048.json",
                "BERT_A2_BERT_bert-base-cased.json",
                "BERT_A1_BERT_bert-base-cased.json",
                "BERTMULTI_A1_BERT_bert-large-cased.json",
                "BERTMULTI_A1_GPT2_gpt2.json",
                "BERTMULTI_A2_GPT_openai-gpt.json",
                "BERTMULTI_A1_BERT_bert-base-uncased.json",
                "BERT_A1_GPT2_gpt2-medium.json",
                "BERTMULTI_A2_GPT2_gpt2.json",
                "BERTMULTI_A1_GPT2_gpt2-large.json",
                "BERTMULTI_A2_BERT_bert-base-cased.json",
                "BERT_A1_BERT_bert-base-multilingual-cased.json",
                "BERTMULTI_A1_XLM_xlm-mlm-en-2048.json",
                "BERT_A2_BERT_bert-base-uncased.json",
                "BERT_A2_XLNET_xlnet-large-cased.json",
                "BERTMULTI_A2_XLM_xlm-mlm-en-2048.json",
                "BERT_A2_GPT2_gpt2.json",
                "BERT_A2_XLM_xlm-clm-enfr-1024.json",
                "BERT_A2_GPT_openai-gpt.json",
                "BERT_A1_GPT2_gpt2.json",
                "BERTMULTI_A1_BERT_bert-base-cased.json",
                "BERTMULTI_A2_BERT_bert-base-uncased.json",
                "BERTMULTI_A1_GPT2_gpt2-medium.json",
                "BERT_A1_BERT_bert-base-uncased.json",
                "BERT_A2_XLM_xlm-mlm-enfr-1024.json",
                "BERT_A2_BERT_bert-large-cased.json",
                "BERT_A1_XLNET_xlnet-large-cased.json",
                "BERTMULTI_A2_GPT2_gpt2-large.json",
                "BERTMULTI_A2_XLM_xlm-clm-enfr-1024.json",
                "BERT_A1_XLM_xlm-clm-enfr-1024.json",
                "BERTMULTI_A1_GPT_openai-gpt.json",
                "BERTMULTI_A2_XLM_xlm-mlm-enfr-1024.json",
                "BERT_A1_GPT2_gpt2-large.json",
                "BERTMULTI_A1_XLM_xlm-mlm-enfr-1024.json",
                "BERTMULTI_A2_GPT2_gpt2-medium.json",
                "BERT_A1_BERT_bert-large-cased.json",
                "BERTMULTI_A2_BERT_bert-base-multilingual-cased.json",
                "BERTMULTI_A1_BERT_bert-base-multilingual-cased.json",
                "BERT_A2_GPT2_gpt2-large.json",
                "BERT_A1_XLM_xlm-mlm-enfr-1024.json",
                "BERT_A2_BERT_bert-base-multilingual-cased.json",
                "BERT_A1_XLM_xlm-mlm-en-2048.json",
                "BERTMULTI_A1_XLM_xlm-clm-enfr-1024.json",
                "BERT_A1_GPT_openai-gpt.json",
                "BERTMULTI_A2_BERT_bert-large-cased.json",
                "BERTMULTI_A2_XLNET_xlnet-large-cased.json"
            ]
        },
        "18": {
            "ID": "quereo_44.40",
            "QUESTION": "What is the full name of Prince Charles?",
            "SHORT_ANSWER": [
                "Mountbatten-Windsor Charles Philip Arthur George"
            ],
            "FULL_EXPERT_ANSWER": [
                "The full name of Prince Charles is Mountbatten-Windsor Charles Philip Arthur George.",
                "Mountbatten-Windsor Charles Philip Arthur George is the full name of Prince Charles"
            ],
            "GENERATED_ANSWER": "The full name of prince charles is mountbatten-windsor charles philip arthur george",
            "MISSING_WORD": ":",
            "Need_LM_Assessing": true,
            "CONFIGURATION_FILE": [
                "BERTMULTI_A1_XLNET_xlnet-large-cased.json",
                "BERTMULTI_A1_BERT_bert-large-cased.json",
                "BERTMULTI_A1_GPT2_gpt2.json",
                "BERTMULTI_A2_GPT_openai-gpt.json",
                "BERTMULTI_A1_BERT_bert-base-uncased.json",
                "BERTMULTI_A2_GPT2_gpt2.json",
                "BERTMULTI_A1_GPT2_gpt2-large.json",
                "BERTMULTI_A2_BERT_bert-base-cased.json",
                "BERTMULTI_A1_XLM_xlm-mlm-en-2048.json",
                "BERTMULTI_A2_XLM_xlm-mlm-en-2048.json",
                "BERTMULTI_A1_BERT_bert-base-cased.json",
                "BERTMULTI_A2_BERT_bert-base-uncased.json",
                "BERTMULTI_A1_GPT2_gpt2-medium.json",
                "BERTMULTI_A2_GPT2_gpt2-large.json",
                "BERTMULTI_A2_XLM_xlm-clm-enfr-1024.json",
                "BERTMULTI_A1_GPT_openai-gpt.json",
                "BERTMULTI_A2_XLM_xlm-mlm-enfr-1024.json",
                "BERTMULTI_A1_XLM_xlm-mlm-enfr-1024.json",
                "BERTMULTI_A2_GPT2_gpt2-medium.json",
                "BERTMULTI_A2_BERT_bert-base-multilingual-cased.json",
                "BERTMULTI_A1_BERT_bert-base-multilingual-cased.json",
                "BERTMULTI_A1_XLM_xlm-clm-enfr-1024.json",
                "BERTMULTI_A2_BERT_bert-large-cased.json",
                "BERTMULTI_A2_XLNET_xlnet-large-cased.json"
            ]
        },
        "19": {
            "ID": "quereo_46.42",
            "QUESTION": "Who discovered Ceres?",
            "SHORT_ANSWER": [
                "Giuseppe_Piazzi"
            ],
            "FULL_EXPERT_ANSWER": [
                "Giuseppe Piazzi discovered Ceres."
            ],
            "GENERATED_ANSWER": "Giuseppe piazzi discovered ceres",
            "MISSING_WORD": ".",
            "Need_LM_Assessing": false,
            "CONFIGURATION_FILE": [
                "BERTMULTI_A1_XLNET_xlnet-large-cased.json",
                "BERT_A2_GPT2_gpt2-medium.json",
                "BERT_A2_XLM_xlm-mlm-en-2048.json",
                "BERT_A2_BERT_bert-base-cased.json",
                "BERT_A1_BERT_bert-base-cased.json",
                "BERTMULTI_A1_BERT_bert-large-cased.json",
                "BERTMULTI_A1_GPT2_gpt2.json",
                "BERTMULTI_A2_GPT_openai-gpt.json",
                "BERTMULTI_A1_BERT_bert-base-uncased.json",
                "BERT_A1_GPT2_gpt2-medium.json",
                "BERTMULTI_A2_GPT2_gpt2.json",
                "BERTMULTI_A1_GPT2_gpt2-large.json",
                "BERTMULTI_A2_BERT_bert-base-cased.json",
                "BERT_A1_BERT_bert-base-multilingual-cased.json",
                "BERTMULTI_A1_XLM_xlm-mlm-en-2048.json",
                "BERT_A2_BERT_bert-base-uncased.json",
                "BERT_A2_XLNET_xlnet-large-cased.json",
                "BERTMULTI_A2_XLM_xlm-mlm-en-2048.json",
                "BERT_A2_GPT2_gpt2.json",
                "BERT_A2_XLM_xlm-clm-enfr-1024.json",
                "BERT_A2_GPT_openai-gpt.json",
                "BERT_A1_GPT2_gpt2.json",
                "BERTMULTI_A1_BERT_bert-base-cased.json",
                "BERTMULTI_A2_BERT_bert-base-uncased.json",
                "BERTMULTI_A1_GPT2_gpt2-medium.json",
                "BERT_A1_BERT_bert-base-uncased.json",
                "BERT_A2_XLM_xlm-mlm-enfr-1024.json",
                "BERT_A2_BERT_bert-large-cased.json",
                "BERT_A1_XLNET_xlnet-large-cased.json",
                "BERTMULTI_A2_GPT2_gpt2-large.json",
                "BERTMULTI_A2_XLM_xlm-clm-enfr-1024.json",
                "BERT_A1_XLM_xlm-clm-enfr-1024.json",
                "BERTMULTI_A1_GPT_openai-gpt.json",
                "BERTMULTI_A2_XLM_xlm-mlm-enfr-1024.json",
                "BERT_A1_GPT2_gpt2-large.json",
                "BERTMULTI_A1_XLM_xlm-mlm-enfr-1024.json",
                "BERTMULTI_A2_GPT2_gpt2-medium.json",
                "BERT_A1_BERT_bert-large-cased.json",
                "BERTMULTI_A2_BERT_bert-base-multilingual-cased.json",
                "BERTMULTI_A1_BERT_bert-base-multilingual-cased.json",
                "BERT_A2_GPT2_gpt2-large.json",
                "BERT_A1_XLM_xlm-mlm-enfr-1024.json",
                "BERT_A2_BERT_bert-base-multilingual-cased.json",
                "BERT_A1_XLM_xlm-mlm-en-2048.json",
                "BERTMULTI_A1_XLM_xlm-clm-enfr-1024.json",
                "BERT_A1_GPT_openai-gpt.json",
                "BERTMULTI_A2_BERT_bert-large-cased.json",
                "BERTMULTI_A2_XLNET_xlnet-large-cased.json"
            ]
        },
        "20": {
            "ID": "quereo_47.43",
            "QUESTION": "When did princess Diana die?",
            "SHORT_ANSWER": [
                "August 31, 1997"
            ],
            "FULL_EXPERT_ANSWER": [
                "Princess Diana died on 31 August 1997.",
                "Princess Diana died on August 31, 1997."
            ],
            "GENERATED_ANSWER": "Princess diana died on august 31, 1997",
            "MISSING_WORD": "on",
            "Need_LM_Assessing": true,
            "CONFIGURATION_FILE": [
                "BERTMULTI_A1_XLNET_xlnet-large-cased.json",
                "BERT_A2_GPT2_gpt2-medium.json",
                "BERT_A2_XLM_xlm-mlm-en-2048.json",
                "BERT_A2_BERT_bert-base-cased.json",
                "BERT_A1_BERT_bert-base-cased.json",
                "BERTMULTI_A1_BERT_bert-large-cased.json",
                "BERTMULTI_A1_GPT2_gpt2.json",
                "BERTMULTI_A2_GPT_openai-gpt.json",
                "BERTMULTI_A1_BERT_bert-base-uncased.json",
                "BERT_A1_GPT2_gpt2-medium.json",
                "BERTMULTI_A2_GPT2_gpt2.json",
                "BERTMULTI_A1_GPT2_gpt2-large.json",
                "BERTMULTI_A2_BERT_bert-base-cased.json",
                "BERT_A1_BERT_bert-base-multilingual-cased.json",
                "BERTMULTI_A1_XLM_xlm-mlm-en-2048.json",
                "BERT_A2_BERT_bert-base-uncased.json",
                "BERT_A2_XLNET_xlnet-large-cased.json",
                "BERTMULTI_A2_XLM_xlm-mlm-en-2048.json",
                "BERT_A2_GPT2_gpt2.json",
                "BERT_A2_XLM_xlm-clm-enfr-1024.json",
                "BERT_A2_GPT_openai-gpt.json",
                "BERT_A1_GPT2_gpt2.json",
                "BERTMULTI_A1_BERT_bert-base-cased.json",
                "BERTMULTI_A2_BERT_bert-base-uncased.json",
                "BERTMULTI_A1_GPT2_gpt2-medium.json",
                "BERT_A1_BERT_bert-base-uncased.json",
                "BERT_A2_XLM_xlm-mlm-enfr-1024.json",
                "BERT_A2_BERT_bert-large-cased.json",
                "BERT_A1_XLNET_xlnet-large-cased.json",
                "BERTMULTI_A2_GPT2_gpt2-large.json",
                "BERTMULTI_A2_XLM_xlm-clm-enfr-1024.json",
                "BERT_A1_XLM_xlm-clm-enfr-1024.json",
                "BERTMULTI_A1_GPT_openai-gpt.json",
                "BERTMULTI_A2_XLM_xlm-mlm-enfr-1024.json",
                "BERT_A1_GPT2_gpt2-large.json",
                "BERTMULTI_A1_XLM_xlm-mlm-enfr-1024.json",
                "BERTMULTI_A2_GPT2_gpt2-medium.json",
                "BERT_A1_BERT_bert-large-cased.json",
                "BERTMULTI_A2_BERT_bert-base-multilingual-cased.json",
                "BERTMULTI_A1_BERT_bert-base-multilingual-cased.json",
                "BERT_A2_GPT2_gpt2-large.json",
                "BERT_A1_XLM_xlm-mlm-enfr-1024.json",
                "BERT_A2_BERT_bert-base-multilingual-cased.json",
                "BERT_A1_XLM_xlm-mlm-en-2048.json",
                "BERTMULTI_A1_XLM_xlm-clm-enfr-1024.json",
                "BERT_A1_GPT_openai-gpt.json",
                "BERTMULTI_A2_BERT_bert-large-cased.json",
                "BERTMULTI_A2_XLNET_xlnet-large-cased.json"
            ]
        },
        "21": {
            "ID": "quereo_48.44",
            "QUESTION": "Which presidents were born in 1945?",
            "SHORT_ANSWER": [
                "Muhammad_Muhammad_Taib"
            ],
            "FULL_EXPERT_ANSWER": [
                "All presidents born in 1945 are in the following list: Moshe Katsav, Kinza Clodumar, Daniel Ortega, Desi Bouterse, Radovan Karadžić, Manuel Chaves, Vladislav Ardzinba, Abdrabbo Mansour Hadi, Chandrika Kumaratunga, Rodrigo Duterte, Mahinda Rajapakse, Ariranga Pillay, Luiz Inácio Lula da Silva, Jorge Serrano Elías, Amos Sawyer, Moncef Marzouki, Adli Mansour.",
                "Muhammad Muhammad Taib was born in 1945"
            ],
            "GENERATED_ANSWER": "Muhammad muhammad taib was born in 1945",
            "MISSING_WORD": ".",
            "Need_LM_Assessing": false,
            "CONFIGURATION_FILE": [
                "BERTMULTI_A1_XLNET_xlnet-large-cased.json",
                "BERT_A2_GPT2_gpt2-medium.json",
                "BERT_A2_XLM_xlm-mlm-en-2048.json",
                "BERT_A2_BERT_bert-base-cased.json",
                "BERT_A1_BERT_bert-base-cased.json",
                "BERTMULTI_A1_BERT_bert-large-cased.json",
                "BERTMULTI_A1_GPT2_gpt2.json",
                "BERTMULTI_A2_GPT_openai-gpt.json",
                "BERTMULTI_A1_BERT_bert-base-uncased.json",
                "BERT_A1_GPT2_gpt2-medium.json",
                "BERTMULTI_A2_GPT2_gpt2.json",
                "BERTMULTI_A1_GPT2_gpt2-large.json",
                "BERTMULTI_A2_BERT_bert-base-cased.json",
                "BERT_A1_BERT_bert-base-multilingual-cased.json",
                "BERTMULTI_A1_XLM_xlm-mlm-en-2048.json",
                "BERT_A2_BERT_bert-base-uncased.json",
                "BERT_A2_XLNET_xlnet-large-cased.json",
                "BERTMULTI_A2_XLM_xlm-mlm-en-2048.json",
                "BERT_A2_GPT2_gpt2.json",
                "BERT_A2_XLM_xlm-clm-enfr-1024.json",
                "BERT_A2_GPT_openai-gpt.json",
                "BERT_A1_GPT2_gpt2.json",
                "BERTMULTI_A1_BERT_bert-base-cased.json",
                "BERTMULTI_A2_BERT_bert-base-uncased.json",
                "BERTMULTI_A1_GPT2_gpt2-medium.json",
                "BERT_A1_BERT_bert-base-uncased.json",
                "BERT_A2_XLM_xlm-mlm-enfr-1024.json",
                "BERT_A2_BERT_bert-large-cased.json",
                "BERT_A1_XLNET_xlnet-large-cased.json",
                "BERTMULTI_A2_GPT2_gpt2-large.json",
                "BERTMULTI_A2_XLM_xlm-clm-enfr-1024.json",
                "BERT_A1_XLM_xlm-clm-enfr-1024.json",
                "BERTMULTI_A1_GPT_openai-gpt.json",
                "BERTMULTI_A2_XLM_xlm-mlm-enfr-1024.json",
                "BERT_A1_GPT2_gpt2-large.json",
                "BERTMULTI_A1_XLM_xlm-mlm-enfr-1024.json",
                "BERTMULTI_A2_GPT2_gpt2-medium.json",
                "BERT_A1_BERT_bert-large-cased.json",
                "BERTMULTI_A2_BERT_bert-base-multilingual-cased.json",
                "BERTMULTI_A1_BERT_bert-base-multilingual-cased.json",
                "BERT_A2_GPT2_gpt2-large.json",
                "BERT_A1_XLM_xlm-mlm-enfr-1024.json",
                "BERT_A2_BERT_bert-base-multilingual-cased.json",
                "BERT_A1_XLM_xlm-mlm-en-2048.json",
                "BERTMULTI_A1_XLM_xlm-clm-enfr-1024.json",
                "BERT_A1_GPT_openai-gpt.json",
                "BERTMULTI_A2_BERT_bert-large-cased.json",
                "BERTMULTI_A2_XLNET_xlnet-large-cased.json"
            ]
        },
        "22": {
            "ID": "quereo_52.47",
            "QUESTION": "Did Elvis Presley have children?",
            "SHORT_ANSWER": [
                "Yes"
            ],
            "FULL_EXPERT_ANSWER": [
                "Yes, Elvis had children.",
                "Yes, Elvis Presley had children"
            ],
            "GENERATED_ANSWER": "Yes, elvis presley had children",
            "MISSING_WORD": "None",
            "Need_LM_Assessing": false,
            "CONFIGURATION_FILE": [
                "BERTMULTI_A1_XLNET_xlnet-large-cased.json",
                "BERT_A2_GPT2_gpt2-medium.json",
                "BERT_A2_XLM_xlm-mlm-en-2048.json",
                "BERT_A2_BERT_bert-base-cased.json",
                "BERT_A1_BERT_bert-base-cased.json",
                "BERTMULTI_A1_BERT_bert-large-cased.json",
                "BERTMULTI_A1_GPT2_gpt2.json",
                "BERTMULTI_A2_GPT_openai-gpt.json",
                "BERTMULTI_A1_BERT_bert-base-uncased.json",
                "BERT_A1_GPT2_gpt2-medium.json",
                "BERTMULTI_A2_GPT2_gpt2.json",
                "BERTMULTI_A1_GPT2_gpt2-large.json",
                "BERTMULTI_A2_BERT_bert-base-cased.json",
                "BERT_A1_BERT_bert-base-multilingual-cased.json",
                "BERTMULTI_A1_XLM_xlm-mlm-en-2048.json",
                "BERT_A2_BERT_bert-base-uncased.json",
                "BERT_A2_XLNET_xlnet-large-cased.json",
                "BERTMULTI_A2_XLM_xlm-mlm-en-2048.json",
                "BERT_A2_GPT2_gpt2.json",
                "BERT_A2_XLM_xlm-clm-enfr-1024.json",
                "BERT_A2_GPT_openai-gpt.json",
                "BERT_A1_GPT2_gpt2.json",
                "BERTMULTI_A1_BERT_bert-base-cased.json",
                "BERTMULTI_A2_BERT_bert-base-uncased.json",
                "BERTMULTI_A1_GPT2_gpt2-medium.json",
                "BERT_A1_BERT_bert-base-uncased.json",
                "BERT_A2_XLM_xlm-mlm-enfr-1024.json",
                "BERT_A2_BERT_bert-large-cased.json",
                "BERT_A1_XLNET_xlnet-large-cased.json",
                "BERTMULTI_A2_GPT2_gpt2-large.json",
                "BERTMULTI_A2_XLM_xlm-clm-enfr-1024.json",
                "BERT_A1_XLM_xlm-clm-enfr-1024.json",
                "BERTMULTI_A1_GPT_openai-gpt.json",
                "BERTMULTI_A2_XLM_xlm-mlm-enfr-1024.json",
                "BERT_A1_GPT2_gpt2-large.json",
                "BERTMULTI_A1_XLM_xlm-mlm-enfr-1024.json",
                "BERTMULTI_A2_GPT2_gpt2-medium.json",
                "BERT_A1_BERT_bert-large-cased.json",
                "BERTMULTI_A2_BERT_bert-base-multilingual-cased.json",
                "BERTMULTI_A1_BERT_bert-base-multilingual-cased.json",
                "BERT_A2_GPT2_gpt2-large.json",
                "BERT_A1_XLM_xlm-mlm-enfr-1024.json",
                "BERT_A2_BERT_bert-base-multilingual-cased.json",
                "BERT_A1_XLM_xlm-mlm-en-2048.json",
                "BERTMULTI_A1_XLM_xlm-clm-enfr-1024.json",
                "BERT_A1_GPT_openai-gpt.json",
                "BERTMULTI_A2_BERT_bert-large-cased.json",
                "BERTMULTI_A2_XLNET_xlnet-large-cased.json"
            ]
        },
        "23": {
            "ID": "quereo_56.50",
            "QUESTION": "Who is the king of the Netherlands?",
            "SHORT_ANSWER": [
                "Willem-Alexander"
            ],
            "FULL_EXPERT_ANSWER": [
                "Willem-Alexander is the king of the Netherlands.",
                "the king of the Netherlands is Willem-Alexander"
            ],
            "GENERATED_ANSWER": "The king of the netherlands is willem-alexander",
            "MISSING_WORD": ":",
            "Need_LM_Assessing": true,
            "CONFIGURATION_FILE": [
                "BERTMULTI_A1_XLNET_xlnet-large-cased.json",
                "BERTMULTI_A1_BERT_bert-large-cased.json",
                "BERTMULTI_A1_GPT2_gpt2.json",
                "BERTMULTI_A2_GPT_openai-gpt.json",
                "BERTMULTI_A1_BERT_bert-base-uncased.json",
                "BERTMULTI_A2_GPT2_gpt2.json",
                "BERTMULTI_A1_GPT2_gpt2-large.json",
                "BERTMULTI_A2_BERT_bert-base-cased.json",
                "BERTMULTI_A1_XLM_xlm-mlm-en-2048.json",
                "BERTMULTI_A2_XLM_xlm-mlm-en-2048.json",
                "BERTMULTI_A1_BERT_bert-base-cased.json",
                "BERTMULTI_A2_BERT_bert-base-uncased.json",
                "BERTMULTI_A1_GPT2_gpt2-medium.json",
                "BERTMULTI_A2_GPT2_gpt2-large.json",
                "BERTMULTI_A2_XLM_xlm-clm-enfr-1024.json",
                "BERTMULTI_A1_GPT_openai-gpt.json",
                "BERTMULTI_A2_XLM_xlm-mlm-enfr-1024.json",
                "BERTMULTI_A1_XLM_xlm-mlm-enfr-1024.json",
                "BERTMULTI_A2_GPT2_gpt2-medium.json",
                "BERTMULTI_A2_BERT_bert-base-multilingual-cased.json",
                "BERTMULTI_A1_BERT_bert-base-multilingual-cased.json",
                "BERTMULTI_A1_XLM_xlm-clm-enfr-1024.json",
                "BERTMULTI_A2_BERT_bert-large-cased.json",
                "BERTMULTI_A2_XLNET_xlnet-large-cased.json"
            ]
        },
        "24": {
            "ID": "quereo_59.52",
            "QUESTION": "Which rivers flow into the North Sea?",
            "SHORT_ANSWER": [
                "Figgjoelva",
                "Elliot_Water",
                "Weser",
                "Oude_Rijn",
                "North_Sea_Canal",
                "River_Ancholme",
                "River_Forth",
                "River_South_Esk",
                "River_Tay"
            ],
            "FULL_EXPERT_ANSWER": [
                "The rivers flowing into the North Sea are as follows: Tyne, Yser, Aa, Arlau, Husumer Mühlenau, Deben, Don, Harle, Tweed, Tees, Humber, Esk, Kongeå, Dee, Cowie Water, Escaut oriental, Vieux Rhin, Numedalslågen, Wear",
                "Figgjoelva, Elliot Water, Weser, Oude Rijn, North Sea Canal, River Ancholme, River Forth, River South Esk and River Tay flow into the North Sea"
            ],
            "GENERATED_ANSWER": "Figgjoelva, elliot water, weser, oude rijn, north sea canal, river ancholme, river forth, river south esk and river tay flow into the north sea",
            "MISSING_WORD": ",",
            "Need_LM_Assessing": false,
            "CONFIGURATION_FILE": [
                "BERTMULTI_A1_XLNET_xlnet-large-cased.json",
                "BERT_A2_GPT2_gpt2-medium.json",
                "BERT_A2_XLM_xlm-mlm-en-2048.json",
                "BERT_A2_BERT_bert-base-cased.json",
                "BERT_A1_BERT_bert-base-cased.json",
                "BERTMULTI_A1_BERT_bert-large-cased.json",
                "BERTMULTI_A1_GPT2_gpt2.json",
                "BERTMULTI_A2_GPT_openai-gpt.json",
                "BERTMULTI_A1_BERT_bert-base-uncased.json",
                "BERT_A1_GPT2_gpt2-medium.json",
                "BERTMULTI_A2_GPT2_gpt2.json",
                "BERTMULTI_A1_GPT2_gpt2-large.json",
                "BERTMULTI_A2_BERT_bert-base-cased.json",
                "BERT_A1_BERT_bert-base-multilingual-cased.json",
                "BERTMULTI_A1_XLM_xlm-mlm-en-2048.json",
                "BERT_A2_BERT_bert-base-uncased.json",
                "BERT_A2_XLNET_xlnet-large-cased.json",
                "BERTMULTI_A2_XLM_xlm-mlm-en-2048.json",
                "BERT_A2_GPT2_gpt2.json",
                "BERT_A2_XLM_xlm-clm-enfr-1024.json",
                "BERT_A2_GPT_openai-gpt.json",
                "BERT_A1_GPT2_gpt2.json",
                "BERTMULTI_A1_BERT_bert-base-cased.json",
                "BERTMULTI_A2_BERT_bert-base-uncased.json",
                "BERTMULTI_A1_GPT2_gpt2-medium.json",
                "BERT_A1_BERT_bert-base-uncased.json",
                "BERT_A2_XLM_xlm-mlm-enfr-1024.json",
                "BERT_A2_BERT_bert-large-cased.json",
                "BERT_A1_XLNET_xlnet-large-cased.json",
                "BERTMULTI_A2_GPT2_gpt2-large.json",
                "BERTMULTI_A2_XLM_xlm-clm-enfr-1024.json",
                "BERT_A1_XLM_xlm-clm-enfr-1024.json",
                "BERTMULTI_A1_GPT_openai-gpt.json",
                "BERTMULTI_A2_XLM_xlm-mlm-enfr-1024.json",
                "BERT_A1_GPT2_gpt2-large.json",
                "BERTMULTI_A1_XLM_xlm-mlm-enfr-1024.json",
                "BERTMULTI_A2_GPT2_gpt2-medium.json",
                "BERT_A1_BERT_bert-large-cased.json",
                "BERTMULTI_A2_BERT_bert-base-multilingual-cased.json",
                "BERTMULTI_A1_BERT_bert-base-multilingual-cased.json",
                "BERT_A2_GPT2_gpt2-large.json",
                "BERT_A1_XLM_xlm-mlm-enfr-1024.json",
                "BERT_A2_BERT_bert-base-multilingual-cased.json",
                "BERT_A1_XLM_xlm-mlm-en-2048.json",
                "BERTMULTI_A1_XLM_xlm-clm-enfr-1024.json",
                "BERT_A1_GPT_openai-gpt.json",
                "BERTMULTI_A2_BERT_bert-large-cased.json",
                "BERTMULTI_A2_XLNET_xlnet-large-cased.json"
            ]
        },
        "25": {
            "ID": "quereo_60.53",
            "QUESTION": "When did Operation Overlord begin?",
            "SHORT_ANSWER": [
                "August 30, 1944"
            ],
            "FULL_EXPERT_ANSWER": [
                "Operation Overlord began on August 30, 1944."
            ],
            "GENERATED_ANSWER": "Operation overlord began on august 30, 1944",
            "MISSING_WORD": "on",
            "Need_LM_Assessing": true,
            "CONFIGURATION_FILE": [
                "BERTMULTI_A1_XLNET_xlnet-large-cased.json",
                "BERT_A2_GPT2_gpt2-medium.json",
                "BERT_A2_XLM_xlm-mlm-en-2048.json",
                "BERT_A2_BERT_bert-base-cased.json",
                "BERT_A1_BERT_bert-base-cased.json",
                "BERTMULTI_A1_BERT_bert-large-cased.json",
                "BERTMULTI_A1_GPT2_gpt2.json",
                "BERTMULTI_A2_GPT_openai-gpt.json",
                "BERTMULTI_A1_BERT_bert-base-uncased.json",
                "BERT_A1_GPT2_gpt2-medium.json",
                "BERTMULTI_A2_GPT2_gpt2.json",
                "BERTMULTI_A1_GPT2_gpt2-large.json",
                "BERTMULTI_A2_BERT_bert-base-cased.json",
                "BERT_A1_BERT_bert-base-multilingual-cased.json",
                "BERTMULTI_A1_XLM_xlm-mlm-en-2048.json",
                "BERT_A2_BERT_bert-base-uncased.json",
                "BERT_A2_XLNET_xlnet-large-cased.json",
                "BERTMULTI_A2_XLM_xlm-mlm-en-2048.json",
                "BERT_A2_GPT2_gpt2.json",
                "BERT_A2_XLM_xlm-clm-enfr-1024.json",
                "BERT_A2_GPT_openai-gpt.json",
                "BERT_A1_GPT2_gpt2.json",
                "BERTMULTI_A1_BERT_bert-base-cased.json",
                "BERTMULTI_A2_BERT_bert-base-uncased.json",
                "BERTMULTI_A1_GPT2_gpt2-medium.json",
                "BERT_A1_BERT_bert-base-uncased.json",
                "BERT_A2_XLM_xlm-mlm-enfr-1024.json",
                "BERT_A2_BERT_bert-large-cased.json",
                "BERT_A1_XLNET_xlnet-large-cased.json",
                "BERTMULTI_A2_GPT2_gpt2-large.json",
                "BERTMULTI_A2_XLM_xlm-clm-enfr-1024.json",
                "BERT_A1_XLM_xlm-clm-enfr-1024.json",
                "BERTMULTI_A1_GPT_openai-gpt.json",
                "BERTMULTI_A2_XLM_xlm-mlm-enfr-1024.json",
                "BERT_A1_GPT2_gpt2-large.json",
                "BERTMULTI_A1_XLM_xlm-mlm-enfr-1024.json",
                "BERTMULTI_A2_GPT2_gpt2-medium.json",
                "BERT_A1_BERT_bert-large-cased.json",
                "BERTMULTI_A2_BERT_bert-base-multilingual-cased.json",
                "BERTMULTI_A1_BERT_bert-base-multilingual-cased.json",
                "BERT_A2_GPT2_gpt2-large.json",
                "BERT_A1_XLM_xlm-mlm-enfr-1024.json",
                "BERT_A2_BERT_bert-base-multilingual-cased.json",
                "BERT_A1_XLM_xlm-mlm-en-2048.json",
                "BERTMULTI_A1_XLM_xlm-clm-enfr-1024.json",
                "BERT_A1_GPT_openai-gpt.json",
                "BERTMULTI_A2_BERT_bert-large-cased.json",
                "BERTMULTI_A2_XLNET_xlnet-large-cased.json"
            ]
        },
        "26": {
            "ID": "quereo_66.58",
            "QUESTION": "Which countries have more than ten volcanoes?",
            "SHORT_ANSWER": [
                "Argentina",
                "Bolivia",
                "Chile",
                "Ethiopia",
                "Indonesia",
                "Russia",
                "Colombia",
                "Ecuador",
                "Japan",
                "Peru",
                "United_States",
                "Guatemala",
                "El_Salvador",
                "Philippines",
                "Papua_New_Guinea"
            ],
            "FULL_EXPERT_ANSWER": [
                "There are more than 10 volcanoes in the following list of countries: Chile, Australia, Argentina, Peru, Vanuatu, Papua New Guinea, Colombia, Ecuador, Bolivia, Guatemala, Yemen, Nicaragua, Syria, Philippines, Democratic Republic of Congo, Cameroon, Madagascar, Canada, Japan, United States, Spain, Mexico, France, Russia, Germany, Iceland, Indonesia",
                "Argentina, Bolivia, Chile, Ethiopia, Indonesia, Russia, Colombia, Ecuador, Japan, Peru, United States, Guatemala, El Salvador, Philippines and Papua New Guinea have more than ten volcanoes"
            ],
            "GENERATED_ANSWER": "Argentina, bolivia, chile, ethiopia, indonesia, russia, colombia, ecuador, japan, peru, united states, guatemala, el salvador, philippines and papua new guinea have more than ten volcanoes",
            "MISSING_WORD": ".",
            "Need_LM_Assessing": false,
            "CONFIGURATION_FILE": [
                "BERTMULTI_A1_XLNET_xlnet-large-cased.json",
                "BERT_A2_GPT2_gpt2-medium.json",
                "BERT_A2_XLM_xlm-mlm-en-2048.json",
                "BERT_A2_BERT_bert-base-cased.json",
                "BERT_A1_BERT_bert-base-cased.json",
                "BERTMULTI_A1_BERT_bert-large-cased.json",
                "BERTMULTI_A1_GPT2_gpt2.json",
                "BERTMULTI_A2_GPT_openai-gpt.json",
                "BERTMULTI_A1_BERT_bert-base-uncased.json",
                "BERT_A1_GPT2_gpt2-medium.json",
                "BERTMULTI_A2_GPT2_gpt2.json",
                "BERTMULTI_A1_GPT2_gpt2-large.json",
                "BERTMULTI_A2_BERT_bert-base-cased.json",
                "BERT_A1_BERT_bert-base-multilingual-cased.json",
                "BERTMULTI_A1_XLM_xlm-mlm-en-2048.json",
                "BERT_A2_BERT_bert-base-uncased.json",
                "BERT_A2_XLNET_xlnet-large-cased.json",
                "BERTMULTI_A2_XLM_xlm-mlm-en-2048.json",
                "BERT_A2_GPT2_gpt2.json",
                "BERT_A2_XLM_xlm-clm-enfr-1024.json",
                "BERT_A2_GPT_openai-gpt.json",
                "BERT_A1_GPT2_gpt2.json",
                "BERTMULTI_A1_BERT_bert-base-cased.json",
                "BERTMULTI_A2_BERT_bert-base-uncased.json",
                "BERTMULTI_A1_GPT2_gpt2-medium.json",
                "BERT_A1_BERT_bert-base-uncased.json",
                "BERT_A2_XLM_xlm-mlm-enfr-1024.json",
                "BERT_A2_BERT_bert-large-cased.json",
                "BERT_A1_XLNET_xlnet-large-cased.json",
                "BERTMULTI_A2_GPT2_gpt2-large.json",
                "BERTMULTI_A2_XLM_xlm-clm-enfr-1024.json",
                "BERT_A1_XLM_xlm-clm-enfr-1024.json",
                "BERTMULTI_A1_GPT_openai-gpt.json",
                "BERTMULTI_A2_XLM_xlm-mlm-enfr-1024.json",
                "BERT_A1_GPT2_gpt2-large.json",
                "BERTMULTI_A1_XLM_xlm-mlm-enfr-1024.json",
                "BERTMULTI_A2_GPT2_gpt2-medium.json",
                "BERT_A1_BERT_bert-large-cased.json",
                "BERTMULTI_A2_BERT_bert-base-multilingual-cased.json",
                "BERTMULTI_A1_BERT_bert-base-multilingual-cased.json",
                "BERT_A2_GPT2_gpt2-large.json",
                "BERT_A1_XLM_xlm-mlm-enfr-1024.json",
                "BERT_A2_BERT_bert-base-multilingual-cased.json",
                "BERT_A1_XLM_xlm-mlm-en-2048.json",
                "BERTMULTI_A1_XLM_xlm-clm-enfr-1024.json",
                "BERT_A1_GPT_openai-gpt.json",
                "BERTMULTI_A2_BERT_bert-large-cased.json",
                "BERTMULTI_A2_XLNET_xlnet-large-cased.json"
            ]
        },
        "27": {
            "ID": "quereo_68.59",
            "QUESTION": "Who wrote the Game of Thrones theme?",
            "SHORT_ANSWER": [
                "Ramin_Djawadi"
            ],
            "FULL_EXPERT_ANSWER": [
                "Ramin Djawadi is the author of the soundtrack of the saga Game of Thrones.",
                "Ramin Djawadi wrote the Game of Thrones theme"
            ],
            "GENERATED_ANSWER": "Ramin djawadi wrote the game of thrones theme",
            "MISSING_WORD": ".",
            "Need_LM_Assessing": false,
            "CONFIGURATION_FILE": [
                "BERTMULTI_A1_XLNET_xlnet-large-cased.json",
                "BERT_A2_GPT2_gpt2-medium.json",
                "BERT_A2_XLM_xlm-mlm-en-2048.json",
                "BERT_A2_BERT_bert-base-cased.json",
                "BERT_A1_BERT_bert-base-cased.json",
                "BERTMULTI_A1_BERT_bert-large-cased.json",
                "BERTMULTI_A1_GPT2_gpt2.json",
                "BERTMULTI_A2_GPT_openai-gpt.json",
                "BERTMULTI_A1_BERT_bert-base-uncased.json",
                "BERT_A1_GPT2_gpt2-medium.json",
                "BERTMULTI_A2_GPT2_gpt2.json",
                "BERTMULTI_A1_GPT2_gpt2-large.json",
                "BERTMULTI_A2_BERT_bert-base-cased.json",
                "BERT_A1_BERT_bert-base-multilingual-cased.json",
                "BERTMULTI_A1_XLM_xlm-mlm-en-2048.json",
                "BERT_A2_BERT_bert-base-uncased.json",
                "BERT_A2_XLNET_xlnet-large-cased.json",
                "BERTMULTI_A2_XLM_xlm-mlm-en-2048.json",
                "BERT_A2_GPT2_gpt2.json",
                "BERT_A2_XLM_xlm-clm-enfr-1024.json",
                "BERT_A2_GPT_openai-gpt.json",
                "BERT_A1_GPT2_gpt2.json",
                "BERTMULTI_A1_BERT_bert-base-cased.json",
                "BERTMULTI_A2_BERT_bert-base-uncased.json",
                "BERTMULTI_A1_GPT2_gpt2-medium.json",
                "BERT_A1_BERT_bert-base-uncased.json",
                "BERT_A2_XLM_xlm-mlm-enfr-1024.json",
                "BERT_A2_BERT_bert-large-cased.json",
                "BERT_A1_XLNET_xlnet-large-cased.json",
                "BERTMULTI_A2_GPT2_gpt2-large.json",
                "BERTMULTI_A2_XLM_xlm-clm-enfr-1024.json",
                "BERT_A1_XLM_xlm-clm-enfr-1024.json",
                "BERTMULTI_A1_GPT_openai-gpt.json",
                "BERTMULTI_A2_XLM_xlm-mlm-enfr-1024.json",
                "BERT_A1_GPT2_gpt2-large.json",
                "BERTMULTI_A1_XLM_xlm-mlm-enfr-1024.json",
                "BERTMULTI_A2_GPT2_gpt2-medium.json",
                "BERT_A1_BERT_bert-large-cased.json",
                "BERTMULTI_A2_BERT_bert-base-multilingual-cased.json",
                "BERTMULTI_A1_BERT_bert-base-multilingual-cased.json",
                "BERT_A2_GPT2_gpt2-large.json",
                "BERT_A1_XLM_xlm-mlm-enfr-1024.json",
                "BERT_A2_BERT_bert-base-multilingual-cased.json",
                "BERT_A1_XLM_xlm-mlm-en-2048.json",
                "BERTMULTI_A1_XLM_xlm-clm-enfr-1024.json",
                "BERT_A1_GPT_openai-gpt.json",
                "BERTMULTI_A2_BERT_bert-large-cased.json",
                "BERTMULTI_A2_XLNET_xlnet-large-cased.json"
            ]
        },
        "28": {
            "ID": "quereo_71.61",
            "QUESTION": "When was Olof Palme shot?",
            "SHORT_ANSWER": [
                "March 01, 1986"
            ],
            "FULL_EXPERT_ANSWER": [
                "No guilty party has been officially designated for the murder of Olof Palme.",
                "Olof Palme was shot on March 01, 1986"
            ],
            "GENERATED_ANSWER": "Olof palme was shot on march 01, 1986",
            "MISSING_WORD": "on",
            "Need_LM_Assessing": true,
            "CONFIGURATION_FILE": [
                "BERTMULTI_A1_XLNET_xlnet-large-cased.json",
                "BERT_A2_GPT2_gpt2-medium.json",
                "BERT_A2_XLM_xlm-mlm-en-2048.json",
                "BERT_A2_BERT_bert-base-cased.json",
                "BERT_A1_BERT_bert-base-cased.json",
                "BERTMULTI_A1_BERT_bert-large-cased.json",
                "BERTMULTI_A1_GPT2_gpt2.json",
                "BERTMULTI_A2_GPT_openai-gpt.json",
                "BERTMULTI_A1_BERT_bert-base-uncased.json",
                "BERT_A1_GPT2_gpt2-medium.json",
                "BERTMULTI_A2_GPT2_gpt2.json",
                "BERTMULTI_A1_GPT2_gpt2-large.json",
                "BERTMULTI_A2_BERT_bert-base-cased.json",
                "BERT_A1_BERT_bert-base-multilingual-cased.json",
                "BERTMULTI_A1_XLM_xlm-mlm-en-2048.json",
                "BERT_A2_BERT_bert-base-uncased.json",
                "BERT_A2_XLNET_xlnet-large-cased.json",
                "BERTMULTI_A2_XLM_xlm-mlm-en-2048.json",
                "BERT_A2_GPT2_gpt2.json",
                "BERT_A2_XLM_xlm-clm-enfr-1024.json",
                "BERT_A2_GPT_openai-gpt.json",
                "BERT_A1_GPT2_gpt2.json",
                "BERTMULTI_A1_BERT_bert-base-cased.json",
                "BERTMULTI_A2_BERT_bert-base-uncased.json",
                "BERTMULTI_A1_GPT2_gpt2-medium.json",
                "BERT_A1_BERT_bert-base-uncased.json",
                "BERT_A2_XLM_xlm-mlm-enfr-1024.json",
                "BERT_A2_BERT_bert-large-cased.json",
                "BERT_A1_XLNET_xlnet-large-cased.json",
                "BERTMULTI_A2_GPT2_gpt2-large.json",
                "BERTMULTI_A2_XLM_xlm-clm-enfr-1024.json",
                "BERT_A1_XLM_xlm-clm-enfr-1024.json",
                "BERTMULTI_A1_GPT_openai-gpt.json",
                "BERTMULTI_A2_XLM_xlm-mlm-enfr-1024.json",
                "BERT_A1_GPT2_gpt2-large.json",
                "BERTMULTI_A1_XLM_xlm-mlm-enfr-1024.json",
                "BERTMULTI_A2_GPT2_gpt2-medium.json",
                "BERT_A1_BERT_bert-large-cased.json",
                "BERTMULTI_A2_BERT_bert-base-multilingual-cased.json",
                "BERTMULTI_A1_BERT_bert-base-multilingual-cased.json",
                "BERT_A2_GPT2_gpt2-large.json",
                "BERT_A1_XLM_xlm-mlm-enfr-1024.json",
                "BERT_A2_BERT_bert-base-multilingual-cased.json",
                "BERT_A1_XLM_xlm-mlm-en-2048.json",
                "BERTMULTI_A1_XLM_xlm-clm-enfr-1024.json",
                "BERT_A1_GPT_openai-gpt.json",
                "BERTMULTI_A2_BERT_bert-large-cased.json",
                "BERTMULTI_A2_XLNET_xlnet-large-cased.json"
            ]
        },
        "29": {
            "ID": "quereo_76.65",
            "QUESTION": "Which space probes were sent into orbit around the sun?",
            "SHORT_ANSWER": [
                "Genesis",
                "WIND",
                "Pioneer_6,_7,_8,_and_9",
                "Helios"
            ],
            "FULL_EXPERT_ANSWER": [
                "The space probes Spitzer and Kepler were sent into orbit around the sun.",
                "Genesis, WIND, Pioneer 6, 7, 8, and 9 and Helios were sent into orbit around the sun"
            ],
            "GENERATED_ANSWER": "Genesis, wind, pioneer 6, 7, 8, and 9 and helios were sent into orbit around the sun",
            "MISSING_WORD": ".",
            "Need_LM_Assessing": false,
            "CONFIGURATION_FILE": [
                "BERTMULTI_A1_XLNET_xlnet-large-cased.json",
                "BERT_A2_GPT2_gpt2-medium.json",
                "BERT_A2_XLM_xlm-mlm-en-2048.json",
                "BERT_A2_BERT_bert-base-cased.json",
                "BERT_A1_BERT_bert-base-cased.json",
                "BERTMULTI_A1_BERT_bert-large-cased.json",
                "BERTMULTI_A1_GPT2_gpt2.json",
                "BERTMULTI_A2_GPT_openai-gpt.json",
                "BERTMULTI_A1_BERT_bert-base-uncased.json",
                "BERT_A1_GPT2_gpt2-medium.json",
                "BERTMULTI_A2_GPT2_gpt2.json",
                "BERTMULTI_A1_GPT2_gpt2-large.json",
                "BERTMULTI_A2_BERT_bert-base-cased.json",
                "BERT_A1_BERT_bert-base-multilingual-cased.json",
                "BERTMULTI_A1_XLM_xlm-mlm-en-2048.json",
                "BERT_A2_BERT_bert-base-uncased.json",
                "BERT_A2_XLNET_xlnet-large-cased.json",
                "BERTMULTI_A2_XLM_xlm-mlm-en-2048.json",
                "BERT_A2_GPT2_gpt2.json",
                "BERT_A2_XLM_xlm-clm-enfr-1024.json",
                "BERT_A2_GPT_openai-gpt.json",
                "BERT_A1_GPT2_gpt2.json",
                "BERTMULTI_A1_BERT_bert-base-cased.json",
                "BERTMULTI_A2_BERT_bert-base-uncased.json",
                "BERTMULTI_A1_GPT2_gpt2-medium.json",
                "BERT_A1_BERT_bert-base-uncased.json",
                "BERT_A2_XLM_xlm-mlm-enfr-1024.json",
                "BERT_A2_BERT_bert-large-cased.json",
                "BERT_A1_XLNET_xlnet-large-cased.json",
                "BERTMULTI_A2_GPT2_gpt2-large.json",
                "BERTMULTI_A2_XLM_xlm-clm-enfr-1024.json",
                "BERT_A1_XLM_xlm-clm-enfr-1024.json",
                "BERTMULTI_A1_GPT_openai-gpt.json",
                "BERTMULTI_A2_XLM_xlm-mlm-enfr-1024.json",
                "BERT_A1_GPT2_gpt2-large.json",
                "BERTMULTI_A1_XLM_xlm-mlm-enfr-1024.json",
                "BERTMULTI_A2_GPT2_gpt2-medium.json",
                "BERT_A1_BERT_bert-large-cased.json",
                "BERTMULTI_A2_BERT_bert-base-multilingual-cased.json",
                "BERTMULTI_A1_BERT_bert-base-multilingual-cased.json",
                "BERT_A2_GPT2_gpt2-large.json",
                "BERT_A1_XLM_xlm-mlm-enfr-1024.json",
                "BERT_A2_BERT_bert-base-multilingual-cased.json",
                "BERT_A1_XLM_xlm-mlm-en-2048.json",
                "BERTMULTI_A1_XLM_xlm-clm-enfr-1024.json",
                "BERT_A1_GPT_openai-gpt.json",
                "BERTMULTI_A2_BERT_bert-large-cased.json",
                "BERTMULTI_A2_XLNET_xlnet-large-cased.json"
            ]
        },
        "30": {
            "ID": "quereo_77.66",
            "QUESTION": "Who produced films starring Natalie Portman?",
            "SHORT_ANSWER": [
                "Alison_Owen",
                "Kevin_Feige",
                "Wong_Kar-wai",
                "Natalie_Portman",
                "Scott_Steindorff",
                "John_Calley"
            ],
            "FULL_EXPERT_ANSWER": [
                "The list of movie producers starring Natalie Portman is as follows: Joaquin Phoenix, Darren Aronofsky, Ryan Kavanaugh, Wes Anderson, Carmen Finestra, Roman Coppola, Michael Mann, Casey Affleck, Grant Hill, Danny McBride, Ivan Reitman, Michael Mann, Scott Rudin, Kevin Feige, Alison Owen, Larry J. Franco, Joel Silver, Rick McCallum, Mike Medavoy, Michael De Luca, Dan Bucatinsky, John Calley",
                "Alison Owen, Kevin Feige, Wong Kar-wai, Natalie Portman, Scott Steindorff and John Calley produced films starring Natalie Portman"
            ],
            "GENERATED_ANSWER": "Alison owen, kevin feige, wong kar-wai, natalie portman, scott steindorff and john calley produced films starring natalie portman",
            "MISSING_WORD": ",",
            "Need_LM_Assessing": false,
            "CONFIGURATION_FILE": [
                "BERTMULTI_A1_XLNET_xlnet-large-cased.json",
                "BERT_A2_GPT2_gpt2-medium.json",
                "BERT_A2_XLM_xlm-mlm-en-2048.json",
                "BERT_A2_BERT_bert-base-cased.json",
                "BERT_A1_BERT_bert-base-cased.json",
                "BERTMULTI_A1_BERT_bert-large-cased.json",
                "BERTMULTI_A1_GPT2_gpt2.json",
                "BERTMULTI_A2_GPT_openai-gpt.json",
                "BERTMULTI_A1_BERT_bert-base-uncased.json",
                "BERT_A1_GPT2_gpt2-medium.json",
                "BERTMULTI_A2_GPT2_gpt2.json",
                "BERTMULTI_A1_GPT2_gpt2-large.json",
                "BERTMULTI_A2_BERT_bert-base-cased.json",
                "BERT_A1_BERT_bert-base-multilingual-cased.json",
                "BERTMULTI_A1_XLM_xlm-mlm-en-2048.json",
                "BERT_A2_BERT_bert-base-uncased.json",
                "BERT_A2_XLNET_xlnet-large-cased.json",
                "BERTMULTI_A2_XLM_xlm-mlm-en-2048.json",
                "BERT_A2_GPT2_gpt2.json",
                "BERT_A2_XLM_xlm-clm-enfr-1024.json",
                "BERT_A2_GPT_openai-gpt.json",
                "BERT_A1_GPT2_gpt2.json",
                "BERTMULTI_A1_BERT_bert-base-cased.json",
                "BERTMULTI_A2_BERT_bert-base-uncased.json",
                "BERTMULTI_A1_GPT2_gpt2-medium.json",
                "BERT_A1_BERT_bert-base-uncased.json",
                "BERT_A2_XLM_xlm-mlm-enfr-1024.json",
                "BERT_A2_BERT_bert-large-cased.json",
                "BERT_A1_XLNET_xlnet-large-cased.json",
                "BERTMULTI_A2_GPT2_gpt2-large.json",
                "BERTMULTI_A2_XLM_xlm-clm-enfr-1024.json",
                "BERT_A1_XLM_xlm-clm-enfr-1024.json",
                "BERTMULTI_A1_GPT_openai-gpt.json",
                "BERTMULTI_A2_XLM_xlm-mlm-enfr-1024.json",
                "BERT_A1_GPT2_gpt2-large.json",
                "BERTMULTI_A1_XLM_xlm-mlm-enfr-1024.json",
                "BERTMULTI_A2_GPT2_gpt2-medium.json",
                "BERT_A1_BERT_bert-large-cased.json",
                "BERTMULTI_A2_BERT_bert-base-multilingual-cased.json",
                "BERTMULTI_A1_BERT_bert-base-multilingual-cased.json",
                "BERT_A2_GPT2_gpt2-large.json",
                "BERT_A1_XLM_xlm-mlm-enfr-1024.json",
                "BERT_A2_BERT_bert-base-multilingual-cased.json",
                "BERT_A1_XLM_xlm-mlm-en-2048.json",
                "BERTMULTI_A1_XLM_xlm-clm-enfr-1024.json",
                "BERT_A1_GPT_openai-gpt.json",
                "BERTMULTI_A2_BERT_bert-large-cased.json",
                "BERTMULTI_A2_XLNET_xlnet-large-cased.json"
            ]
        },
        "31": {
            "ID": "quereo_81.70",
            "QUESTION": "Whom did Lance Bass marry?",
            "SHORT_ANSWER": [
                "Michael_Turchin"
            ],
            "FULL_EXPERT_ANSWER": [
                "Michael Turchin married Lance Bass.",
                "Lance Bass married Michael Turchin"
            ],
            "GENERATED_ANSWER": "Lance bass married michael turchin",
            "MISSING_WORD": ".",
            "Need_LM_Assessing": true,
            "CONFIGURATION_FILE": [
                "BERTMULTI_A1_XLNET_xlnet-large-cased.json",
                "BERTMULTI_A1_BERT_bert-large-cased.json",
                "BERTMULTI_A1_GPT2_gpt2.json",
                "BERTMULTI_A2_GPT_openai-gpt.json",
                "BERTMULTI_A1_BERT_bert-base-uncased.json",
                "BERTMULTI_A2_GPT2_gpt2.json",
                "BERTMULTI_A1_GPT2_gpt2-large.json",
                "BERTMULTI_A2_BERT_bert-base-cased.json",
                "BERTMULTI_A1_XLM_xlm-mlm-en-2048.json",
                "BERTMULTI_A2_XLM_xlm-mlm-en-2048.json",
                "BERTMULTI_A1_BERT_bert-base-cased.json",
                "BERTMULTI_A2_BERT_bert-base-uncased.json",
                "BERTMULTI_A1_GPT2_gpt2-medium.json",
                "BERTMULTI_A2_GPT2_gpt2-large.json",
                "BERTMULTI_A2_XLM_xlm-clm-enfr-1024.json",
                "BERTMULTI_A1_GPT_openai-gpt.json",
                "BERTMULTI_A2_XLM_xlm-mlm-enfr-1024.json",
                "BERTMULTI_A1_XLM_xlm-mlm-enfr-1024.json",
                "BERTMULTI_A2_GPT2_gpt2-medium.json",
                "BERTMULTI_A2_BERT_bert-base-multilingual-cased.json",
                "BERTMULTI_A1_BERT_bert-base-multilingual-cased.json",
                "BERTMULTI_A1_XLM_xlm-clm-enfr-1024.json",
                "BERTMULTI_A2_BERT_bert-large-cased.json",
                "BERTMULTI_A2_XLNET_xlnet-large-cased.json"
            ]
        },
        "32": {
            "ID": "quereo_89.75",
            "QUESTION": "What are the five boroughs of New York?",
            "SHORT_ANSWER": [
                "Queens",
                "Staten_Island",
                "Manhattan",
                "The_Bronx",
                "Brooklyn"
            ],
            "FULL_EXPERT_ANSWER": [
                "Queens, Staten Island, Manhattan, The Bronx and Brooklyn are the five boroughs of New York.",
                "the five boroughs of New York are Queens, Staten Island, Manhattan, The Bronx and Brooklyn"
            ],
            "GENERATED_ANSWER": "The five boroughs of new york are queens, staten island, manhattan, the bronx and brooklyn",
            "MISSING_WORD": ":",
            "Need_LM_Assessing": true,
            "CONFIGURATION_FILE": [
                "BERTMULTI_A1_XLNET_xlnet-large-cased.json",
                "BERT_A2_GPT2_gpt2-medium.json",
                "BERT_A2_XLM_xlm-mlm-en-2048.json",
                "BERT_A2_BERT_bert-base-cased.json",
                "BERT_A1_BERT_bert-base-cased.json",
                "BERTMULTI_A1_BERT_bert-large-cased.json",
                "BERTMULTI_A1_GPT2_gpt2.json",
                "BERTMULTI_A2_GPT_openai-gpt.json",
                "BERTMULTI_A1_BERT_bert-base-uncased.json",
                "BERT_A1_GPT2_gpt2-medium.json",
                "BERTMULTI_A2_GPT2_gpt2.json",
                "BERTMULTI_A1_GPT2_gpt2-large.json",
                "BERTMULTI_A2_BERT_bert-base-cased.json",
                "BERT_A1_BERT_bert-base-multilingual-cased.json",
                "BERTMULTI_A1_XLM_xlm-mlm-en-2048.json",
                "BERT_A2_BERT_bert-base-uncased.json",
                "BERT_A2_XLNET_xlnet-large-cased.json",
                "BERTMULTI_A2_XLM_xlm-mlm-en-2048.json",
                "BERT_A2_GPT2_gpt2.json",
                "BERT_A2_XLM_xlm-clm-enfr-1024.json",
                "BERT_A2_GPT_openai-gpt.json",
                "BERT_A1_GPT2_gpt2.json",
                "BERTMULTI_A1_BERT_bert-base-cased.json",
                "BERTMULTI_A2_BERT_bert-base-uncased.json",
                "BERTMULTI_A1_GPT2_gpt2-medium.json",
                "BERT_A1_BERT_bert-base-uncased.json",
                "BERT_A2_XLM_xlm-mlm-enfr-1024.json",
                "BERT_A2_BERT_bert-large-cased.json",
                "BERT_A1_XLNET_xlnet-large-cased.json",
                "BERTMULTI_A2_GPT2_gpt2-large.json",
                "BERTMULTI_A2_XLM_xlm-clm-enfr-1024.json",
                "BERT_A1_XLM_xlm-clm-enfr-1024.json",
                "BERTMULTI_A1_GPT_openai-gpt.json",
                "BERTMULTI_A2_XLM_xlm-mlm-enfr-1024.json",
                "BERT_A1_GPT2_gpt2-large.json",
                "BERTMULTI_A1_XLM_xlm-mlm-enfr-1024.json",
                "BERTMULTI_A2_GPT2_gpt2-medium.json",
                "BERT_A1_BERT_bert-large-cased.json",
                "BERTMULTI_A2_BERT_bert-base-multilingual-cased.json",
                "BERTMULTI_A1_BERT_bert-base-multilingual-cased.json",
                "BERT_A2_GPT2_gpt2-large.json",
                "BERT_A1_XLM_xlm-mlm-enfr-1024.json",
                "BERT_A2_BERT_bert-base-multilingual-cased.json",
                "BERT_A1_XLM_xlm-mlm-en-2048.json",
                "BERTMULTI_A1_XLM_xlm-clm-enfr-1024.json",
                "BERT_A1_GPT_openai-gpt.json",
                "BERTMULTI_A2_BERT_bert-large-cased.json",
                "BERTMULTI_A2_XLNET_xlnet-large-cased.json"
            ]
        },
        "33": {
            "ID": "quereo_92.77",
            "QUESTION": "In which city does Sylvester Stallone live?",
            "SHORT_ANSWER": [
                "Beverly_Hills"
            ],
            "FULL_EXPERT_ANSWER": [
                "Sylvester Stallone lives in Beverly Hills."
            ],
            "GENERATED_ANSWER": "Sylvester stallone lives in beverly hills",
            "MISSING_WORD": "in",
            "Need_LM_Assessing": true,
            "CONFIGURATION_FILE": [
                "BERTMULTI_A1_XLNET_xlnet-large-cased.json",
                "BERT_A2_GPT2_gpt2-medium.json",
                "BERT_A2_XLM_xlm-mlm-en-2048.json",
                "BERT_A2_BERT_bert-base-cased.json",
                "BERT_A1_BERT_bert-base-cased.json",
                "BERTMULTI_A1_BERT_bert-large-cased.json",
                "BERTMULTI_A1_GPT2_gpt2.json",
                "BERTMULTI_A2_GPT_openai-gpt.json",
                "BERTMULTI_A1_BERT_bert-base-uncased.json",
                "BERT_A1_GPT2_gpt2-medium.json",
                "BERTMULTI_A2_GPT2_gpt2.json",
                "BERTMULTI_A1_GPT2_gpt2-large.json",
                "BERTMULTI_A2_BERT_bert-base-cased.json",
                "BERT_A1_BERT_bert-base-multilingual-cased.json",
                "BERTMULTI_A1_XLM_xlm-mlm-en-2048.json",
                "BERT_A2_BERT_bert-base-uncased.json",
                "BERT_A2_XLNET_xlnet-large-cased.json",
                "BERTMULTI_A2_XLM_xlm-mlm-en-2048.json",
                "BERT_A2_GPT2_gpt2.json",
                "BERT_A2_XLM_xlm-clm-enfr-1024.json",
                "BERT_A2_GPT_openai-gpt.json",
                "BERT_A1_GPT2_gpt2.json",
                "BERTMULTI_A1_BERT_bert-base-cased.json",
                "BERTMULTI_A2_BERT_bert-base-uncased.json",
                "BERTMULTI_A1_GPT2_gpt2-medium.json",
                "BERT_A1_BERT_bert-base-uncased.json",
                "BERT_A2_XLM_xlm-mlm-enfr-1024.json",
                "BERT_A2_BERT_bert-large-cased.json",
                "BERT_A1_XLNET_xlnet-large-cased.json",
                "BERTMULTI_A2_GPT2_gpt2-large.json",
                "BERTMULTI_A2_XLM_xlm-clm-enfr-1024.json",
                "BERT_A1_XLM_xlm-clm-enfr-1024.json",
                "BERTMULTI_A1_GPT_openai-gpt.json",
                "BERTMULTI_A2_XLM_xlm-mlm-enfr-1024.json",
                "BERT_A1_GPT2_gpt2-large.json",
                "BERTMULTI_A1_XLM_xlm-mlm-enfr-1024.json",
                "BERTMULTI_A2_GPT2_gpt2-medium.json",
                "BERT_A1_BERT_bert-large-cased.json",
                "BERTMULTI_A2_BERT_bert-base-multilingual-cased.json",
                "BERTMULTI_A1_BERT_bert-base-multilingual-cased.json",
                "BERT_A2_GPT2_gpt2-large.json",
                "BERT_A1_XLM_xlm-mlm-enfr-1024.json",
                "BERT_A2_BERT_bert-base-multilingual-cased.json",
                "BERT_A1_XLM_xlm-mlm-en-2048.json",
                "BERTMULTI_A1_XLM_xlm-clm-enfr-1024.json",
                "BERT_A1_GPT_openai-gpt.json",
                "BERTMULTI_A2_BERT_bert-large-cased.json",
                "BERTMULTI_A2_XLNET_xlnet-large-cased.json"
            ]
        },
        "34": {
            "ID": "quereo_94.79",
            "QUESTION": "What are the names of the Teenage Mutant Ninja Turtles?",
            "SHORT_ANSWER": [
                "Leonardo",
                "Donatello",
                "Michelangelo",
                "Raphael"
            ],
            "FULL_EXPERT_ANSWER": [
                "Michelangelo, Donatello, Leonardo, Raphael et April O'Neil are the names of the ninja turtles.",
                "Leonardo, Donatello, Michelangelo and Raphael are the names of the Teenage Mutant Ninja Turtles",
                "the names of the Teenage Mutant Ninja Turtles are Leonardo, Donatello, Michelangelo and Raphael"
            ],
            "GENERATED_ANSWER": "The names of the teenage mutant ninja turtles are leonardo, donatello, michelangelo and raphael",
            "MISSING_WORD": ":",
            "Need_LM_Assessing": true,
            "CONFIGURATION_FILE": [
                "BERTMULTI_A1_XLNET_xlnet-large-cased.json",
                "BERT_A2_GPT2_gpt2-medium.json",
                "BERT_A2_XLM_xlm-mlm-en-2048.json",
                "BERT_A2_BERT_bert-base-cased.json",
                "BERT_A1_BERT_bert-base-cased.json",
                "BERTMULTI_A1_BERT_bert-large-cased.json",
                "BERTMULTI_A1_GPT2_gpt2.json",
                "BERTMULTI_A2_GPT_openai-gpt.json",
                "BERTMULTI_A1_BERT_bert-base-uncased.json",
                "BERT_A1_GPT2_gpt2-medium.json",
                "BERTMULTI_A2_GPT2_gpt2.json",
                "BERTMULTI_A1_GPT2_gpt2-large.json",
                "BERTMULTI_A2_BERT_bert-base-cased.json",
                "BERT_A1_BERT_bert-base-multilingual-cased.json",
                "BERTMULTI_A1_XLM_xlm-mlm-en-2048.json",
                "BERT_A2_BERT_bert-base-uncased.json",
                "BERT_A2_XLNET_xlnet-large-cased.json",
                "BERTMULTI_A2_XLM_xlm-mlm-en-2048.json",
                "BERT_A2_GPT2_gpt2.json",
                "BERT_A2_XLM_xlm-clm-enfr-1024.json",
                "BERT_A2_GPT_openai-gpt.json",
                "BERT_A1_GPT2_gpt2.json",
                "BERTMULTI_A1_BERT_bert-base-cased.json",
                "BERTMULTI_A2_BERT_bert-base-uncased.json",
                "BERTMULTI_A1_GPT2_gpt2-medium.json",
                "BERT_A1_BERT_bert-base-uncased.json",
                "BERT_A2_XLM_xlm-mlm-enfr-1024.json",
                "BERT_A2_BERT_bert-large-cased.json",
                "BERT_A1_XLNET_xlnet-large-cased.json",
                "BERTMULTI_A2_GPT2_gpt2-large.json",
                "BERTMULTI_A2_XLM_xlm-clm-enfr-1024.json",
                "BERT_A1_XLM_xlm-clm-enfr-1024.json",
                "BERTMULTI_A1_GPT_openai-gpt.json",
                "BERTMULTI_A2_XLM_xlm-mlm-enfr-1024.json",
                "BERT_A1_GPT2_gpt2-large.json",
                "BERTMULTI_A1_XLM_xlm-mlm-enfr-1024.json",
                "BERTMULTI_A2_GPT2_gpt2-medium.json",
                "BERT_A1_BERT_bert-large-cased.json",
                "BERTMULTI_A2_BERT_bert-base-multilingual-cased.json",
                "BERTMULTI_A1_BERT_bert-base-multilingual-cased.json",
                "BERT_A2_GPT2_gpt2-large.json",
                "BERT_A1_XLM_xlm-mlm-enfr-1024.json",
                "BERT_A2_BERT_bert-base-multilingual-cased.json",
                "BERT_A1_XLM_xlm-mlm-en-2048.json",
                "BERTMULTI_A1_XLM_xlm-clm-enfr-1024.json",
                "BERT_A1_GPT_openai-gpt.json",
                "BERTMULTI_A2_BERT_bert-large-cased.json",
                "BERTMULTI_A2_XLNET_xlnet-large-cased.json"
            ]
        },
        "35": {
            "ID": "quereo_97.82",
            "QUESTION": "Who became president after JFK died?",
            "SHORT_ANSWER": [
                "Lyndon_B._Johnson"
            ],
            "FULL_EXPERT_ANSWER": [
                "Lyndon B. Johnson became President after JFK died.",
                "after JFK died, Lyndon B. Johnson became President"
            ],
            "GENERATED_ANSWER": "Lyndon b. johnson became president after jfk died",
            "MISSING_WORD": ".",
            "Need_LM_Assessing": false,
            "CONFIGURATION_FILE": [
                "BERTMULTI_A1_XLNET_xlnet-large-cased.json",
                "BERT_A2_GPT2_gpt2-medium.json",
                "BERT_A2_XLM_xlm-mlm-en-2048.json",
                "BERT_A2_BERT_bert-base-cased.json",
                "BERT_A1_BERT_bert-base-cased.json",
                "BERTMULTI_A1_BERT_bert-large-cased.json",
                "BERTMULTI_A1_GPT2_gpt2.json",
                "BERTMULTI_A2_GPT_openai-gpt.json",
                "BERTMULTI_A1_BERT_bert-base-uncased.json",
                "BERT_A1_GPT2_gpt2-medium.json",
                "BERTMULTI_A2_GPT2_gpt2.json",
                "BERTMULTI_A1_GPT2_gpt2-large.json",
                "BERTMULTI_A2_BERT_bert-base-cased.json",
                "BERT_A1_BERT_bert-base-multilingual-cased.json",
                "BERTMULTI_A1_XLM_xlm-mlm-en-2048.json",
                "BERT_A2_BERT_bert-base-uncased.json",
                "BERT_A2_XLNET_xlnet-large-cased.json",
                "BERTMULTI_A2_XLM_xlm-mlm-en-2048.json",
                "BERT_A2_GPT2_gpt2.json",
                "BERT_A2_XLM_xlm-clm-enfr-1024.json",
                "BERT_A2_GPT_openai-gpt.json",
                "BERT_A1_GPT2_gpt2.json",
                "BERTMULTI_A1_BERT_bert-base-cased.json",
                "BERTMULTI_A2_BERT_bert-base-uncased.json",
                "BERTMULTI_A1_GPT2_gpt2-medium.json",
                "BERT_A1_BERT_bert-base-uncased.json",
                "BERT_A2_XLM_xlm-mlm-enfr-1024.json",
                "BERT_A2_BERT_bert-large-cased.json",
                "BERT_A1_XLNET_xlnet-large-cased.json",
                "BERTMULTI_A2_GPT2_gpt2-large.json",
                "BERTMULTI_A2_XLM_xlm-clm-enfr-1024.json",
                "BERT_A1_XLM_xlm-clm-enfr-1024.json",
                "BERTMULTI_A1_GPT_openai-gpt.json",
                "BERTMULTI_A2_XLM_xlm-mlm-enfr-1024.json",
                "BERT_A1_GPT2_gpt2-large.json",
                "BERTMULTI_A1_XLM_xlm-mlm-enfr-1024.json",
                "BERTMULTI_A2_GPT2_gpt2-medium.json",
                "BERT_A1_BERT_bert-large-cased.json",
                "BERTMULTI_A2_BERT_bert-base-multilingual-cased.json",
                "BERTMULTI_A1_BERT_bert-base-multilingual-cased.json",
                "BERT_A2_GPT2_gpt2-large.json",
                "BERT_A1_XLM_xlm-mlm-enfr-1024.json",
                "BERT_A2_BERT_bert-base-multilingual-cased.json",
                "BERT_A1_XLM_xlm-mlm-en-2048.json",
                "BERTMULTI_A1_XLM_xlm-clm-enfr-1024.json",
                "BERT_A1_GPT_openai-gpt.json",
                "BERTMULTI_A2_BERT_bert-large-cased.json",
                "BERTMULTI_A2_XLNET_xlnet-large-cased.json"
            ]
        },
        "36": {
            "ID": "quereo_98.83",
            "QUESTION": "In what city is the Heineken brewery?",
            "SHORT_ANSWER": [
                "Amsterdam"
            ],
            "FULL_EXPERT_ANSWER": [
                "Heineken Brewery is located in Amsterdam",
                "the Heineken brewery is located in Amsterdam",
                "the Heineken brewery is in Amsterdam"
            ],
            "GENERATED_ANSWER": "The heineken brewery is in amsterdam",
            "MISSING_WORD": "in",
            "Need_LM_Assessing": true,
            "CONFIGURATION_FILE": [
                "BERTMULTI_A1_XLNET_xlnet-large-cased.json",
                "BERTMULTI_A1_BERT_bert-large-cased.json",
                "BERTMULTI_A1_GPT2_gpt2.json",
                "BERTMULTI_A2_GPT_openai-gpt.json",
                "BERTMULTI_A1_BERT_bert-base-uncased.json",
                "BERTMULTI_A2_GPT2_gpt2.json",
                "BERTMULTI_A1_GPT2_gpt2-large.json",
                "BERTMULTI_A2_BERT_bert-base-cased.json",
                "BERTMULTI_A1_XLM_xlm-mlm-en-2048.json",
                "BERTMULTI_A2_XLM_xlm-mlm-en-2048.json",
                "BERTMULTI_A1_BERT_bert-base-cased.json",
                "BERTMULTI_A2_BERT_bert-base-uncased.json",
                "BERTMULTI_A1_GPT2_gpt2-medium.json",
                "BERTMULTI_A2_GPT2_gpt2-large.json",
                "BERTMULTI_A2_XLM_xlm-clm-enfr-1024.json",
                "BERTMULTI_A1_GPT_openai-gpt.json",
                "BERTMULTI_A2_XLM_xlm-mlm-enfr-1024.json",
                "BERTMULTI_A1_XLM_xlm-mlm-enfr-1024.json",
                "BERTMULTI_A2_GPT2_gpt2-medium.json",
                "BERTMULTI_A2_BERT_bert-base-multilingual-cased.json",
                "BERTMULTI_A1_BERT_bert-base-multilingual-cased.json",
                "BERTMULTI_A1_XLM_xlm-clm-enfr-1024.json",
                "BERTMULTI_A2_BERT_bert-large-cased.json",
                "BERTMULTI_A2_XLNET_xlnet-large-cased.json"
            ]
        },
        "37": {
            "ID": "quereo_104.86",
            "QUESTION": "Which river does the Brooklyn Bridge cross?",
            "SHORT_ANSWER": [
                "East_River"
            ],
            "FULL_EXPERT_ANSWER": [
                "the East river is crossed by the Brooklyn Bridge",
                "the Brooklyn Bridge crosses the East river"
            ],
            "GENERATED_ANSWER": "The brooklyn bridge crosses the east river",
            "MISSING_WORD": "the",
            "Need_LM_Assessing": true,
            "CONFIGURATION_FILE": [
                "BERTMULTI_A1_XLNET_xlnet-large-cased.json",
                "BERTMULTI_A1_BERT_bert-large-cased.json",
                "BERTMULTI_A1_GPT2_gpt2.json",
                "BERTMULTI_A2_GPT_openai-gpt.json",
                "BERTMULTI_A1_BERT_bert-base-uncased.json",
                "BERTMULTI_A2_GPT2_gpt2.json",
                "BERTMULTI_A1_GPT2_gpt2-large.json",
                "BERTMULTI_A2_BERT_bert-base-cased.json",
                "BERTMULTI_A1_XLM_xlm-mlm-en-2048.json",
                "BERTMULTI_A2_XLM_xlm-mlm-en-2048.json",
                "BERTMULTI_A1_BERT_bert-base-cased.json",
                "BERTMULTI_A2_BERT_bert-base-uncased.json",
                "BERTMULTI_A1_GPT2_gpt2-medium.json",
                "BERTMULTI_A2_GPT2_gpt2-large.json",
                "BERTMULTI_A2_XLM_xlm-clm-enfr-1024.json",
                "BERTMULTI_A1_GPT_openai-gpt.json",
                "BERTMULTI_A2_XLM_xlm-mlm-enfr-1024.json",
                "BERTMULTI_A1_XLM_xlm-mlm-enfr-1024.json",
                "BERTMULTI_A2_GPT2_gpt2-medium.json",
                "BERTMULTI_A2_BERT_bert-base-multilingual-cased.json",
                "BERTMULTI_A1_BERT_bert-base-multilingual-cased.json",
                "BERTMULTI_A1_XLM_xlm-clm-enfr-1024.json",
                "BERTMULTI_A2_BERT_bert-large-cased.json",
                "BERTMULTI_A2_XLNET_xlnet-large-cased.json"
            ]
        },
        "38": {
            "ID": "quereo_107.89",
            "QUESTION": "Does the Isar flow into a lake?",
            "SHORT_ANSWER": [
                "Yes"
            ],
            "FULL_EXPERT_ANSWER": [
                "Yes, the Isar River throws into a lake.",
                "Yes, the Isar flows into a lake."
            ],
            "GENERATED_ANSWER": "Yes, the isar flows into a lake",
            "MISSING_WORD": "None",
            "Need_LM_Assessing": false,
            "CONFIGURATION_FILE": [
                "BERTMULTI_A1_XLNET_xlnet-large-cased.json",
                "BERT_A2_GPT2_gpt2-medium.json",
                "BERT_A2_XLM_xlm-mlm-en-2048.json",
                "BERT_A2_BERT_bert-base-cased.json",
                "BERT_A1_BERT_bert-base-cased.json",
                "BERTMULTI_A1_BERT_bert-large-cased.json",
                "BERTMULTI_A1_GPT2_gpt2.json",
                "BERTMULTI_A2_GPT_openai-gpt.json",
                "BERTMULTI_A1_BERT_bert-base-uncased.json",
                "BERT_A1_GPT2_gpt2-medium.json",
                "BERTMULTI_A2_GPT2_gpt2.json",
                "BERTMULTI_A1_GPT2_gpt2-large.json",
                "BERTMULTI_A2_BERT_bert-base-cased.json",
                "BERT_A1_BERT_bert-base-multilingual-cased.json",
                "BERTMULTI_A1_XLM_xlm-mlm-en-2048.json",
                "BERT_A2_BERT_bert-base-uncased.json",
                "BERT_A2_XLNET_xlnet-large-cased.json",
                "BERTMULTI_A2_XLM_xlm-mlm-en-2048.json",
                "BERT_A2_GPT2_gpt2.json",
                "BERT_A2_XLM_xlm-clm-enfr-1024.json",
                "BERT_A2_GPT_openai-gpt.json",
                "BERT_A1_GPT2_gpt2.json",
                "BERTMULTI_A1_BERT_bert-base-cased.json",
                "BERTMULTI_A2_BERT_bert-base-uncased.json",
                "BERTMULTI_A1_GPT2_gpt2-medium.json",
                "BERT_A1_BERT_bert-base-uncased.json",
                "BERT_A2_XLM_xlm-mlm-enfr-1024.json",
                "BERT_A2_BERT_bert-large-cased.json",
                "BERT_A1_XLNET_xlnet-large-cased.json",
                "BERTMULTI_A2_GPT2_gpt2-large.json",
                "BERTMULTI_A2_XLM_xlm-clm-enfr-1024.json",
                "BERT_A1_XLM_xlm-clm-enfr-1024.json",
                "BERTMULTI_A1_GPT_openai-gpt.json",
                "BERTMULTI_A2_XLM_xlm-mlm-enfr-1024.json",
                "BERT_A1_GPT2_gpt2-large.json",
                "BERTMULTI_A1_XLM_xlm-mlm-enfr-1024.json",
                "BERTMULTI_A2_GPT2_gpt2-medium.json",
                "BERT_A1_BERT_bert-large-cased.json",
                "BERTMULTI_A2_BERT_bert-base-multilingual-cased.json",
                "BERTMULTI_A1_BERT_bert-base-multilingual-cased.json",
                "BERT_A2_GPT2_gpt2-large.json",
                "BERT_A1_XLM_xlm-mlm-enfr-1024.json",
                "BERT_A2_BERT_bert-base-multilingual-cased.json",
                "BERT_A1_XLM_xlm-mlm-en-2048.json",
                "BERTMULTI_A1_XLM_xlm-clm-enfr-1024.json",
                "BERT_A1_GPT_openai-gpt.json",
                "BERTMULTI_A2_BERT_bert-large-cased.json",
                "BERTMULTI_A2_XLNET_xlnet-large-cased.json"
            ]
        },
        "39": {
            "ID": "quereo_108.90",
            "QUESTION": "Which countries have more than ten caves?",
            "SHORT_ANSWER": [
                "Australia",
                "Italy",
                "Jamaica",
                "United_States",
                "Germany",
                "United_Kingdom",
                "England",
                "Gibraltar",
                "Mexico"
            ],
            "FULL_EXPERT_ANSWER": [
                "The list of countries with more than 10 caves is as follows:Australia, Italy, Jamaica, United_States, Germany, United_Kingdom",
                "Australia, Italy, Jamaica, United States, Germany, United Kingdom, England, Gibraltar and Mexico have more than ten caves"
            ],
            "GENERATED_ANSWER": "Australia, italy, jamaica, united states, germany, united kingdom, england, gibraltar and mexico have more than ten caves",
            "MISSING_WORD": ".",
            "Need_LM_Assessing": false,
            "CONFIGURATION_FILE": [
                "BERTMULTI_A1_XLNET_xlnet-large-cased.json",
                "BERT_A2_GPT2_gpt2-medium.json",
                "BERT_A2_XLM_xlm-mlm-en-2048.json",
                "BERT_A2_BERT_bert-base-cased.json",
                "BERT_A1_BERT_bert-base-cased.json",
                "BERTMULTI_A1_BERT_bert-large-cased.json",
                "BERTMULTI_A1_GPT2_gpt2.json",
                "BERTMULTI_A2_GPT_openai-gpt.json",
                "BERTMULTI_A1_BERT_bert-base-uncased.json",
                "BERT_A1_GPT2_gpt2-medium.json",
                "BERTMULTI_A2_GPT2_gpt2.json",
                "BERTMULTI_A1_GPT2_gpt2-large.json",
                "BERTMULTI_A2_BERT_bert-base-cased.json",
                "BERT_A1_BERT_bert-base-multilingual-cased.json",
                "BERTMULTI_A1_XLM_xlm-mlm-en-2048.json",
                "BERT_A2_BERT_bert-base-uncased.json",
                "BERT_A2_XLNET_xlnet-large-cased.json",
                "BERTMULTI_A2_XLM_xlm-mlm-en-2048.json",
                "BERT_A2_GPT2_gpt2.json",
                "BERT_A2_XLM_xlm-clm-enfr-1024.json",
                "BERT_A2_GPT_openai-gpt.json",
                "BERT_A1_GPT2_gpt2.json",
                "BERTMULTI_A1_BERT_bert-base-cased.json",
                "BERTMULTI_A2_BERT_bert-base-uncased.json",
                "BERTMULTI_A1_GPT2_gpt2-medium.json",
                "BERT_A1_BERT_bert-base-uncased.json",
                "BERT_A2_XLM_xlm-mlm-enfr-1024.json",
                "BERT_A2_BERT_bert-large-cased.json",
                "BERT_A1_XLNET_xlnet-large-cased.json",
                "BERTMULTI_A2_GPT2_gpt2-large.json",
                "BERTMULTI_A2_XLM_xlm-clm-enfr-1024.json",
                "BERT_A1_XLM_xlm-clm-enfr-1024.json",
                "BERTMULTI_A1_GPT_openai-gpt.json",
                "BERTMULTI_A2_XLM_xlm-mlm-enfr-1024.json",
                "BERT_A1_GPT2_gpt2-large.json",
                "BERTMULTI_A1_XLM_xlm-mlm-enfr-1024.json",
                "BERTMULTI_A2_GPT2_gpt2-medium.json",
                "BERT_A1_BERT_bert-large-cased.json",
                "BERTMULTI_A2_BERT_bert-base-multilingual-cased.json",
                "BERTMULTI_A1_BERT_bert-base-multilingual-cased.json",
                "BERT_A2_GPT2_gpt2-large.json",
                "BERT_A1_XLM_xlm-mlm-enfr-1024.json",
                "BERT_A2_BERT_bert-base-multilingual-cased.json",
                "BERT_A1_XLM_xlm-mlm-en-2048.json",
                "BERTMULTI_A1_XLM_xlm-clm-enfr-1024.json",
                "BERT_A1_GPT_openai-gpt.json",
                "BERTMULTI_A2_BERT_bert-large-cased.json",
                "BERTMULTI_A2_XLNET_xlnet-large-cased.json"
            ]
        },
        "40": {
            "ID": "quereo_109.91",
            "QUESTION": "Are tree frogs a type of amphibian?",
            "SHORT_ANSWER": [
                "Yes"
            ],
            "FULL_EXPERT_ANSWER": [
                "Yes, Tree frogs are a type of amphibian"
            ],
            "GENERATED_ANSWER": "Yes, tree frogs are a type of amphibian",
            "MISSING_WORD": "None",
            "Need_LM_Assessing": false,
            "CONFIGURATION_FILE": [
                "BERTMULTI_A1_XLNET_xlnet-large-cased.json",
                "BERT_A2_GPT2_gpt2-medium.json",
                "BERT_A2_XLM_xlm-mlm-en-2048.json",
                "BERT_A2_BERT_bert-base-cased.json",
                "BERT_A1_BERT_bert-base-cased.json",
                "BERTMULTI_A1_BERT_bert-large-cased.json",
                "BERTMULTI_A1_GPT2_gpt2.json",
                "BERTMULTI_A2_GPT_openai-gpt.json",
                "BERTMULTI_A1_BERT_bert-base-uncased.json",
                "BERT_A1_GPT2_gpt2-medium.json",
                "BERTMULTI_A2_GPT2_gpt2.json",
                "BERTMULTI_A1_GPT2_gpt2-large.json",
                "BERTMULTI_A2_BERT_bert-base-cased.json",
                "BERT_A1_BERT_bert-base-multilingual-cased.json",
                "BERTMULTI_A1_XLM_xlm-mlm-en-2048.json",
                "BERT_A2_BERT_bert-base-uncased.json",
                "BERT_A2_XLNET_xlnet-large-cased.json",
                "BERTMULTI_A2_XLM_xlm-mlm-en-2048.json",
                "BERT_A2_GPT2_gpt2.json",
                "BERT_A2_XLM_xlm-clm-enfr-1024.json",
                "BERT_A2_GPT_openai-gpt.json",
                "BERT_A1_GPT2_gpt2.json",
                "BERTMULTI_A1_BERT_bert-base-cased.json",
                "BERTMULTI_A2_BERT_bert-base-uncased.json",
                "BERTMULTI_A1_GPT2_gpt2-medium.json",
                "BERT_A1_BERT_bert-base-uncased.json",
                "BERT_A2_XLM_xlm-mlm-enfr-1024.json",
                "BERT_A2_BERT_bert-large-cased.json",
                "BERT_A1_XLNET_xlnet-large-cased.json",
                "BERTMULTI_A2_GPT2_gpt2-large.json",
                "BERTMULTI_A2_XLM_xlm-clm-enfr-1024.json",
                "BERT_A1_XLM_xlm-clm-enfr-1024.json",
                "BERTMULTI_A1_GPT_openai-gpt.json",
                "BERTMULTI_A2_XLM_xlm-mlm-enfr-1024.json",
                "BERT_A1_GPT2_gpt2-large.json",
                "BERTMULTI_A1_XLM_xlm-mlm-enfr-1024.json",
                "BERTMULTI_A2_GPT2_gpt2-medium.json",
                "BERT_A1_BERT_bert-large-cased.json",
                "BERTMULTI_A2_BERT_bert-base-multilingual-cased.json",
                "BERTMULTI_A1_BERT_bert-base-multilingual-cased.json",
                "BERT_A2_GPT2_gpt2-large.json",
                "BERT_A1_XLM_xlm-mlm-enfr-1024.json",
                "BERT_A2_BERT_bert-base-multilingual-cased.json",
                "BERT_A1_XLM_xlm-mlm-en-2048.json",
                "BERTMULTI_A1_XLM_xlm-clm-enfr-1024.json",
                "BERT_A1_GPT_openai-gpt.json",
                "BERTMULTI_A2_BERT_bert-large-cased.json",
                "BERTMULTI_A2_XLNET_xlnet-large-cased.json"
            ]
        },
        "41": {
            "ID": "quereo_114.94",
            "QUESTION": "Is Egypts largest city also its capital?",
            "SHORT_ANSWER": [
                "Yes"
            ],
            "FULL_EXPERT_ANSWER": [
                "Yes, the largest city in Egypt is also its capital.",
                "Yes, Egypts largest city is also its capital"
            ],
            "GENERATED_ANSWER": "Yes, egypts largest city is also its capital",
            "MISSING_WORD": "None",
            "Need_LM_Assessing": false,
            "CONFIGURATION_FILE": [
                "BERTMULTI_A1_XLNET_xlnet-large-cased.json",
                "BERT_A2_GPT2_gpt2-medium.json",
                "BERT_A2_XLM_xlm-mlm-en-2048.json",
                "BERT_A2_BERT_bert-base-cased.json",
                "BERT_A1_BERT_bert-base-cased.json",
                "BERTMULTI_A1_BERT_bert-large-cased.json",
                "BERTMULTI_A1_GPT2_gpt2.json",
                "BERTMULTI_A2_GPT_openai-gpt.json",
                "BERTMULTI_A1_BERT_bert-base-uncased.json",
                "BERT_A1_GPT2_gpt2-medium.json",
                "BERTMULTI_A2_GPT2_gpt2.json",
                "BERTMULTI_A1_GPT2_gpt2-large.json",
                "BERTMULTI_A2_BERT_bert-base-cased.json",
                "BERT_A1_BERT_bert-base-multilingual-cased.json",
                "BERTMULTI_A1_XLM_xlm-mlm-en-2048.json",
                "BERT_A2_BERT_bert-base-uncased.json",
                "BERT_A2_XLNET_xlnet-large-cased.json",
                "BERTMULTI_A2_XLM_xlm-mlm-en-2048.json",
                "BERT_A2_GPT2_gpt2.json",
                "BERT_A2_XLM_xlm-clm-enfr-1024.json",
                "BERT_A2_GPT_openai-gpt.json",
                "BERT_A1_GPT2_gpt2.json",
                "BERTMULTI_A1_BERT_bert-base-cased.json",
                "BERTMULTI_A2_BERT_bert-base-uncased.json",
                "BERTMULTI_A1_GPT2_gpt2-medium.json",
                "BERT_A1_BERT_bert-base-uncased.json",
                "BERT_A2_XLM_xlm-mlm-enfr-1024.json",
                "BERT_A2_BERT_bert-large-cased.json",
                "BERT_A1_XLNET_xlnet-large-cased.json",
                "BERTMULTI_A2_GPT2_gpt2-large.json",
                "BERTMULTI_A2_XLM_xlm-clm-enfr-1024.json",
                "BERT_A1_XLM_xlm-clm-enfr-1024.json",
                "BERTMULTI_A1_GPT_openai-gpt.json",
                "BERTMULTI_A2_XLM_xlm-mlm-enfr-1024.json",
                "BERT_A1_GPT2_gpt2-large.json",
                "BERTMULTI_A1_XLM_xlm-mlm-enfr-1024.json",
                "BERTMULTI_A2_GPT2_gpt2-medium.json",
                "BERT_A1_BERT_bert-large-cased.json",
                "BERTMULTI_A2_BERT_bert-base-multilingual-cased.json",
                "BERTMULTI_A1_BERT_bert-base-multilingual-cased.json",
                "BERT_A2_GPT2_gpt2-large.json",
                "BERT_A1_XLM_xlm-mlm-enfr-1024.json",
                "BERT_A2_BERT_bert-base-multilingual-cased.json",
                "BERT_A1_XLM_xlm-mlm-en-2048.json",
                "BERTMULTI_A1_XLM_xlm-clm-enfr-1024.json",
                "BERT_A1_GPT_openai-gpt.json",
                "BERTMULTI_A2_BERT_bert-large-cased.json",
                "BERTMULTI_A2_XLNET_xlnet-large-cased.json"
            ]
        },
        "42": {
            "ID": "quereo_120.100",
            "QUESTION": "Was U.S. president Jackson involved in a war?",
            "SHORT_ANSWER": [
                "No"
            ],
            "FULL_EXPERT_ANSWER": [
                "No, American President Jackson was not involved in a war.",
                "No, U.S. president Jackson was not involved in a war"
            ],
            "GENERATED_ANSWER": "No, u.s. president jackson was not involved in a war",
            "MISSING_WORD": "None",
            "Need_LM_Assessing": false,
            "CONFIGURATION_FILE": [
                "BERTMULTI_A1_XLNET_xlnet-large-cased.json",
                "BERT_A2_GPT2_gpt2-medium.json",
                "BERT_A2_XLM_xlm-mlm-en-2048.json",
                "BERT_A2_BERT_bert-base-cased.json",
                "BERT_A1_BERT_bert-base-cased.json",
                "BERTMULTI_A1_BERT_bert-large-cased.json",
                "BERTMULTI_A1_GPT2_gpt2.json",
                "BERTMULTI_A2_GPT_openai-gpt.json",
                "BERTMULTI_A1_BERT_bert-base-uncased.json",
                "BERT_A1_GPT2_gpt2-medium.json",
                "BERTMULTI_A2_GPT2_gpt2.json",
                "BERTMULTI_A1_GPT2_gpt2-large.json",
                "BERTMULTI_A2_BERT_bert-base-cased.json",
                "BERT_A1_BERT_bert-base-multilingual-cased.json",
                "BERTMULTI_A1_XLM_xlm-mlm-en-2048.json",
                "BERT_A2_BERT_bert-base-uncased.json",
                "BERT_A2_XLNET_xlnet-large-cased.json",
                "BERTMULTI_A2_XLM_xlm-mlm-en-2048.json",
                "BERT_A2_GPT2_gpt2.json",
                "BERT_A2_XLM_xlm-clm-enfr-1024.json",
                "BERT_A2_GPT_openai-gpt.json",
                "BERT_A1_GPT2_gpt2.json",
                "BERTMULTI_A1_BERT_bert-base-cased.json",
                "BERTMULTI_A2_BERT_bert-base-uncased.json",
                "BERTMULTI_A1_GPT2_gpt2-medium.json",
                "BERT_A1_BERT_bert-base-uncased.json",
                "BERT_A2_XLM_xlm-mlm-enfr-1024.json",
                "BERT_A2_BERT_bert-large-cased.json",
                "BERT_A1_XLNET_xlnet-large-cased.json",
                "BERTMULTI_A2_GPT2_gpt2-large.json",
                "BERTMULTI_A2_XLM_xlm-clm-enfr-1024.json",
                "BERT_A1_XLM_xlm-clm-enfr-1024.json",
                "BERTMULTI_A1_GPT_openai-gpt.json",
                "BERTMULTI_A2_XLM_xlm-mlm-enfr-1024.json",
                "BERT_A1_GPT2_gpt2-large.json",
                "BERTMULTI_A1_XLM_xlm-mlm-enfr-1024.json",
                "BERTMULTI_A2_GPT2_gpt2-medium.json",
                "BERT_A1_BERT_bert-large-cased.json",
                "BERTMULTI_A2_BERT_bert-base-multilingual-cased.json",
                "BERTMULTI_A1_BERT_bert-base-multilingual-cased.json",
                "BERT_A2_GPT2_gpt2-large.json",
                "BERT_A1_XLM_xlm-mlm-enfr-1024.json",
                "BERT_A2_BERT_bert-base-multilingual-cased.json",
                "BERT_A1_XLM_xlm-mlm-en-2048.json",
                "BERTMULTI_A1_XLM_xlm-clm-enfr-1024.json",
                "BERT_A1_GPT_openai-gpt.json",
                "BERTMULTI_A2_BERT_bert-large-cased.json",
                "BERTMULTI_A2_XLNET_xlnet-large-cased.json"
            ]
        },
        "43": {
            "ID": "quereo_123.102",
            "QUESTION": "What is the currency of the Czech Republic?",
            "SHORT_ANSWER": [
                "Czech_koruna"
            ],
            "FULL_EXPERT_ANSWER": [
                "The Czech republic's currency is the Czech koruna.",
                "Czech koruna is the currency of the Czech Republic",
                "the currency of the Czech Republic is the Czech koruna"
            ],
            "GENERATED_ANSWER": "The currency of the czech republic is the czech koruna",
            "MISSING_WORD": "the",
            "Need_LM_Assessing": true,
            "CONFIGURATION_FILE": [
                "BERTMULTI_A1_XLNET_xlnet-large-cased.json",
                "BERT_A2_GPT2_gpt2-medium.json",
                "BERT_A2_XLM_xlm-mlm-en-2048.json",
                "BERT_A2_BERT_bert-base-cased.json",
                "BERT_A1_BERT_bert-base-cased.json",
                "BERTMULTI_A1_BERT_bert-large-cased.json",
                "BERTMULTI_A1_GPT2_gpt2.json",
                "BERTMULTI_A2_GPT_openai-gpt.json",
                "BERTMULTI_A1_BERT_bert-base-uncased.json",
                "BERT_A1_GPT2_gpt2-medium.json",
                "BERTMULTI_A2_GPT2_gpt2.json",
                "BERTMULTI_A1_GPT2_gpt2-large.json",
                "BERTMULTI_A2_BERT_bert-base-cased.json",
                "BERT_A1_BERT_bert-base-multilingual-cased.json",
                "BERTMULTI_A1_XLM_xlm-mlm-en-2048.json",
                "BERT_A2_BERT_bert-base-uncased.json",
                "BERT_A2_XLNET_xlnet-large-cased.json",
                "BERTMULTI_A2_XLM_xlm-mlm-en-2048.json",
                "BERT_A2_GPT2_gpt2.json",
                "BERT_A2_XLM_xlm-clm-enfr-1024.json",
                "BERT_A2_GPT_openai-gpt.json",
                "BERT_A1_GPT2_gpt2.json",
                "BERTMULTI_A1_BERT_bert-base-cased.json",
                "BERTMULTI_A2_BERT_bert-base-uncased.json",
                "BERTMULTI_A1_GPT2_gpt2-medium.json",
                "BERT_A1_BERT_bert-base-uncased.json",
                "BERT_A2_XLM_xlm-mlm-enfr-1024.json",
                "BERT_A2_BERT_bert-large-cased.json",
                "BERT_A1_XLNET_xlnet-large-cased.json",
                "BERTMULTI_A2_GPT2_gpt2-large.json",
                "BERTMULTI_A2_XLM_xlm-clm-enfr-1024.json",
                "BERT_A1_XLM_xlm-clm-enfr-1024.json",
                "BERTMULTI_A1_GPT_openai-gpt.json",
                "BERTMULTI_A2_XLM_xlm-mlm-enfr-1024.json",
                "BERT_A1_GPT2_gpt2-large.json",
                "BERTMULTI_A1_XLM_xlm-mlm-enfr-1024.json",
                "BERTMULTI_A2_GPT2_gpt2-medium.json",
                "BERT_A1_BERT_bert-large-cased.json",
                "BERTMULTI_A2_BERT_bert-base-multilingual-cased.json",
                "BERTMULTI_A1_BERT_bert-base-multilingual-cased.json",
                "BERT_A2_GPT2_gpt2-large.json",
                "BERT_A1_XLM_xlm-mlm-enfr-1024.json",
                "BERT_A2_BERT_bert-base-multilingual-cased.json",
                "BERT_A1_XLM_xlm-mlm-en-2048.json",
                "BERTMULTI_A1_XLM_xlm-clm-enfr-1024.json",
                "BERT_A1_GPT_openai-gpt.json",
                "BERTMULTI_A2_BERT_bert-large-cased.json",
                "BERTMULTI_A2_XLNET_xlnet-large-cased.json"
            ]
        },
        "44": {
            "ID": "quereo_124.103",
            "QUESTION": "Which countries adopted the Euro?",
            "SHORT_ANSWER": [
                "Macedonia",
                "Kosovo",
                "Twente",
                "Austria",
                "Belgium",
                "Cyprus",
                "Estonia",
                "Finland",
                "France",
                "Germany",
                "Greece",
                "Latvia",
                "Lithuania",
                "Luxembourg",
                "Mayotte",
                "Montenegro",
                "Netherlands",
                "Portugal",
                "San_Marino",
                "Slovenia",
                "Spain",
                "Overseas_departments_and_territories_of_France",
                "Republic_of_Ireland",
                "Vatican_City"
            ],
            "FULL_EXPERT_ANSWER": [
                "The list of countries that have adopted the Euro is as follows: Macedonia, Kosovo, Twente, Austria, Belgium, Cyprus, Estonia, Finland, France, Germany, Greece, Latvia, Lithuania, Luxembourg, Mayotte, Montenegro, Netherlands, Portugal, San Marino, Slovenia, Spain, Overseas departments and territories of France, Republic of Ireland, Vatican City",
                "Macedonia, Kosovo, Twente, Austria, Belgium, Cyprus, Estonia, Finland, France, Germany, Greece, Latvia, Lithuania, Luxembourg, Mayotte, Montenegro, Netherlands, Portugal, San Marino, Slovenia, Spain, Overseas departments and territories of France, Republic of Ireland and Vatican City adopted the Euro"
            ],
            "GENERATED_ANSWER": "Macedonia, kosovo, twente, austria, belgium, cyprus, estonia, finland, france, germany, greece, latvia, lithuania, luxembourg, mayotte, montenegro, netherlands, portugal, san marino, slovenia, spain, overseas departments and territories of france, republic of ireland and vatican city adopted the euro",
            "MISSING_WORD": ",",
            "Need_LM_Assessing": false,
            "CONFIGURATION_FILE": [
                "BERTMULTI_A1_XLNET_xlnet-large-cased.json",
                "BERT_A2_GPT2_gpt2-medium.json",
                "BERT_A2_XLM_xlm-mlm-en-2048.json",
                "BERT_A2_BERT_bert-base-cased.json",
                "BERT_A1_BERT_bert-base-cased.json",
                "BERTMULTI_A1_BERT_bert-large-cased.json",
                "BERTMULTI_A1_GPT2_gpt2.json",
                "BERTMULTI_A2_GPT_openai-gpt.json",
                "BERTMULTI_A1_BERT_bert-base-uncased.json",
                "BERT_A1_GPT2_gpt2-medium.json",
                "BERTMULTI_A2_GPT2_gpt2.json",
                "BERTMULTI_A1_GPT2_gpt2-large.json",
                "BERTMULTI_A2_BERT_bert-base-cased.json",
                "BERT_A1_BERT_bert-base-multilingual-cased.json",
                "BERTMULTI_A1_XLM_xlm-mlm-en-2048.json",
                "BERT_A2_BERT_bert-base-uncased.json",
                "BERT_A2_XLNET_xlnet-large-cased.json",
                "BERTMULTI_A2_XLM_xlm-mlm-en-2048.json",
                "BERT_A2_GPT2_gpt2.json",
                "BERT_A2_XLM_xlm-clm-enfr-1024.json",
                "BERT_A2_GPT_openai-gpt.json",
                "BERT_A1_GPT2_gpt2.json",
                "BERTMULTI_A1_BERT_bert-base-cased.json",
                "BERTMULTI_A2_BERT_bert-base-uncased.json",
                "BERTMULTI_A1_GPT2_gpt2-medium.json",
                "BERT_A1_BERT_bert-base-uncased.json",
                "BERT_A2_XLM_xlm-mlm-enfr-1024.json",
                "BERT_A2_BERT_bert-large-cased.json",
                "BERT_A1_XLNET_xlnet-large-cased.json",
                "BERTMULTI_A2_GPT2_gpt2-large.json",
                "BERTMULTI_A2_XLM_xlm-clm-enfr-1024.json",
                "BERT_A1_XLM_xlm-clm-enfr-1024.json",
                "BERTMULTI_A1_GPT_openai-gpt.json",
                "BERTMULTI_A2_XLM_xlm-mlm-enfr-1024.json",
                "BERT_A1_GPT2_gpt2-large.json",
                "BERTMULTI_A1_XLM_xlm-mlm-enfr-1024.json",
                "BERTMULTI_A2_GPT2_gpt2-medium.json",
                "BERT_A1_BERT_bert-large-cased.json",
                "BERTMULTI_A2_BERT_bert-base-multilingual-cased.json",
                "BERTMULTI_A1_BERT_bert-base-multilingual-cased.json",
                "BERT_A2_GPT2_gpt2-large.json",
                "BERT_A1_XLM_xlm-mlm-enfr-1024.json",
                "BERT_A2_BERT_bert-base-multilingual-cased.json",
                "BERT_A1_XLM_xlm-mlm-en-2048.json",
                "BERTMULTI_A1_XLM_xlm-clm-enfr-1024.json",
                "BERT_A1_GPT_openai-gpt.json",
                "BERTMULTI_A2_BERT_bert-large-cased.json",
                "BERTMULTI_A2_XLNET_xlnet-large-cased.json"
            ]
        },
        "45": {
            "ID": "quereo_125.104",
            "QUESTION": "What is the area code of Berlin?",
            "SHORT_ANSWER": [
                "30"
            ],
            "FULL_EXPERT_ANSWER": [
                "The area code of Berlin is 30",
                "30 is the area code of Berlin"
            ],
            "GENERATED_ANSWER": "The area code of berlin is 30",
            "MISSING_WORD": ":",
            "Need_LM_Assessing": true,
            "CONFIGURATION_FILE": [
                "BERTMULTI_A1_XLNET_xlnet-large-cased.json",
                "BERT_A2_GPT2_gpt2-medium.json",
                "BERT_A2_XLM_xlm-mlm-en-2048.json",
                "BERT_A2_BERT_bert-base-cased.json",
                "BERT_A1_BERT_bert-base-cased.json",
                "BERTMULTI_A1_BERT_bert-large-cased.json",
                "BERTMULTI_A1_GPT2_gpt2.json",
                "BERTMULTI_A2_GPT_openai-gpt.json",
                "BERTMULTI_A1_BERT_bert-base-uncased.json",
                "BERT_A1_GPT2_gpt2-medium.json",
                "BERTMULTI_A2_GPT2_gpt2.json",
                "BERTMULTI_A1_GPT2_gpt2-large.json",
                "BERTMULTI_A2_BERT_bert-base-cased.json",
                "BERT_A1_BERT_bert-base-multilingual-cased.json",
                "BERTMULTI_A1_XLM_xlm-mlm-en-2048.json",
                "BERT_A2_BERT_bert-base-uncased.json",
                "BERT_A2_XLNET_xlnet-large-cased.json",
                "BERTMULTI_A2_XLM_xlm-mlm-en-2048.json",
                "BERT_A2_GPT2_gpt2.json",
                "BERT_A2_XLM_xlm-clm-enfr-1024.json",
                "BERT_A2_GPT_openai-gpt.json",
                "BERT_A1_GPT2_gpt2.json",
                "BERTMULTI_A1_BERT_bert-base-cased.json",
                "BERTMULTI_A2_BERT_bert-base-uncased.json",
                "BERTMULTI_A1_GPT2_gpt2-medium.json",
                "BERT_A1_BERT_bert-base-uncased.json",
                "BERT_A2_XLM_xlm-mlm-enfr-1024.json",
                "BERT_A2_BERT_bert-large-cased.json",
                "BERT_A1_XLNET_xlnet-large-cased.json",
                "BERTMULTI_A2_GPT2_gpt2-large.json",
                "BERTMULTI_A2_XLM_xlm-clm-enfr-1024.json",
                "BERT_A1_XLM_xlm-clm-enfr-1024.json",
                "BERTMULTI_A1_GPT_openai-gpt.json",
                "BERTMULTI_A2_XLM_xlm-mlm-enfr-1024.json",
                "BERT_A1_GPT2_gpt2-large.json",
                "BERTMULTI_A1_XLM_xlm-mlm-enfr-1024.json",
                "BERTMULTI_A2_GPT2_gpt2-medium.json",
                "BERT_A1_BERT_bert-large-cased.json",
                "BERTMULTI_A2_BERT_bert-base-multilingual-cased.json",
                "BERTMULTI_A1_BERT_bert-base-multilingual-cased.json",
                "BERT_A2_GPT2_gpt2-large.json",
                "BERT_A1_XLM_xlm-mlm-enfr-1024.json",
                "BERT_A2_BERT_bert-base-multilingual-cased.json",
                "BERT_A1_XLM_xlm-mlm-en-2048.json",
                "BERTMULTI_A1_XLM_xlm-clm-enfr-1024.json",
                "BERT_A1_GPT_openai-gpt.json",
                "BERTMULTI_A2_BERT_bert-large-cased.json",
                "BERTMULTI_A2_XLNET_xlnet-large-cased.json"
            ]
        },
        "46": {
            "ID": "quereo_132.110",
            "QUESTION": "What is the highest mountain in Australia?",
            "SHORT_ANSWER": [
                "Mawson_Peak"
            ],
            "FULL_EXPERT_ANSWER": [
                "Australia’s highest summit is the Mawson Peak.",
                "Mawson Peak is the highest mountain in Australia",
                "the Mawson Peak is the highest mountain in Australia",
                "the highest mountain in Australia is Mawson Peak",
                "the highest mountain in Australia is the Mawson Peak"
            ],
            "GENERATED_ANSWER": "The highest mountain in australia is the mawson peak",
            "MISSING_WORD": "the",
            "Need_LM_Assessing": true,
            "CONFIGURATION_FILE": [
                "BERTMULTI_A1_XLNET_xlnet-large-cased.json",
                "BERT_A2_GPT2_gpt2-medium.json",
                "BERT_A2_XLM_xlm-mlm-en-2048.json",
                "BERT_A2_BERT_bert-base-cased.json",
                "BERT_A1_BERT_bert-base-cased.json",
                "BERTMULTI_A1_BERT_bert-large-cased.json",
                "BERTMULTI_A1_GPT2_gpt2.json",
                "BERTMULTI_A2_GPT_openai-gpt.json",
                "BERTMULTI_A1_BERT_bert-base-uncased.json",
                "BERT_A1_GPT2_gpt2-medium.json",
                "BERTMULTI_A2_GPT2_gpt2.json",
                "BERTMULTI_A1_GPT2_gpt2-large.json",
                "BERTMULTI_A2_BERT_bert-base-cased.json",
                "BERT_A1_BERT_bert-base-multilingual-cased.json",
                "BERTMULTI_A1_XLM_xlm-mlm-en-2048.json",
                "BERT_A2_BERT_bert-base-uncased.json",
                "BERT_A2_XLNET_xlnet-large-cased.json",
                "BERTMULTI_A2_XLM_xlm-mlm-en-2048.json",
                "BERT_A2_GPT2_gpt2.json",
                "BERT_A2_XLM_xlm-clm-enfr-1024.json",
                "BERT_A2_GPT_openai-gpt.json",
                "BERT_A1_GPT2_gpt2.json",
                "BERTMULTI_A1_BERT_bert-base-cased.json",
                "BERTMULTI_A2_BERT_bert-base-uncased.json",
                "BERTMULTI_A1_GPT2_gpt2-medium.json",
                "BERT_A1_BERT_bert-base-uncased.json",
                "BERT_A2_XLM_xlm-mlm-enfr-1024.json",
                "BERT_A2_BERT_bert-large-cased.json",
                "BERT_A1_XLNET_xlnet-large-cased.json",
                "BERTMULTI_A2_GPT2_gpt2-large.json",
                "BERTMULTI_A2_XLM_xlm-clm-enfr-1024.json",
                "BERT_A1_XLM_xlm-clm-enfr-1024.json",
                "BERTMULTI_A1_GPT_openai-gpt.json",
                "BERTMULTI_A2_XLM_xlm-mlm-enfr-1024.json",
                "BERT_A1_GPT2_gpt2-large.json",
                "BERTMULTI_A1_XLM_xlm-mlm-enfr-1024.json",
                "BERTMULTI_A2_GPT2_gpt2-medium.json",
                "BERT_A1_BERT_bert-large-cased.json",
                "BERTMULTI_A2_BERT_bert-base-multilingual-cased.json",
                "BERTMULTI_A1_BERT_bert-base-multilingual-cased.json",
                "BERT_A2_GPT2_gpt2-large.json",
                "BERT_A1_XLM_xlm-mlm-enfr-1024.json",
                "BERT_A2_BERT_bert-base-multilingual-cased.json",
                "BERT_A1_XLM_xlm-mlm-en-2048.json",
                "BERTMULTI_A1_XLM_xlm-clm-enfr-1024.json",
                "BERT_A1_GPT_openai-gpt.json",
                "BERTMULTI_A2_BERT_bert-large-cased.json",
                "BERTMULTI_A2_XLNET_xlnet-large-cased.json"
            ]
        },
        "47": {
            "ID": "quereo_141.117",
            "QUESTION": "What is the official website of Tom Cruise?",
            "SHORT_ANSWER": [
                "http://www.tomcruise.com/"
            ],
            "FULL_EXPERT_ANSWER": [
                "The official website of Tom Cruise is : http://www.tomcruise.com/"
            ],
            "GENERATED_ANSWER": "The official website of tom cruise is http://www.tomcruise.com/",
            "MISSING_WORD": ":",
            "Need_LM_Assessing": true,
            "CONFIGURATION_FILE": [
                "BERTMULTI_A1_XLNET_xlnet-large-cased.json",
                "BERTMULTI_A1_BERT_bert-large-cased.json",
                "BERTMULTI_A1_GPT2_gpt2.json",
                "BERTMULTI_A2_GPT_openai-gpt.json",
                "BERTMULTI_A1_BERT_bert-base-uncased.json",
                "BERTMULTI_A2_GPT2_gpt2.json",
                "BERTMULTI_A1_GPT2_gpt2-large.json",
                "BERTMULTI_A2_BERT_bert-base-cased.json",
                "BERTMULTI_A1_XLM_xlm-mlm-en-2048.json",
                "BERTMULTI_A2_XLM_xlm-mlm-en-2048.json",
                "BERTMULTI_A1_BERT_bert-base-cased.json",
                "BERTMULTI_A2_BERT_bert-base-uncased.json",
                "BERTMULTI_A1_GPT2_gpt2-medium.json",
                "BERTMULTI_A2_GPT2_gpt2-large.json",
                "BERTMULTI_A2_XLM_xlm-clm-enfr-1024.json",
                "BERTMULTI_A1_GPT_openai-gpt.json",
                "BERTMULTI_A2_XLM_xlm-mlm-enfr-1024.json",
                "BERTMULTI_A1_XLM_xlm-mlm-enfr-1024.json",
                "BERTMULTI_A2_GPT2_gpt2-medium.json",
                "BERTMULTI_A2_BERT_bert-base-multilingual-cased.json",
                "BERTMULTI_A1_BERT_bert-base-multilingual-cased.json",
                "BERTMULTI_A1_XLM_xlm-clm-enfr-1024.json",
                "BERTMULTI_A2_BERT_bert-large-cased.json",
                "BERTMULTI_A2_XLNET_xlnet-large-cased.json"
            ]
        },
        "48": {
            "ID": "quereo_143.118",
            "QUESTION": "Is there a video game called Battle Chess?",
            "SHORT_ANSWER": [
                "Yes"
            ],
            "FULL_EXPERT_ANSWER": [
                "Yes, there is a video game called Battle Chess."
            ],
            "GENERATED_ANSWER": "Yes, there is a video game called battle chess",
            "MISSING_WORD": "None",
            "Need_LM_Assessing": false,
            "CONFIGURATION_FILE": [
                "BERTMULTI_A1_XLNET_xlnet-large-cased.json",
                "BERT_A2_GPT2_gpt2-medium.json",
                "BERT_A2_XLM_xlm-mlm-en-2048.json",
                "BERT_A2_BERT_bert-base-cased.json",
                "BERT_A1_BERT_bert-base-cased.json",
                "BERTMULTI_A1_BERT_bert-large-cased.json",
                "BERTMULTI_A1_GPT2_gpt2.json",
                "BERTMULTI_A2_GPT_openai-gpt.json",
                "BERTMULTI_A1_BERT_bert-base-uncased.json",
                "BERT_A1_GPT2_gpt2-medium.json",
                "BERTMULTI_A2_GPT2_gpt2.json",
                "BERTMULTI_A1_GPT2_gpt2-large.json",
                "BERTMULTI_A2_BERT_bert-base-cased.json",
                "BERT_A1_BERT_bert-base-multilingual-cased.json",
                "BERTMULTI_A1_XLM_xlm-mlm-en-2048.json",
                "BERT_A2_BERT_bert-base-uncased.json",
                "BERT_A2_XLNET_xlnet-large-cased.json",
                "BERTMULTI_A2_XLM_xlm-mlm-en-2048.json",
                "BERT_A2_GPT2_gpt2.json",
                "BERT_A2_XLM_xlm-clm-enfr-1024.json",
                "BERT_A2_GPT_openai-gpt.json",
                "BERT_A1_GPT2_gpt2.json",
                "BERTMULTI_A1_BERT_bert-base-cased.json",
                "BERTMULTI_A2_BERT_bert-base-uncased.json",
                "BERTMULTI_A1_GPT2_gpt2-medium.json",
                "BERT_A1_BERT_bert-base-uncased.json",
                "BERT_A2_XLM_xlm-mlm-enfr-1024.json",
                "BERT_A2_BERT_bert-large-cased.json",
                "BERT_A1_XLNET_xlnet-large-cased.json",
                "BERTMULTI_A2_GPT2_gpt2-large.json",
                "BERTMULTI_A2_XLM_xlm-clm-enfr-1024.json",
                "BERT_A1_XLM_xlm-clm-enfr-1024.json",
                "BERTMULTI_A1_GPT_openai-gpt.json",
                "BERTMULTI_A2_XLM_xlm-mlm-enfr-1024.json",
                "BERT_A1_GPT2_gpt2-large.json",
                "BERTMULTI_A1_XLM_xlm-mlm-enfr-1024.json",
                "BERTMULTI_A2_GPT2_gpt2-medium.json",
                "BERT_A1_BERT_bert-large-cased.json",
                "BERTMULTI_A2_BERT_bert-base-multilingual-cased.json",
                "BERTMULTI_A1_BERT_bert-base-multilingual-cased.json",
                "BERT_A2_GPT2_gpt2-large.json",
                "BERT_A1_XLM_xlm-mlm-enfr-1024.json",
                "BERT_A2_BERT_bert-base-multilingual-cased.json",
                "BERT_A1_XLM_xlm-mlm-en-2048.json",
                "BERTMULTI_A1_XLM_xlm-clm-enfr-1024.json",
                "BERT_A1_GPT_openai-gpt.json",
                "BERTMULTI_A2_BERT_bert-large-cased.json",
                "BERTMULTI_A2_XLNET_xlnet-large-cased.json"
            ]
        },
        "49": {
            "ID": "quereo_145.119",
            "QUESTION": "Which actors were born in Germany?",
            "SHORT_ANSWER": [
                "Annette_Schwarz",
                "Logan_McCree",
                "Julie_K._Smith",
                "Gordon_Hopkirk",
                "Jack_Trevor",
                "Norman_Wooland",
                "Shimon_Schwarzschild",
                "Tyra_Misoux",
                "Karin_Schubert",
                "Vince_Rockland",
                "Susan_Wayland"
            ],
            "FULL_EXPERT_ANSWER": [
                "The list of the actors born in Germany is as follows: Annette Schwarz, Logan McCree, Julie K. Smith, Gordon Hopkirk, Jack Trevor, Norman Wooland, Shimon Schwarzschild, Tyra Misoux, Karin Schubert, Vince Rockland, Susan Wayland",
                "Annette Schwarz, Logan McCree, Julie K. Smith, Gordon Hopkirk, Jack Trevor, Norman Wooland, Shimon Schwarzschild, Tyra Misoux, Karin Schubert, Vince Rockland and Susan Wayland were born in Germany"
            ],
            "GENERATED_ANSWER": "Annette schwarz, logan mccree, julie k. smith, gordon hopkirk, jack trevor, norman wooland, shimon schwarzschild, tyra misoux, karin schubert, vince rockland and susan wayland were born in germany",
            "MISSING_WORD": ",",
            "Need_LM_Assessing": false,
            "CONFIGURATION_FILE": [
                "BERTMULTI_A1_XLNET_xlnet-large-cased.json",
                "BERT_A2_GPT2_gpt2-medium.json",
                "BERT_A2_XLM_xlm-mlm-en-2048.json",
                "BERT_A2_BERT_bert-base-cased.json",
                "BERT_A1_BERT_bert-base-cased.json",
                "BERTMULTI_A1_BERT_bert-large-cased.json",
                "BERTMULTI_A1_GPT2_gpt2.json",
                "BERTMULTI_A2_GPT_openai-gpt.json",
                "BERTMULTI_A1_BERT_bert-base-uncased.json",
                "BERT_A1_GPT2_gpt2-medium.json",
                "BERTMULTI_A2_GPT2_gpt2.json",
                "BERTMULTI_A1_GPT2_gpt2-large.json",
                "BERTMULTI_A2_BERT_bert-base-cased.json",
                "BERT_A1_BERT_bert-base-multilingual-cased.json",
                "BERTMULTI_A1_XLM_xlm-mlm-en-2048.json",
                "BERT_A2_BERT_bert-base-uncased.json",
                "BERT_A2_XLNET_xlnet-large-cased.json",
                "BERTMULTI_A2_XLM_xlm-mlm-en-2048.json",
                "BERT_A2_GPT2_gpt2.json",
                "BERT_A2_XLM_xlm-clm-enfr-1024.json",
                "BERT_A2_GPT_openai-gpt.json",
                "BERT_A1_GPT2_gpt2.json",
                "BERTMULTI_A1_BERT_bert-base-cased.json",
                "BERTMULTI_A2_BERT_bert-base-uncased.json",
                "BERTMULTI_A1_GPT2_gpt2-medium.json",
                "BERT_A1_BERT_bert-base-uncased.json",
                "BERT_A2_XLM_xlm-mlm-enfr-1024.json",
                "BERT_A2_BERT_bert-large-cased.json",
                "BERT_A1_XLNET_xlnet-large-cased.json",
                "BERTMULTI_A2_GPT2_gpt2-large.json",
                "BERTMULTI_A2_XLM_xlm-clm-enfr-1024.json",
                "BERT_A1_XLM_xlm-clm-enfr-1024.json",
                "BERTMULTI_A1_GPT_openai-gpt.json",
                "BERTMULTI_A2_XLM_xlm-mlm-enfr-1024.json",
                "BERT_A1_GPT2_gpt2-large.json",
                "BERTMULTI_A1_XLM_xlm-mlm-enfr-1024.json",
                "BERTMULTI_A2_GPT2_gpt2-medium.json",
                "BERT_A1_BERT_bert-large-cased.json",
                "BERTMULTI_A2_BERT_bert-base-multilingual-cased.json",
                "BERTMULTI_A1_BERT_bert-base-multilingual-cased.json",
                "BERT_A2_GPT2_gpt2-large.json",
                "BERT_A1_XLM_xlm-mlm-enfr-1024.json",
                "BERT_A2_BERT_bert-base-multilingual-cased.json",
                "BERT_A1_XLM_xlm-mlm-en-2048.json",
                "BERTMULTI_A1_XLM_xlm-clm-enfr-1024.json",
                "BERT_A1_GPT_openai-gpt.json",
                "BERTMULTI_A2_BERT_bert-large-cased.json",
                "BERTMULTI_A2_XLNET_xlnet-large-cased.json"
            ]
        },
        "50": {
            "ID": "quereo_148.121",
            "QUESTION": "When did the Ming dynasty dissolve?",
            "SHORT_ANSWER": [
                "April 25, 1644"
            ],
            "FULL_EXPERT_ANSWER": [
                "The Ming Dynasty has stopped 25 April 1644",
                "the Ming dynasty dissolved on April 25, 1644"
            ],
            "GENERATED_ANSWER": "The ming dynasty dissolved on april 25, 1644",
            "MISSING_WORD": "on",
            "Need_LM_Assessing": true,
            "CONFIGURATION_FILE": [
                "BERTMULTI_A1_XLNET_xlnet-large-cased.json",
                "BERT_A2_GPT2_gpt2-medium.json",
                "BERT_A2_XLM_xlm-mlm-en-2048.json",
                "BERT_A2_BERT_bert-base-cased.json",
                "BERT_A1_BERT_bert-base-cased.json",
                "BERTMULTI_A1_BERT_bert-large-cased.json",
                "BERTMULTI_A1_GPT2_gpt2.json",
                "BERTMULTI_A2_GPT_openai-gpt.json",
                "BERTMULTI_A1_BERT_bert-base-uncased.json",
                "BERT_A1_GPT2_gpt2-medium.json",
                "BERTMULTI_A2_GPT2_gpt2.json",
                "BERTMULTI_A1_GPT2_gpt2-large.json",
                "BERTMULTI_A2_BERT_bert-base-cased.json",
                "BERT_A1_BERT_bert-base-multilingual-cased.json",
                "BERTMULTI_A1_XLM_xlm-mlm-en-2048.json",
                "BERT_A2_BERT_bert-base-uncased.json",
                "BERT_A2_XLNET_xlnet-large-cased.json",
                "BERTMULTI_A2_XLM_xlm-mlm-en-2048.json",
                "BERT_A2_GPT2_gpt2.json",
                "BERT_A2_XLM_xlm-clm-enfr-1024.json",
                "BERT_A2_GPT_openai-gpt.json",
                "BERT_A1_GPT2_gpt2.json",
                "BERTMULTI_A1_BERT_bert-base-cased.json",
                "BERTMULTI_A2_BERT_bert-base-uncased.json",
                "BERTMULTI_A1_GPT2_gpt2-medium.json",
                "BERT_A1_BERT_bert-base-uncased.json",
                "BERT_A2_XLM_xlm-mlm-enfr-1024.json",
                "BERT_A2_BERT_bert-large-cased.json",
                "BERT_A1_XLNET_xlnet-large-cased.json",
                "BERTMULTI_A2_GPT2_gpt2-large.json",
                "BERTMULTI_A2_XLM_xlm-clm-enfr-1024.json",
                "BERT_A1_XLM_xlm-clm-enfr-1024.json",
                "BERTMULTI_A1_GPT_openai-gpt.json",
                "BERTMULTI_A2_XLM_xlm-mlm-enfr-1024.json",
                "BERT_A1_GPT2_gpt2-large.json",
                "BERTMULTI_A1_XLM_xlm-mlm-enfr-1024.json",
                "BERTMULTI_A2_GPT2_gpt2-medium.json",
                "BERT_A1_BERT_bert-large-cased.json",
                "BERTMULTI_A2_BERT_bert-base-multilingual-cased.json",
                "BERTMULTI_A1_BERT_bert-base-multilingual-cased.json",
                "BERT_A2_GPT2_gpt2-large.json",
                "BERT_A1_XLM_xlm-mlm-enfr-1024.json",
                "BERT_A2_BERT_bert-base-multilingual-cased.json",
                "BERT_A1_XLM_xlm-mlm-en-2048.json",
                "BERTMULTI_A1_XLM_xlm-clm-enfr-1024.json",
                "BERT_A1_GPT_openai-gpt.json",
                "BERTMULTI_A2_BERT_bert-large-cased.json",
                "BERTMULTI_A2_XLNET_xlnet-large-cased.json"
            ]
        },
        "51": {
            "ID": "quereo_149.122",
            "QUESTION": "Is Lake Baikal bigger than the Great Bear Lake?",
            "SHORT_ANSWER": [
                "No"
            ],
            "FULL_EXPERT_ANSWER": [
                "No, Lake Baikal is no bigger than Great Bear Lake",
                "No, Lake Baikal is not bigger than the Great Bear Lake"
            ],
            "GENERATED_ANSWER": "No, lake baikal is not bigger than the great bear lake",
            "MISSING_WORD": "None",
            "Need_LM_Assessing": false,
            "CONFIGURATION_FILE": [
                "BERTMULTI_A1_XLNET_xlnet-large-cased.json",
                "BERT_A2_GPT2_gpt2-medium.json",
                "BERT_A2_XLM_xlm-mlm-en-2048.json",
                "BERT_A2_BERT_bert-base-cased.json",
                "BERT_A1_BERT_bert-base-cased.json",
                "BERTMULTI_A1_BERT_bert-large-cased.json",
                "BERTMULTI_A1_GPT2_gpt2.json",
                "BERTMULTI_A2_GPT_openai-gpt.json",
                "BERTMULTI_A1_BERT_bert-base-uncased.json",
                "BERT_A1_GPT2_gpt2-medium.json",
                "BERTMULTI_A2_GPT2_gpt2.json",
                "BERTMULTI_A1_GPT2_gpt2-large.json",
                "BERTMULTI_A2_BERT_bert-base-cased.json",
                "BERT_A1_BERT_bert-base-multilingual-cased.json",
                "BERTMULTI_A1_XLM_xlm-mlm-en-2048.json",
                "BERT_A2_BERT_bert-base-uncased.json",
                "BERT_A2_XLNET_xlnet-large-cased.json",
                "BERTMULTI_A2_XLM_xlm-mlm-en-2048.json",
                "BERT_A2_GPT2_gpt2.json",
                "BERT_A2_XLM_xlm-clm-enfr-1024.json",
                "BERT_A2_GPT_openai-gpt.json",
                "BERT_A1_GPT2_gpt2.json",
                "BERTMULTI_A1_BERT_bert-base-cased.json",
                "BERTMULTI_A2_BERT_bert-base-uncased.json",
                "BERTMULTI_A1_GPT2_gpt2-medium.json",
                "BERT_A1_BERT_bert-base-uncased.json",
                "BERT_A2_XLM_xlm-mlm-enfr-1024.json",
                "BERT_A2_BERT_bert-large-cased.json",
                "BERT_A1_XLNET_xlnet-large-cased.json",
                "BERTMULTI_A2_GPT2_gpt2-large.json",
                "BERTMULTI_A2_XLM_xlm-clm-enfr-1024.json",
                "BERT_A1_XLM_xlm-clm-enfr-1024.json",
                "BERTMULTI_A1_GPT_openai-gpt.json",
                "BERTMULTI_A2_XLM_xlm-mlm-enfr-1024.json",
                "BERT_A1_GPT2_gpt2-large.json",
                "BERTMULTI_A1_XLM_xlm-mlm-enfr-1024.json",
                "BERTMULTI_A2_GPT2_gpt2-medium.json",
                "BERT_A1_BERT_bert-large-cased.json",
                "BERTMULTI_A2_BERT_bert-base-multilingual-cased.json",
                "BERTMULTI_A1_BERT_bert-base-multilingual-cased.json",
                "BERT_A2_GPT2_gpt2-large.json",
                "BERT_A1_XLM_xlm-mlm-enfr-1024.json",
                "BERT_A2_BERT_bert-base-multilingual-cased.json",
                "BERT_A1_XLM_xlm-mlm-en-2048.json",
                "BERTMULTI_A1_XLM_xlm-clm-enfr-1024.json",
                "BERT_A1_GPT_openai-gpt.json",
                "BERTMULTI_A2_BERT_bert-large-cased.json",
                "BERTMULTI_A2_XLNET_xlnet-large-cased.json"
            ]
        },
        "52": {
            "ID": "quereo_150.123",
            "QUESTION": "Was the Cuban Missile Crisis earlier than the Bay of Pigs Invasion?",
            "SHORT_ANSWER": [
                "No"
            ],
            "FULL_EXPERT_ANSWER": [
                "No, The Cuban missile crisis took place after the invasion of the Bay of Pigs.",
                "No, the Cuban Missile Crisis was not earlier than the Bay of Pigs Invasion"
            ],
            "GENERATED_ANSWER": "No, the cuban missile crisis was not earlier than the bay of pigs invasion",
            "MISSING_WORD": "None",
            "Need_LM_Assessing": false,
            "CONFIGURATION_FILE": [
                "BERTMULTI_A1_XLNET_xlnet-large-cased.json",
                "BERT_A2_GPT2_gpt2-medium.json",
                "BERT_A2_XLM_xlm-mlm-en-2048.json",
                "BERT_A2_BERT_bert-base-cased.json",
                "BERT_A1_BERT_bert-base-cased.json",
                "BERTMULTI_A1_BERT_bert-large-cased.json",
                "BERTMULTI_A1_GPT2_gpt2.json",
                "BERTMULTI_A2_GPT_openai-gpt.json",
                "BERTMULTI_A1_BERT_bert-base-uncased.json",
                "BERT_A1_GPT2_gpt2-medium.json",
                "BERTMULTI_A2_GPT2_gpt2.json",
                "BERTMULTI_A1_GPT2_gpt2-large.json",
                "BERTMULTI_A2_BERT_bert-base-cased.json",
                "BERT_A1_BERT_bert-base-multilingual-cased.json",
                "BERTMULTI_A1_XLM_xlm-mlm-en-2048.json",
                "BERT_A2_BERT_bert-base-uncased.json",
                "BERT_A2_XLNET_xlnet-large-cased.json",
                "BERTMULTI_A2_XLM_xlm-mlm-en-2048.json",
                "BERT_A2_GPT2_gpt2.json",
                "BERT_A2_XLM_xlm-clm-enfr-1024.json",
                "BERT_A2_GPT_openai-gpt.json",
                "BERT_A1_GPT2_gpt2.json",
                "BERTMULTI_A1_BERT_bert-base-cased.json",
                "BERTMULTI_A2_BERT_bert-base-uncased.json",
                "BERTMULTI_A1_GPT2_gpt2-medium.json",
                "BERT_A1_BERT_bert-base-uncased.json",
                "BERT_A2_XLM_xlm-mlm-enfr-1024.json",
                "BERT_A2_BERT_bert-large-cased.json",
                "BERT_A1_XLNET_xlnet-large-cased.json",
                "BERTMULTI_A2_GPT2_gpt2-large.json",
                "BERTMULTI_A2_XLM_xlm-clm-enfr-1024.json",
                "BERT_A1_XLM_xlm-clm-enfr-1024.json",
                "BERTMULTI_A1_GPT_openai-gpt.json",
                "BERTMULTI_A2_XLM_xlm-mlm-enfr-1024.json",
                "BERT_A1_GPT2_gpt2-large.json",
                "BERTMULTI_A1_XLM_xlm-mlm-enfr-1024.json",
                "BERTMULTI_A2_GPT2_gpt2-medium.json",
                "BERT_A1_BERT_bert-large-cased.json",
                "BERTMULTI_A2_BERT_bert-base-multilingual-cased.json",
                "BERTMULTI_A1_BERT_bert-base-multilingual-cased.json",
                "BERT_A2_GPT2_gpt2-large.json",
                "BERT_A1_XLM_xlm-mlm-enfr-1024.json",
                "BERT_A2_BERT_bert-base-multilingual-cased.json",
                "BERT_A1_XLM_xlm-mlm-en-2048.json",
                "BERTMULTI_A1_XLM_xlm-clm-enfr-1024.json",
                "BERT_A1_GPT_openai-gpt.json",
                "BERTMULTI_A2_BERT_bert-large-cased.json",
                "BERTMULTI_A2_XLNET_xlnet-large-cased.json"
            ]
        },
        "53": {
            "ID": "quereo_3.2",
            "QUESTION": "Who wrote the song Hotel California?",
            "SHORT_ANSWER": [
                "Don_Felder"
            ],
            "FULL_EXPERT_ANSWER": [
                "Don Felder composed the song Hotel California.",
                "Don Felder wrote the song Hotel California."
            ],
            "GENERATED_ANSWER": "Don felder wrote the song hotel california",
            "MISSING_WORD": ".",
            "Need_LM_Assessing": false,
            "CONFIGURATION_FILE": [
                "BERT_A2_GPT2_gpt2-medium.json",
                "BERT_A2_XLM_xlm-mlm-en-2048.json",
                "BERT_A2_BERT_bert-base-cased.json",
                "BERT_A1_BERT_bert-base-cased.json",
                "BERT_A1_GPT2_gpt2-medium.json",
                "BERT_A1_BERT_bert-base-multilingual-cased.json",
                "BERT_A2_BERT_bert-base-uncased.json",
                "BERT_A2_XLNET_xlnet-large-cased.json",
                "BERT_A2_GPT2_gpt2.json",
                "BERT_A2_XLM_xlm-clm-enfr-1024.json",
                "BERT_A2_GPT_openai-gpt.json",
                "BERT_A1_GPT2_gpt2.json",
                "BERT_A1_BERT_bert-base-uncased.json",
                "BERT_A2_XLM_xlm-mlm-enfr-1024.json",
                "BERT_A2_BERT_bert-large-cased.json",
                "BERT_A1_XLNET_xlnet-large-cased.json",
                "BERT_A1_XLM_xlm-clm-enfr-1024.json",
                "BERT_A1_GPT2_gpt2-large.json",
                "BERT_A1_BERT_bert-large-cased.json",
                "BERT_A2_GPT2_gpt2-large.json",
                "BERT_A1_XLM_xlm-mlm-enfr-1024.json",
                "BERT_A2_BERT_bert-base-multilingual-cased.json",
                "BERT_A1_XLM_xlm-mlm-en-2048.json",
                "BERT_A1_GPT_openai-gpt.json"
            ]
        },
        "54": {
            "ID": "quereo_14.13",
            "QUESTION": "When did the Boston Tea Party take place?",
            "SHORT_ANSWER": [
                "December 16, 1773"
            ],
            "FULL_EXPERT_ANSWER": [
                "The Boston Tea Party took place on December 16, 1773."
            ],
            "GENERATED_ANSWER": "The boston tea party took place on december 16, 1773",
            "MISSING_WORD": "on",
            "Need_LM_Assessing": true,
            "CONFIGURATION_FILE": [
                "BERT_A2_GPT2_gpt2-medium.json",
                "BERT_A2_XLM_xlm-mlm-en-2048.json",
                "BERTMULTI_A1_BERT_bert-large-cased.json",
                "BERTMULTI_A2_GPT_openai-gpt.json",
                "BERTMULTI_A1_BERT_bert-base-uncased.json",
                "BERTMULTI_A2_GPT2_gpt2.json",
                "BERT_A2_GPT2_gpt2.json",
                "BERT_A2_XLM_xlm-clm-enfr-1024.json",
                "BERT_A2_GPT_openai-gpt.json",
                "BERTMULTI_A2_BERT_bert-base-uncased.json",
                "BERTMULTI_A2_GPT2_gpt2-large.json",
                "BERTMULTI_A2_XLM_xlm-clm-enfr-1024.json",
                "BERT_A1_XLM_xlm-clm-enfr-1024.json",
                "BERTMULTI_A1_XLM_xlm-mlm-enfr-1024.json",
                "BERTMULTI_A2_GPT2_gpt2-medium.json",
                "BERT_A2_GPT2_gpt2-large.json",
                "BERT_A1_XLM_xlm-mlm-enfr-1024.json",
                "BERTMULTI_A1_XLM_xlm-clm-enfr-1024.json"
            ]
        },
        "55": {
            "ID": "quereo_19.18",
            "QUESTION": "Which states border Illinois?",
            "SHORT_ANSWER": [
                "Indiana",
                "Iowa",
                "Kentucky",
                "Missouri",
                "Wisconsin"
            ],
            "FULL_EXPERT_ANSWER": [
                "Michigan, Indiana, Wisconsin, Iowa, Kentucky, Missouri are the neighboring states of Illinois.",
                "Indiana, Iowa, Kentucky, Missouri and Wisconsin border Illinois"
            ],
            "GENERATED_ANSWER": "Indiana, iowa, kentucky, missouri and wisconsin border illinois",
            "MISSING_WORD": ".",
            "Need_LM_Assessing": false,
            "CONFIGURATION_FILE": [
                "BERT_A2_GPT2_gpt2-medium.json",
                "BERT_A2_XLM_xlm-mlm-en-2048.json",
                "BERT_A2_BERT_bert-base-cased.json",
                "BERT_A1_BERT_bert-base-cased.json",
                "BERT_A1_GPT2_gpt2-medium.json",
                "BERT_A1_BERT_bert-base-multilingual-cased.json",
                "BERT_A2_BERT_bert-base-uncased.json",
                "BERT_A2_XLNET_xlnet-large-cased.json",
                "BERT_A2_GPT2_gpt2.json",
                "BERT_A2_XLM_xlm-clm-enfr-1024.json",
                "BERT_A2_GPT_openai-gpt.json",
                "BERT_A1_GPT2_gpt2.json",
                "BERT_A1_BERT_bert-base-uncased.json",
                "BERT_A2_XLM_xlm-mlm-enfr-1024.json",
                "BERT_A2_BERT_bert-large-cased.json",
                "BERT_A1_XLNET_xlnet-large-cased.json",
                "BERT_A1_XLM_xlm-clm-enfr-1024.json",
                "BERT_A1_GPT2_gpt2-large.json",
                "BERT_A1_BERT_bert-large-cased.json",
                "BERT_A2_GPT2_gpt2-large.json",
                "BERT_A1_XLM_xlm-mlm-enfr-1024.json",
                "BERT_A2_BERT_bert-base-multilingual-cased.json",
                "BERT_A1_XLM_xlm-mlm-en-2048.json",
                "BERT_A1_GPT_openai-gpt.json"
            ]
        },
        "56": {
            "ID": "quereo_23.22",
            "QUESTION": "Who created Family Guy?",
            "SHORT_ANSWER": [
                "Seth_MacFarlane"
            ],
            "FULL_EXPERT_ANSWER": [
                "Seth MacFarlane created Family Guy."
            ],
            "GENERATED_ANSWER": "Seth macfarlane created family guy",
            "MISSING_WORD": ".",
            "Need_LM_Assessing": false,
            "CONFIGURATION_FILE": [
                "BERT_A2_GPT2_gpt2-medium.json",
                "BERT_A2_XLM_xlm-mlm-en-2048.json",
                "BERT_A2_BERT_bert-base-cased.json",
                "BERT_A1_BERT_bert-base-cased.json",
                "BERT_A1_GPT2_gpt2-medium.json",
                "BERT_A1_BERT_bert-base-multilingual-cased.json",
                "BERT_A2_BERT_bert-base-uncased.json",
                "BERT_A2_XLNET_xlnet-large-cased.json",
                "BERT_A2_GPT2_gpt2.json",
                "BERT_A2_XLM_xlm-clm-enfr-1024.json",
                "BERT_A2_GPT_openai-gpt.json",
                "BERT_A1_GPT2_gpt2.json",
                "BERT_A1_BERT_bert-base-uncased.json",
                "BERT_A2_XLM_xlm-mlm-enfr-1024.json",
                "BERT_A2_BERT_bert-large-cased.json",
                "BERT_A1_XLNET_xlnet-large-cased.json",
                "BERT_A1_XLM_xlm-clm-enfr-1024.json",
                "BERT_A1_GPT2_gpt2-large.json",
                "BERT_A1_BERT_bert-large-cased.json",
                "BERT_A2_GPT2_gpt2-large.json",
                "BERT_A1_XLM_xlm-mlm-enfr-1024.json",
                "BERT_A2_BERT_bert-base-multilingual-cased.json",
                "BERT_A1_XLM_xlm-mlm-en-2048.json",
                "BERT_A1_GPT_openai-gpt.json"
            ]
        },
        "57": {
            "ID": "quereo_32.30",
            "QUESTION": "Who developed Slack?",
            "SHORT_ANSWER": [
                "Slack_Technologies"
            ],
            "FULL_EXPERT_ANSWER": [
                "Slack Technologies, Inc. developed slack",
                "Slack Technologies developed Slack"
            ],
            "GENERATED_ANSWER": "Slack technologies developed slack",
            "MISSING_WORD": ")",
            "Need_LM_Assessing": false,
            "CONFIGURATION_FILE": [
                "BERT_A2_GPT2_gpt2-medium.json",
                "BERT_A2_XLM_xlm-mlm-en-2048.json",
                "BERT_A2_BERT_bert-base-cased.json",
                "BERT_A1_BERT_bert-base-cased.json",
                "BERT_A1_GPT2_gpt2-medium.json",
                "BERT_A1_BERT_bert-base-multilingual-cased.json",
                "BERT_A2_BERT_bert-base-uncased.json",
                "BERT_A2_XLNET_xlnet-large-cased.json",
                "BERT_A2_GPT2_gpt2.json",
                "BERT_A2_XLM_xlm-clm-enfr-1024.json",
                "BERT_A2_GPT_openai-gpt.json",
                "BERT_A1_GPT2_gpt2.json",
                "BERT_A1_BERT_bert-base-uncased.json",
                "BERT_A2_XLM_xlm-mlm-enfr-1024.json",
                "BERT_A2_BERT_bert-large-cased.json",
                "BERT_A1_XLNET_xlnet-large-cased.json",
                "BERT_A1_XLM_xlm-clm-enfr-1024.json",
                "BERT_A1_GPT2_gpt2-large.json",
                "BERT_A1_BERT_bert-large-cased.json",
                "BERT_A2_GPT2_gpt2-large.json",
                "BERT_A1_XLM_xlm-mlm-enfr-1024.json",
                "BERT_A2_BERT_bert-base-multilingual-cased.json",
                "BERT_A1_XLM_xlm-mlm-en-2048.json",
                "BERT_A1_GPT_openai-gpt.json"
            ]
        },
        "58": {
            "ID": "quereo_35.33",
            "QUESTION": "Which films did Stanley Kubrick direct?",
            "SHORT_ANSWER": [
                "Day_of_the_Fight",
                "Barry_Lyndon",
                "A_Clockwork_Orange",
                "2001:_A_Space_Odyssey"
            ],
            "FULL_EXPERT_ANSWER": [
                "Stanley Kubrick directed the following films: 2001, Space Odyssey, Doctor Strangelove, Spartacus, A Clockwork Orange, Shining, Eyes Wide Shut, Full Metal Jacket, Day of the Fight",
                "Stanley Kubrick directed Day of the Fight, Barry Lyndon, A Clockwork Orange and 2001: A Space Odyssey"
            ],
            "GENERATED_ANSWER": "Stanley kubrick directed day of the fight, barry lyndon, a clockwork orange and 2001: a space odyssey",
            "MISSING_WORD": ",",
            "Need_LM_Assessing": true,
            "CONFIGURATION_FILE": [
                "BERT_A2_GPT2_gpt2-medium.json",
                "BERT_A2_XLM_xlm-mlm-en-2048.json",
                "BERT_A2_BERT_bert-base-cased.json",
                "BERT_A1_BERT_bert-base-cased.json",
                "BERT_A1_GPT2_gpt2-medium.json",
                "BERT_A1_BERT_bert-base-multilingual-cased.json",
                "BERT_A2_BERT_bert-base-uncased.json",
                "BERT_A2_XLNET_xlnet-large-cased.json",
                "BERT_A2_GPT2_gpt2.json",
                "BERT_A2_XLM_xlm-clm-enfr-1024.json",
                "BERT_A2_GPT_openai-gpt.json",
                "BERT_A1_GPT2_gpt2.json",
                "BERT_A1_BERT_bert-base-uncased.json",
                "BERT_A2_XLM_xlm-mlm-enfr-1024.json",
                "BERT_A2_BERT_bert-large-cased.json",
                "BERT_A1_XLNET_xlnet-large-cased.json",
                "BERT_A1_XLM_xlm-clm-enfr-1024.json",
                "BERT_A1_GPT2_gpt2-large.json",
                "BERT_A1_BERT_bert-large-cased.json",
                "BERT_A2_GPT2_gpt2-large.json",
                "BERT_A1_XLM_xlm-mlm-enfr-1024.json",
                "BERT_A2_BERT_bert-base-multilingual-cased.json",
                "BERT_A1_XLM_xlm-mlm-en-2048.json",
                "BERT_A1_GPT_openai-gpt.json"
            ]
        },
        "59": {
            "ID": "quereo_43.39",
            "QUESTION": "Who is the mayor of Paris?",
            "SHORT_ANSWER": [
                "Anne_Hidalgo"
            ],
            "FULL_EXPERT_ANSWER": [
                "Anne Hidalgo is the mayor of Paris.",
                "the mayor of Paris is Anne Hidalgo"
            ],
            "GENERATED_ANSWER": "The mayor of paris is anne hidalgo",
            "MISSING_WORD": ".",
            "Need_LM_Assessing": true,
            "CONFIGURATION_FILE": [
                "BERT_A2_GPT2_gpt2-medium.json",
                "BERT_A2_XLM_xlm-mlm-en-2048.json",
                "BERT_A2_BERT_bert-base-cased.json",
                "BERT_A1_BERT_bert-base-cased.json",
                "BERT_A1_GPT2_gpt2-medium.json",
                "BERT_A1_BERT_bert-base-multilingual-cased.json",
                "BERT_A2_BERT_bert-base-uncased.json",
                "BERT_A2_XLNET_xlnet-large-cased.json",
                "BERT_A2_GPT2_gpt2.json",
                "BERT_A2_XLM_xlm-clm-enfr-1024.json",
                "BERT_A2_GPT_openai-gpt.json",
                "BERT_A1_GPT2_gpt2.json",
                "BERT_A1_BERT_bert-base-uncased.json",
                "BERT_A2_XLM_xlm-mlm-enfr-1024.json",
                "BERT_A2_BERT_bert-large-cased.json",
                "BERT_A1_XLNET_xlnet-large-cased.json",
                "BERT_A1_XLM_xlm-clm-enfr-1024.json",
                "BERT_A1_GPT2_gpt2-large.json",
                "BERT_A1_BERT_bert-large-cased.json",
                "BERT_A2_GPT2_gpt2-large.json",
                "BERT_A1_XLM_xlm-mlm-enfr-1024.json",
                "BERT_A2_BERT_bert-base-multilingual-cased.json",
                "BERT_A1_XLM_xlm-mlm-en-2048.json",
                "BERT_A1_GPT_openai-gpt.json"
            ]
        },
        "60": {
            "ID": "quereo_57.51",
            "QUESTION": "Who produced the most films?",
            "SHORT_ANSWER": [
                "Jesse_L._Lasky"
            ],
            "FULL_EXPERT_ANSWER": [
                "Hal B. Wallis has produced the largest number of films.",
                "Jesse L. Lasky produced the most films"
            ],
            "GENERATED_ANSWER": "Jesse l. lasky produced the most films",
            "MISSING_WORD": ".",
            "Need_LM_Assessing": false,
            "CONFIGURATION_FILE": [
                "BERT_A2_GPT2_gpt2-medium.json",
                "BERT_A2_XLM_xlm-mlm-en-2048.json",
                "BERT_A2_BERT_bert-base-cased.json",
                "BERT_A1_BERT_bert-base-cased.json",
                "BERT_A1_GPT2_gpt2-medium.json",
                "BERT_A1_BERT_bert-base-multilingual-cased.json",
                "BERT_A2_BERT_bert-base-uncased.json",
                "BERT_A2_XLNET_xlnet-large-cased.json",
                "BERT_A2_GPT2_gpt2.json",
                "BERT_A2_XLM_xlm-clm-enfr-1024.json",
                "BERT_A2_GPT_openai-gpt.json",
                "BERT_A1_GPT2_gpt2.json",
                "BERT_A1_BERT_bert-base-uncased.json",
                "BERT_A2_XLM_xlm-mlm-enfr-1024.json",
                "BERT_A2_BERT_bert-large-cased.json",
                "BERT_A1_XLNET_xlnet-large-cased.json",
                "BERT_A1_XLM_xlm-clm-enfr-1024.json",
                "BERT_A1_GPT2_gpt2-large.json",
                "BERT_A1_BERT_bert-large-cased.json",
                "BERT_A2_GPT2_gpt2-large.json",
                "BERT_A1_XLM_xlm-mlm-enfr-1024.json",
                "BERT_A2_BERT_bert-base-multilingual-cased.json",
                "BERT_A1_XLM_xlm-mlm-en-2048.json",
                "BERT_A1_GPT_openai-gpt.json"
            ]
        },
        "61": {
            "ID": "quereo_65.57",
            "QUESTION": "What was the original occupation of the inventor of Lego?",
            "SHORT_ANSWER": [
                "Carpentry"
            ],
            "FULL_EXPERT_ANSWER": [
                "The inventor of Lego was an entrepreneur, carpenter.",
                "the original occupation of the inventor of Lego was Carpentry",
                "Carpentry was the original occupation of the inventor of Lego"
            ],
            "GENERATED_ANSWER": "The original occupation of the inventor of lego was carpentry",
            "MISSING_WORD": ":",
            "Need_LM_Assessing": true,
            "CONFIGURATION_FILE": [
                "BERT_A2_GPT2_gpt2-medium.json",
                "BERT_A2_XLM_xlm-mlm-en-2048.json",
                "BERT_A2_BERT_bert-base-cased.json",
                "BERT_A1_BERT_bert-base-cased.json",
                "BERT_A1_GPT2_gpt2-medium.json",
                "BERT_A1_BERT_bert-base-multilingual-cased.json",
                "BERT_A2_BERT_bert-base-uncased.json",
                "BERT_A2_XLNET_xlnet-large-cased.json",
                "BERT_A2_GPT2_gpt2.json",
                "BERT_A2_XLM_xlm-clm-enfr-1024.json",
                "BERT_A2_GPT_openai-gpt.json",
                "BERT_A1_GPT2_gpt2.json",
                "BERT_A1_BERT_bert-base-uncased.json",
                "BERT_A2_XLM_xlm-mlm-enfr-1024.json",
                "BERT_A2_BERT_bert-large-cased.json",
                "BERT_A1_XLNET_xlnet-large-cased.json",
                "BERT_A1_XLM_xlm-clm-enfr-1024.json",
                "BERT_A1_GPT2_gpt2-large.json",
                "BERT_A1_BERT_bert-large-cased.json",
                "BERT_A2_GPT2_gpt2-large.json",
                "BERT_A1_XLM_xlm-mlm-enfr-1024.json",
                "BERT_A2_BERT_bert-base-multilingual-cased.json",
                "BERT_A1_XLM_xlm-mlm-en-2048.json",
                "BERT_A1_GPT_openai-gpt.json"
            ]
        },
        "62": {
            "ID": "quereo_74.63",
            "QUESTION": "Which country has the most official languages?",
            "SHORT_ANSWER": [
                "Russia"
            ],
            "FULL_EXPERT_ANSWER": [
                "Russia is the country with the hightest number of official languages.",
                "Russia has the most official languages"
            ],
            "GENERATED_ANSWER": "Russia has the most official languages",
            "MISSING_WORD": ".",
            "Need_LM_Assessing": false,
            "CONFIGURATION_FILE": [
                "BERT_A2_GPT2_gpt2-medium.json",
                "BERT_A2_XLM_xlm-mlm-en-2048.json",
                "BERT_A2_BERT_bert-base-cased.json",
                "BERT_A1_BERT_bert-base-cased.json",
                "BERT_A1_GPT2_gpt2-medium.json",
                "BERT_A1_BERT_bert-base-multilingual-cased.json",
                "BERT_A2_BERT_bert-base-uncased.json",
                "BERT_A2_XLNET_xlnet-large-cased.json",
                "BERT_A2_GPT2_gpt2.json",
                "BERT_A2_XLM_xlm-clm-enfr-1024.json",
                "BERT_A2_GPT_openai-gpt.json",
                "BERT_A1_GPT2_gpt2.json",
                "BERT_A1_BERT_bert-base-uncased.json",
                "BERT_A2_XLM_xlm-mlm-enfr-1024.json",
                "BERT_A2_BERT_bert-large-cased.json",
                "BERT_A1_XLNET_xlnet-large-cased.json",
                "BERT_A1_XLM_xlm-clm-enfr-1024.json",
                "BERT_A1_GPT2_gpt2-large.json",
                "BERT_A1_BERT_bert-large-cased.json",
                "BERT_A2_GPT2_gpt2-large.json",
                "BERT_A1_XLM_xlm-mlm-enfr-1024.json",
                "BERT_A2_BERT_bert-base-multilingual-cased.json",
                "BERT_A1_XLM_xlm-mlm-en-2048.json",
                "BERT_A1_GPT_openai-gpt.json"
            ]
        },
        "63": {
            "ID": "quereo_78.67",
            "QUESTION": "What is the biggest stadium in Spain?",
            "SHORT_ANSWER": [
                "Camp_Nou"
            ],
            "FULL_EXPERT_ANSWER": [
                "Spain’s largest stadium is Camp Nou",
                "the biggest stadium in Spain is Camp Nou",
                "Camp Nou is the biggest stadium in Spain"
            ],
            "GENERATED_ANSWER": "The biggest stadium in spain is camp nou",
            "MISSING_WORD": ".",
            "Need_LM_Assessing": true,
            "CONFIGURATION_FILE": [
                "BERT_A2_GPT2_gpt2-medium.json",
                "BERT_A2_XLM_xlm-mlm-en-2048.json",
                "BERT_A2_BERT_bert-base-cased.json",
                "BERT_A1_BERT_bert-base-cased.json",
                "BERT_A1_GPT2_gpt2-medium.json",
                "BERT_A1_BERT_bert-base-multilingual-cased.json",
                "BERT_A2_BERT_bert-base-uncased.json",
                "BERT_A2_XLNET_xlnet-large-cased.json",
                "BERT_A2_GPT2_gpt2.json",
                "BERT_A2_XLM_xlm-clm-enfr-1024.json",
                "BERT_A2_GPT_openai-gpt.json",
                "BERT_A1_GPT2_gpt2.json",
                "BERT_A1_BERT_bert-base-uncased.json",
                "BERT_A2_XLM_xlm-mlm-enfr-1024.json",
                "BERT_A2_BERT_bert-large-cased.json",
                "BERT_A1_XLNET_xlnet-large-cased.json",
                "BERT_A1_XLM_xlm-clm-enfr-1024.json",
                "BERT_A1_GPT2_gpt2-large.json",
                "BERT_A1_BERT_bert-large-cased.json",
                "BERT_A2_GPT2_gpt2-large.json",
                "BERT_A1_XLM_xlm-mlm-enfr-1024.json",
                "BERT_A2_BERT_bert-base-multilingual-cased.json",
                "BERT_A1_XLM_xlm-mlm-en-2048.json",
                "BERT_A1_GPT_openai-gpt.json"
            ]
        },
        "64": {
            "ID": "quereo_87.73",
            "QUESTION": "Which pope succeeded John Paul II?",
            "SHORT_ANSWER": [
                "Pope_Benedict_XVI"
            ],
            "FULL_EXPERT_ANSWER": [
                "Benedict XVI succeeds John Paul II.",
                "Pope Benedict XVI succeeded John Paul II"
            ],
            "GENERATED_ANSWER": "Pope benedict xvi succeeded john paul ii",
            "MISSING_WORD": ".",
            "Need_LM_Assessing": false,
            "CONFIGURATION_FILE": [
                "BERT_A2_GPT2_gpt2-medium.json",
                "BERT_A2_XLM_xlm-mlm-en-2048.json",
                "BERT_A2_BERT_bert-base-cased.json",
                "BERT_A1_BERT_bert-base-cased.json",
                "BERT_A1_GPT2_gpt2-medium.json",
                "BERT_A1_BERT_bert-base-multilingual-cased.json",
                "BERT_A2_BERT_bert-base-uncased.json",
                "BERT_A2_XLNET_xlnet-large-cased.json",
                "BERT_A2_GPT2_gpt2.json",
                "BERT_A2_XLM_xlm-clm-enfr-1024.json",
                "BERT_A2_GPT_openai-gpt.json",
                "BERT_A1_GPT2_gpt2.json",
                "BERT_A1_BERT_bert-base-uncased.json",
                "BERT_A2_XLM_xlm-mlm-enfr-1024.json",
                "BERT_A2_BERT_bert-large-cased.json",
                "BERT_A1_XLNET_xlnet-large-cased.json",
                "BERT_A1_XLM_xlm-clm-enfr-1024.json",
                "BERT_A1_GPT2_gpt2-large.json",
                "BERT_A1_BERT_bert-large-cased.json",
                "BERT_A2_GPT2_gpt2-large.json",
                "BERT_A1_XLM_xlm-mlm-enfr-1024.json",
                "BERT_A2_BERT_bert-base-multilingual-cased.json",
                "BERT_A1_XLM_xlm-mlm-en-2048.json",
                "BERT_A1_GPT_openai-gpt.json"
            ]
        },
        "65": {
            "ID": "quereo_88.74",
            "QUESTION": "Who is the son of Sonny and Cher?",
            "SHORT_ANSWER": [
                "Chaz_Bono"
            ],
            "FULL_EXPERT_ANSWER": [
                "Sonny and Cher’s son’s name is Chaz Bono.",
                "Chaz Bono is the son of Sonny and Cher",
                "the son of Sonny and Cher is Chaz Bono"
            ],
            "GENERATED_ANSWER": "The son of sonny and cher is chaz bono",
            "MISSING_WORD": "\"",
            "Need_LM_Assessing": true,
            "CONFIGURATION_FILE": [
                "BERT_A2_GPT2_gpt2-medium.json",
                "BERT_A2_XLM_xlm-mlm-en-2048.json",
                "BERT_A2_BERT_bert-base-cased.json",
                "BERT_A1_BERT_bert-base-cased.json",
                "BERT_A1_GPT2_gpt2-medium.json",
                "BERT_A1_BERT_bert-base-multilingual-cased.json",
                "BERT_A2_BERT_bert-base-uncased.json",
                "BERT_A2_XLNET_xlnet-large-cased.json",
                "BERT_A2_GPT2_gpt2.json",
                "BERT_A2_XLM_xlm-clm-enfr-1024.json",
                "BERT_A2_GPT_openai-gpt.json",
                "BERT_A1_GPT2_gpt2.json",
                "BERT_A1_BERT_bert-base-uncased.json",
                "BERT_A2_XLM_xlm-mlm-enfr-1024.json",
                "BERT_A2_BERT_bert-large-cased.json",
                "BERT_A1_XLNET_xlnet-large-cased.json",
                "BERT_A1_XLM_xlm-clm-enfr-1024.json",
                "BERT_A1_GPT2_gpt2-large.json",
                "BERT_A1_BERT_bert-large-cased.json",
                "BERT_A2_GPT2_gpt2-large.json",
                "BERT_A1_XLM_xlm-mlm-enfr-1024.json",
                "BERT_A2_BERT_bert-base-multilingual-cased.json",
                "BERT_A1_XLM_xlm-mlm-en-2048.json",
                "BERT_A1_GPT_openai-gpt.json"
            ]
        },
        "66": {
            "ID": "quereo_100.85",
            "QUESTION": "What is Batman's real name?",
            "SHORT_ANSWER": [
                "Bruce_Wayne"
            ],
            "FULL_EXPERT_ANSWER": [
                "Bruce Wayne is Batman’s real name.",
                "Batman's real name is Bruce Wayne"
            ],
            "GENERATED_ANSWER": "Batman's real name is bruce wayne",
            "MISSING_WORD": "\"",
            "Need_LM_Assessing": true,
            "CONFIGURATION_FILE": [
                "BERT_A2_GPT2_gpt2-medium.json",
                "BERT_A2_XLM_xlm-mlm-en-2048.json",
                "BERT_A2_BERT_bert-base-cased.json",
                "BERT_A1_BERT_bert-base-cased.json",
                "BERT_A1_GPT2_gpt2-medium.json",
                "BERT_A1_BERT_bert-base-multilingual-cased.json",
                "BERT_A2_BERT_bert-base-uncased.json",
                "BERT_A2_XLNET_xlnet-large-cased.json",
                "BERT_A2_GPT2_gpt2.json",
                "BERT_A2_XLM_xlm-clm-enfr-1024.json",
                "BERT_A2_GPT_openai-gpt.json",
                "BERT_A1_GPT2_gpt2.json",
                "BERT_A1_BERT_bert-base-uncased.json",
                "BERT_A2_XLM_xlm-mlm-enfr-1024.json",
                "BERT_A2_BERT_bert-large-cased.json",
                "BERT_A1_XLNET_xlnet-large-cased.json",
                "BERT_A1_XLM_xlm-clm-enfr-1024.json",
                "BERT_A1_GPT2_gpt2-large.json",
                "BERT_A1_BERT_bert-large-cased.json",
                "BERT_A2_GPT2_gpt2-large.json",
                "BERT_A1_XLM_xlm-mlm-enfr-1024.json",
                "BERT_A2_BERT_bert-base-multilingual-cased.json",
                "BERT_A1_XLM_xlm-mlm-en-2048.json",
                "BERT_A1_GPT_openai-gpt.json"
            ]
        },
        "67": {
            "ID": "quereo_116.96",
            "QUESTION": "In which country is the Limerick Lake?",
            "SHORT_ANSWER": [
                "Canada"
            ],
            "FULL_EXPERT_ANSWER": [
                "Limerick Lake is in Canada",
                "the Limerick Lake is in Canada"
            ],
            "GENERATED_ANSWER": "The limerick lake is in canada",
            "MISSING_WORD": "in",
            "Need_LM_Assessing": true,
            "CONFIGURATION_FILE": [
                "BERT_A2_GPT2_gpt2-medium.json",
                "BERT_A2_XLM_xlm-mlm-en-2048.json",
                "BERT_A2_BERT_bert-base-cased.json",
                "BERT_A1_BERT_bert-base-cased.json",
                "BERT_A1_GPT2_gpt2-medium.json",
                "BERT_A1_BERT_bert-base-multilingual-cased.json",
                "BERT_A2_BERT_bert-base-uncased.json",
                "BERT_A2_XLNET_xlnet-large-cased.json",
                "BERT_A2_GPT2_gpt2.json",
                "BERT_A2_XLM_xlm-clm-enfr-1024.json",
                "BERT_A2_GPT_openai-gpt.json",
                "BERT_A1_GPT2_gpt2.json",
                "BERT_A1_BERT_bert-base-uncased.json",
                "BERT_A2_XLM_xlm-mlm-enfr-1024.json",
                "BERT_A2_BERT_bert-large-cased.json",
                "BERT_A1_XLNET_xlnet-large-cased.json",
                "BERT_A1_XLM_xlm-clm-enfr-1024.json",
                "BERT_A1_GPT2_gpt2-large.json",
                "BERT_A1_BERT_bert-large-cased.json",
                "BERT_A2_GPT2_gpt2-large.json",
                "BERT_A1_XLM_xlm-mlm-enfr-1024.json",
                "BERT_A2_BERT_bert-base-multilingual-cased.json",
                "BERT_A1_XLM_xlm-mlm-en-2048.json",
                "BERT_A1_GPT_openai-gpt.json"
            ]
        },
        "68": {
            "ID": "quereo_129.107",
            "QUESTION": "When did Latvia join the EU?",
            "SHORT_ANSWER": [
                "May 01, 2004"
            ],
            "FULL_EXPERT_ANSWER": [
                "Latvia joined Europe on 1st of May 2004.",
                "Latvia joined the EU on May 01, 2004"
            ],
            "GENERATED_ANSWER": "Latvia joined the eu on may 01, 2004",
            "MISSING_WORD": "on",
            "Need_LM_Assessing": true,
            "CONFIGURATION_FILE": [
                "BERT_A2_GPT2_gpt2-medium.json",
                "BERTMULTI_A2_GPT_openai-gpt.json",
                "BERTMULTI_A1_BERT_bert-base-uncased.json",
                "BERTMULTI_A2_GPT2_gpt2.json",
                "BERTMULTI_A1_XLM_xlm-mlm-en-2048.json",
                "BERT_A2_GPT2_gpt2.json",
                "BERT_A2_GPT_openai-gpt.json",
                "BERTMULTI_A2_GPT2_gpt2-large.json",
                "BERTMULTI_A1_GPT_openai-gpt.json",
                "BERTMULTI_A2_GPT2_gpt2-medium.json",
                "BERT_A2_GPT2_gpt2-large.json",
                "BERT_A1_XLM_xlm-mlm-en-2048.json",
                "BERT_A1_GPT_openai-gpt.json",
                "BERTMULTI_A2_BERT_bert-large-cased.json"
            ]
        },
        "69": {
            "ID": "quereo_134.111",
            "QUESTION": "What is the official language of Suriname?",
            "SHORT_ANSWER": [
                "Dutch"
            ],
            "FULL_EXPERT_ANSWER": [
                "The official language of Suriname is Dutch",
                "Dutch is the official language of Suriname"
            ],
            "GENERATED_ANSWER": "The official language of suriname is dutch",
            "MISSING_WORD": "་",
            "Need_LM_Assessing": true,
            "CONFIGURATION_FILE": [
                "BERT_A2_GPT2_gpt2-medium.json",
                "BERT_A2_XLM_xlm-mlm-en-2048.json",
                "BERT_A2_BERT_bert-base-cased.json",
                "BERT_A1_BERT_bert-base-cased.json",
                "BERT_A1_GPT2_gpt2-medium.json",
                "BERT_A1_BERT_bert-base-multilingual-cased.json",
                "BERT_A2_BERT_bert-base-uncased.json",
                "BERT_A2_XLNET_xlnet-large-cased.json",
                "BERT_A2_GPT2_gpt2.json",
                "BERT_A2_XLM_xlm-clm-enfr-1024.json",
                "BERT_A2_GPT_openai-gpt.json",
                "BERT_A1_GPT2_gpt2.json",
                "BERT_A1_BERT_bert-base-uncased.json",
                "BERT_A2_XLM_xlm-mlm-enfr-1024.json",
                "BERT_A2_BERT_bert-large-cased.json",
                "BERT_A1_XLNET_xlnet-large-cased.json",
                "BERT_A1_XLM_xlm-clm-enfr-1024.json",
                "BERT_A1_GPT2_gpt2-large.json",
                "BERT_A1_BERT_bert-large-cased.json",
                "BERT_A2_GPT2_gpt2-large.json",
                "BERT_A1_XLM_xlm-mlm-enfr-1024.json",
                "BERT_A2_BERT_bert-base-multilingual-cased.json",
                "BERT_A1_XLM_xlm-mlm-en-2048.json",
                "BERT_A1_GPT_openai-gpt.json"
            ]
        },
        "70": {
            "ID": "quereo_24.23",
            "QUESTION": "How many people live in Poland?",
            "SHORT_ANSWER": [
                "38483957"
            ],
            "FULL_EXPERT_ANSWER": [
                "Poland has 38483957 inhabitants.",
                "38483957 people live in Poland"
            ],
            "GENERATED_ANSWER": "38483957 people live in poland",
            "MISSING_WORD": ".",
            "Need_LM_Assessing": true,
            "CONFIGURATION_FILE": [
                "BERT_A2_XLM_xlm-mlm-en-2048.json",
                "BERTMULTI_A1_GPT2_gpt2.json",
                "BERT_A1_GPT2_gpt2-medium.json",
                "BERTMULTI_A1_GPT2_gpt2-large.json",
                "BERTMULTI_A2_XLM_xlm-mlm-en-2048.json",
                "BERT_A2_GPT2_gpt2.json",
                "BERT_A1_GPT2_gpt2.json",
                "BERTMULTI_A1_GPT2_gpt2-medium.json",
                "BERT_A1_BERT_bert-base-uncased.json",
                "BERT_A2_XLM_xlm-mlm-enfr-1024.json",
                "BERTMULTI_A1_GPT_openai-gpt.json",
                "BERTMULTI_A2_XLM_xlm-mlm-enfr-1024.json",
                "BERT_A1_GPT2_gpt2-large.json",
                "BERT_A1_BERT_bert-large-cased.json",
                "BERTMULTI_A2_BERT_bert-base-multilingual-cased.json",
                "BERT_A1_GPT_openai-gpt.json"
            ]
        },
        "71": {
            "ID": "quereo_136.113",
            "QUESTION": "How many telecommunication organizations are located in Belgium?",
            "SHORT_ANSWER": [
                "6"
            ],
            "FULL_EXPERT_ANSWER": [
                "There are 6 telecommunication organizations in Belgium.",
                "6 telecommunication organizations are located in Belgium"
            ],
            "GENERATED_ANSWER": "6 telecommunication organizations are located in belgium",
            "MISSING_WORD": ".",
            "Need_LM_Assessing": true,
            "CONFIGURATION_FILE": [
                "BERT_A2_XLM_xlm-mlm-en-2048.json",
                "BERT_A2_BERT_bert-base-cased.json",
                "BERTMULTI_A1_BERT_bert-large-cased.json",
                "BERTMULTI_A1_GPT2_gpt2.json",
                "BERTMULTI_A2_GPT_openai-gpt.json",
                "BERT_A1_GPT2_gpt2-medium.json",
                "BERTMULTI_A2_GPT2_gpt2.json",
                "BERTMULTI_A1_GPT2_gpt2-large.json",
                "BERTMULTI_A2_BERT_bert-base-cased.json",
                "BERT_A2_GPT_openai-gpt.json",
                "BERT_A1_GPT2_gpt2.json",
                "BERTMULTI_A2_BERT_bert-base-uncased.json",
                "BERTMULTI_A1_GPT2_gpt2-medium.json",
                "BERT_A2_XLM_xlm-mlm-enfr-1024.json",
                "BERTMULTI_A1_GPT_openai-gpt.json",
                "BERTMULTI_A2_XLM_xlm-mlm-enfr-1024.json",
                "BERT_A1_GPT2_gpt2-large.json",
                "BERTMULTI_A1_BERT_bert-base-multilingual-cased.json",
                "BERT_A1_GPT_openai-gpt.json",
                "BERTMULTI_A2_XLNET_xlnet-large-cased.json"
            ]
        },
        "72": {
            "ID": "quereo_51.46",
            "QUESTION": "What was the first Queen album?",
            "SHORT_ANSWER": [
                "Queen"
            ],
            "FULL_EXPERT_ANSWER": [
                "Queen is the title of Queen’s first album.",
                "Queen was the first Queen album",
                "the first Queen album was Queen"
            ],
            "GENERATED_ANSWER": "The first queen album was queen",
            "MISSING_WORD": ",",
            "Need_LM_Assessing": true,
            "CONFIGURATION_FILE": [
                "BERT_A1_BERT_bert-base-cased.json",
                "BERT_A1_GPT2_gpt2-medium.json",
                "BERT_A1_BERT_bert-base-multilingual-cased.json",
                "BERT_A1_GPT2_gpt2.json",
                "BERT_A1_BERT_bert-base-uncased.json",
                "BERT_A1_XLNET_xlnet-large-cased.json",
                "BERT_A1_XLM_xlm-clm-enfr-1024.json",
                "BERT_A1_GPT2_gpt2-large.json",
                "BERT_A1_BERT_bert-large-cased.json",
                "BERT_A1_XLM_xlm-mlm-enfr-1024.json",
                "BERT_A1_XLM_xlm-mlm-en-2048.json",
                "BERT_A1_GPT_openai-gpt.json"
            ]
        },
        "73": {
            "ID": "quereo_115.95",
            "QUESTION": "How many people live in the capital of Australia?",
            "SHORT_ANSWER": [
                "381488"
            ],
            "FULL_EXPERT_ANSWER": [
                "381488 people are living in the capital of Australia.",
                "381488 people live in the capital of Australia"
            ],
            "GENERATED_ANSWER": "381488 people live in the capital of australia",
            "MISSING_WORD": ".",
            "Need_LM_Assessing": true,
            "CONFIGURATION_FILE": [
                "BERTMULTI_A1_GPT2_gpt2.json",
                "BERTMULTI_A1_BERT_bert-base-uncased.json",
                "BERTMULTI_A1_GPT2_gpt2-large.json",
                "BERTMULTI_A2_BERT_bert-base-cased.json",
                "BERTMULTI_A2_BERT_bert-base-uncased.json",
                "BERTMULTI_A1_GPT2_gpt2-medium.json",
                "BERTMULTI_A1_GPT_openai-gpt.json",
                "BERTMULTI_A2_XLM_xlm-mlm-enfr-1024.json"
            ]
        },
        "74": {
            "ID": "quereo_28.27",
            "QUESTION": "When did Boris Becker end his active career?",
            "SHORT_ANSWER": [
                "June 25, 1999"
            ],
            "FULL_EXPERT_ANSWER": [
                "Boris Becker ended his career on January 1, 1999.",
                "Boris Becker ended his active career on June 25, 1999"
            ],
            "GENERATED_ANSWER": "Boris becker ended his active career on june 25, 1999",
            "MISSING_WORD": "on",
            "Need_LM_Assessing": true,
            "CONFIGURATION_FILE": [
                "BERTMULTI_A2_GPT_openai-gpt.json",
                "BERTMULTI_A2_GPT2_gpt2.json",
                "BERTMULTI_A1_XLM_xlm-mlm-en-2048.json",
                "BERTMULTI_A2_XLM_xlm-mlm-en-2048.json",
                "BERTMULTI_A2_GPT2_gpt2-large.json",
                "BERTMULTI_A2_GPT2_gpt2-medium.json"
            ]
        },
        "75": {
            "ID": "quereo_8.7",
            "QUESTION": "How many movies did Park Chan-wook direct?",
            "SHORT_ANSWER": [
                "14"
            ],
            "FULL_EXPERT_ANSWER": [
                "Park Chan-wook directed 14 movies."
            ],
            "GENERATED_ANSWER": "Park chan-wook directed 14 movies",
            "MISSING_WORD": "-",
            "Need_LM_Assessing": true,
            "CONFIGURATION_FILE": [
                "BERTMULTI_A1_BERT_bert-base-uncased.json",
                "BERTMULTI_A1_XLM_xlm-mlm-en-2048.json",
                "BERTMULTI_A1_BERT_bert-base-cased.json",
                "BERTMULTI_A2_GPT2_gpt2-large.json",
                "BERTMULTI_A1_GPT_openai-gpt.json"
            ]
        },
        "76": {
            "ID": "quereo_96.81",
            "QUESTION": "What languages do they speak in Pakistan?",
            "SHORT_ANSWER": [
                "Urdu",
                "English"
            ],
            "FULL_EXPERT_ANSWER": [
                "In Paskistan Urdu and English are spoken.",
                "they speak Urdu and English in Pakistan",
                "in Pakistan, they speak Urdu and English"
            ],
            "GENERATED_ANSWER": "They speak urdu and english in pakistan",
            "MISSING_WORD": ".",
            "Need_LM_Assessing": true,
            "CONFIGURATION_FILE": [
                "BERT_A1_GPT2_gpt2.json",
                "BERT_A1_GPT_openai-gpt.json"
            ]
        },
        "77": {
            "ID": "quereo_93.78",
            "QUESTION": "Who was Vincent van Gogh inspired by?",
            "SHORT_ANSWER": [
                "Adolphe_Monticelli",
                "Anton_Mauve"
            ],
            "FULL_EXPERT_ANSWER": [
                "Vincent Van Gogh was inspired by Adolphe Monticelli and Anton Mauve."
            ],
            "GENERATED_ANSWER": "Vincent van gogh was inspired by adolphe monticelli and anton mauve",
            "MISSING_WORD": ":",
            "Need_LM_Assessing": true,
            "CONFIGURATION_FILE": [
                "BERT_A1_GPT_openai-gpt.json"
            ]
        }
    }
}